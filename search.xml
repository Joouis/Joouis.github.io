<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2019 泰国行游记（一）</title>
    <url>/2019/2019-thai-trip-1/</url>
    <content><![CDATA[<p>2018年底是个值得纪念的时刻，不仅离开了福报厂开始第二段职业生涯，更重要地是看开了许多尘世俗念，开始追随自己内心深处所想。</p>
<p>想法之一就是出国玩。长这么大，最远也就跑到一个能叫海外不能叫国外的岛上。此外在一个号称东南亚第一的电商平台干了快一年，却一次东南亚都没去过，说起来未免也太好笑。虽然想一个人跑出去玩，但又被传统道德观念绑着，最后就选在2019年春节这个最冷的时候带我妈（后面简称M）去泰国取暖。反正四海为家，在哪过年不都是过。</p>
<p>想法既然有了，那么说干就干。确定好具体时间，订机票、订酒店、制定行程、订车，一气呵成。估算了费用，也不贵，这个最后再总结。旅程从1.29起到2.5结束，总共8天，前三天在华欣自驾游，后五天在曼谷走走看看，考虑到我们两个人都是第一次出国玩，时间可以说是很充裕了。</p>
<h2 id="1-26-1-28"><a href="#1-26-1-28" class="headerlink" title="1.26 - 1.28"></a>1.26 - 1.28</h2><p>机票是1.28晚飞，提前给M买了1.26的高铁到苏州，带她看下牙齿，顺便再转转苏州。1.26睡到中午，随便吃点东西就去苏州北站接人。苏州北比较新，但其实是很小的一个站，略荒，停车场倒是很大，接人方便。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-1.avif"></p>
<p>1.27上午先去美奥口腔看牙，M的烂牙看得我心惊胆战。似乎有很多人都是这样，不少事情明明有解决办法，却可以一直拖下去，还总有理由解释。对待健康问题，相比挂号看医生，更喜欢在家看电视上的 “名医”讲座，然后对于自己的病情不停地 “我觉得…”。你试图跟他们讲道理，讲什么是重要的、高优先级的事，他们不仅搞不清楚，脾气还不小。</p>
<p>下午带M参观了一下微软苏州的办公环境，顺便把车停在了公司的地下车库。苏州那几天天气转好，蓝天白云，可见度很高。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-2.avif"></p>
<p>由于乘大巴到浦东机场大概需要三个小时的时间，加上国际航班建议提前三个小时抵达机场，以及考虑到大巴横跨上海时可能会堵车的风险，我们在1.28下午一点便出发前往苏州北广场客运站。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-3.avif"></p>
<p>接下来都很顺利，准时抵达浦东机场，吃了个中式套餐，等待两个小时，值机，再等待，登机，准备出发目的地。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-4.avif" alt="春秋航空9C8891"></p>
<h2 id="1-29"><a href="#1-29" class="headerlink" title="1.29"></a>1.29</h2><p>经过大约五个小时的飞行，于当地时间一点十五分左右抵达素万那普机场。飞机落地后的第一件事，当然是换上提前买好的预付流量卡。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-5.avif"></p>
<p>入关人山人海，虽然已经提前在国内签好了泰国的签注，但还是花了大概一个小时排队，没有碰到抽查两万泰铢现金的检查。考虑到白天就要自驾去华欣，那边支付宝普及率可能不高（实际上曼谷可用支付宝的地方也不多，有些店家说他们的机器坏了，还有些直接不支持），因此入关后首先在ATM取了一万泰铢现金。彼时已经当地时间两点多（北京时间三点多），拖着疲惫的身躯，准备联系酒店。</p>
<p>在规划时已经考虑到深夜抵达的情况，因此在Agoda上订了一个机场附近提供接机服务的小旅馆。酒店接机服务需提前告知，在酒店的回复中提到了碰面点在Gate 3和4之间。我们从关口走出来大概是Gate十几，在往Gate 4走时我便提前给酒店打电话询问具体的碰面点。结果就第一次感受到了泰国人浓厚的英语口音… 顺带一提在泰国的一个礼拜里，聊得最顺畅的一次居然是和一位德国佬，在拷龙穴洞口等人时寒暄了几句。尽管电话里没听懂酒店在讲什么鸟，不过当我们走到Gate 4时，就大概知道是怎么一回事了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-6.avif"></p>
<p>很快我找到了印有自己名字的牌子，和栏杆后面的工作人员确认后，等待十来分钟，终于踏上酒店之路。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-7.avif"></p>
<p>小面包冷气开得很足，车开得也很快，大概十来分钟就到了酒店。酒店在一条比较深的巷子里，乍看之下不错，但内部其实比较老旧，因此并没拍照片。和前台不顺畅地沟通入住后，发现没有牙膏，想起巷口有一家全家，我便一个人走出来备点必需品。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-8.avif"></p>
<p>深夜的巷子非常宁静，很久没有这么晚还在外面闲荡过，直到遇到好几条还没睡觉的看家狗… 俗话说得好，好狗不咬人，我拖着疲惫的双腿机智地绕开了他们，成功抵达了目的地全家，满满地亲切感，虽然我更爱7-11🤣。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-9.avif"></p>
<p>考虑到第二天早上起来就要返回机场取车，除了牙膏外还买了些吃的喝的以及漱口水。看看账单，物价和国内差不多。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-10.avif"></p>
<p>返回酒店时，之前看门的狗子们全都不见了，好在户外热气腾腾并没有阴风吹过。再次回到酒店已是三点多，隐约记得洗漱完睡去是四点后的事了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-11.avif"></p>
<p>早上计划十点起，十点半坐酒店接驳车返回机场，然后去 ThaiRent 柜台取车。取车时间订在11:30，主要考虑到三天后还车需要一大早从华欣开回来，单程不堵车也要大概三小时。之所以说是计划十点起，就是并没有按计划来。 M提前一个多小时起来洗漱整理（黑人问号脸.avif），弄得我半睡半醒，非常痛苦，返回机场的第一件事就是来杯星巴克…</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-12.avif"></p>
<p>素万那普机场修得还是蛮不错的。昨天抵达时已经路过了租车柜台，再次返回轻车熟路。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-13.avif"></p>
<p>我是通过国内的租租车平台在当地的ThaiRent公司租了一辆丰田致炫，也就是新款的雅力士。费用和国内租A级车差不多，人生地不熟果断买全险，只求省心。车的话题后面还会再聊，包括在泰国开车的心得以及致炫的驾驶感受。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-14.png"></p>
<p>实际取车花了大概十几分钟，挺快。和网上信息略有不同的是车实际是三箱版，颜值不错，尤其前脸挺精神的，就是这大灯不是氙气或者LED差点意思。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-15.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-16.avif"></p>
<p>如果你在国内租过车，对流程一定不陌生。照例检查一圈车的外观有无剐蹭，胎压是否正常，然后进入车内确认油箱是否满格，并一一拍照留存。都没有问题，签好字，未来三天车就是我的了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-17.avif"></p>
<p>上车后首先把从国内准备好的手机支架装上，连接AUX音频线，打开音乐播放器，设置好Google Map导航，瞬间就找回自己熟悉的开车氛围🤘。</p>
<p>泰国是右方向盘靠左行驶，车的设计和左舵车几乎对称。上路其实很快就能适应，一是跟着车流走，二是有导航提示靠左或靠右行驶。唯一有点不习惯的是雨刮器和方向灯的位置也做了对调，因此刚开始打方向时很容易下意识用左手开启了雨刮。</p>
<p>和之前网上做的功课相似，泰国人开车比较守规矩，很少加塞，大多数都是老老实实一个车道走到底，比国内好太多。其次曼谷是真的堵，我们计划走高速绕开曼谷市中心，直奔华欣，但出曼谷还是花了一个多小时，市郊一带非常堵。另外谷歌地图不太好用，在一些岔路口没有提示，导致有一次错误调头来回多走了好几公里的堵车路段。后来才摸到规律：高速上通常靠右直行，如果允许调头时最右侧会多出一条车道显示U Turn；最左侧车道通常是左转车道，但在高速上一般是调头（通过一个U型立交桥完成）或者下高速，具体还是要看交通指示牌。</p>
<p>与国内德系车、日系车和国产车三分天下不同，在泰国的马路上稍作观察你就会发现这里是日系车的天下，准确说是丰田的天下。丰田占了一大半，其余常见一点的也就三菱、五十铃、宝马等品牌。懂车一点的朋友都知道大多数日系车省心省油，这也是为啥国内跑滴滴的车基本都日系三个牌子，在泰国见到这番景象，还是很感慨日本车的有口皆碑。其次车的类型，基本上轿车和皮卡对半分。以往由于国内一些政策关系，皮卡在路上见得少，车评节目里提的也少，属于中国市场的冷门车型。结果现在路上一半以上跑着皮卡，除了感到新鲜外，也能体会到它的实用性。和国内的面包车类似，泰国人民既有拿皮卡运人的，也有拿皮卡拉货的。不过相比于 “你不知道五菱宏光里会走出几个人” 的段子，泰国这边的皮卡有的给尾部封了顶再载货运人，更多的是没封顶直接拖货，有的货物堆积三四米之高（看上去真的摇摇欲坠😂），装载量秒杀五菱宏光。</p>
<p>由于我一直在开车，路上的风景没法拍。高速看起来略显破旧，肯定没法和国内比。在没出曼谷之前马路两侧有不少大的商店，包括很多加油站、便利店一体的类服务区，等出了曼谷之后就是一片大农村的景象，不过加油站服务区还是很多。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-18.avif" alt="服务区"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-19.avif" alt="高速路"></p>
<p>大概下午三点，距离华欣目的地还有一个小时左右车程，我们停在一个服务区吃点东西权当午饭。进来第一感觉人不多，可以说有点冷清，尽管能看到 “美食城” 这样明显吸引国人的招牌。猜测有能力自驾游的中国游客并不多，很可能是有旅游大巴定时运送他们到此消费。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-20.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-21.avif"></p>
<p>出于一贯对服务区食物水准的怀疑，肥仔我果断选择了全球知名大品牌KFC。应该是泰国的欧美游客非常多，所以服务员基本上都会讲一点英语，即使口音非常重。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-22.avif"></p>
<p>值得一提的是，服务区的男小便池都是开放式的，观察了好几个都是这样🙃。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-23.avif"></p>
<p>出曼谷后其实就不堵了，尽管之前在网上看说会有交警躲在路边偷偷测速，但看到当地车一个比一个开得快，我也就毫不客气地入乡随俗。Google Map导航体验很一般，不会提示限速，对于最终目的地的导航也在最后一里路上出了点偏差。好在问过路边小店的老板，最终顺利找到了预定的公寓。</p>
<p>M是个严重洁癖患者，出去玩可以不去景点，但一定要隔一两天洗一次衣服，把卫生做得干干净净。所以住宿的第一要求是要有洗衣机，方便晒衣服。我自己出去玩比较喜欢通过Airbnb订民宿，主要是体验各式各样的住宿。这次在泰国我选择体验几个不同的公寓，相比民宿一般房间更新、有更好地物业管理、大多数还带泳池等公共设施。此外泰国的公寓还支持外国人投资，永久产权，之前就有阿里的同事买了一套，还在内网分享心路历程。在此次行程中，华欣的公寓提供公共的洗衣机和烘干机，投币即用，而曼谷的两处公寓则是房间内就配备了滚筒洗衣机。</p>
<p>入住的公寓环境不错，出入时前台小姐、保安都会问好，和在台北住高级公寓时一个体验。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-24.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-42.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-25.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-26.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-28.avif"></p>
<p>进入室内、乘坐电梯全部需要刷卡。一楼普遍被称为Ground。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-29.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-30.avif"></p>
<p>楼道墙上贴有火灾逃生指南。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-34.avif"></p>
<p>房间一室一厅，还算温馨。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-31.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-32.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-33.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-36.avif"></p>
<p>房间内依然没有牙膏，也没洗漱用品，更重要的是没有洗衣液，一切在7-11搞定。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-35.avif"></p>
<p>去小七的路上才发现住的地方离海边非常近，步行只要五分钟。海边也没什么人，处处写满了宁静与悠闲。非常舒服~~</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-37.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-38.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-39.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-40.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-41.avif"></p>
<p>买好东西，迅速杀回公寓，M要洗衣服。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-27.avif"></p>
<p>此处发生了两次争吵。<br>第一次是M不会用洗衣机，让我来倒腾，其实也就是选好各个配置然后启动洗衣机。M不相信洗衣机提示的时间，需要两个多小时洗好，一定要守在那里观察一阵洗衣机的行为（再次黑人问号脸.jpg），此时我又累又饿，想回房间吃点东西，但门禁卡限制我们俩必须同进退，就吵了一架。<br>第二次吵是M觉得已经洗好了，催我跟她下来拿衣服。上去前我就拿手机记了时，跟她说了还没好，她不信，开始哔哔她的感觉，然后下去就被打脸了，依然还觉得自己感觉没错。真的很无语。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-43.avif"></p>
<p>两袋子衣服，包含羽绒服、厚棉裤，人家洗衣机洗两个小时怎么了。（不是我不提衣服，是我手脏只配刷电梯、开房门🙂）。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-44.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-45.avif"></p>
<p>等晒好衣服，终于可以出发觅食！想着这是来泰国正儿八经的第一顿，总得吃点好的呀，于是开车前往华欣夜市。到的时候天已黑，路过喧闹的夜市后想赶紧找地方停车，看到铁轨对面似乎很空旷，于是嚣张地开了过去，停在了一排车旁。第二天再来才知道隔壁就是华欣火车站😂。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-46.avif"></p>
<p>夜市应该是华欣唯二喧闹的地方（另一个就是华欣火车站吧），和国内有的一比，一眼望去全是人，只不过欧美人居多，居然没怎么见到中国游客，太神奇啦。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-47.avif"></p>
<p>饥肠辘辘的我们就近选择了一家看起来生意很好的餐厅。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-48.avif"></p>
<p>在等餐的过程中，欣赏了泰国大叔为隔壁桌老夫妇调酒的表演。可惜开车不喝酒，我也只能看看了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-49.avif"></p>
<p>终于，我们的食物来了，果不其然饥饿状态下容易点多… 味道还不错，但可能前一夜睡眠不足，加上开车奔波太累，食欲不是很好，也没吃太多。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-50.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-51.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-52.avif"></p>
<p>最后，吃饱喝足，散步逛一逛夜市，买杯芒果汁，结束今天这漫长的一回合。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-53.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-1-54.avif"></p>
<h2 id="下一集"><a href="#下一集" class="headerlink" title="下一集"></a>下一集</h2><p>《<a href="https://joouis.com/2019/2019-thai-trip-2/">2019 泰国行游记（二）</a>》</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>thailand</tag>
        <tag>self-driving</tag>
        <tag>bangkok</tag>
        <tag>hua hin</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 泰国行游记（二）</title>
    <url>/2019/2019-thai-trip-2/</url>
    <content><![CDATA[<h2 id="上一集"><a href="#上一集" class="headerlink" title="上一集"></a>上一集</h2><p>《<a href="https://joouis.com/2019/2019-thai-trip-1/">2019 泰国行游记（一）</a>》</p>
<h2 id="1-30"><a href="#1-30" class="headerlink" title="1.30"></a>1.30</h2><p>今天的首要任务是补上昨日错过的景点。原本计划在29号来华欣的路上顺便游玩曼谷郊区的玛哈猜海鲜市场和美功铁道市场，然而Airbnb的房东在入住前一天告知要在下午三点前入住，因为她的仆人 (maid) 三点后就下班了。因此昨天只好一路向南先入住，把这两个行程挪到了今天上午。</p>
<p>从路线上看其实略蛋疼，景点挨着曼谷，往回开大概要两小时，这一来一回就去四个小时（明天去拷汪宫也是往回开😂）。还好我们俩都很佛系，对于景点看多少是多少，不求打卡，不喜人多。礼拜三的高速上车很少，一路开得还是很爽。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-1.avif"></p>
<p>等快到目的地附近时，道路开始变榨，路边停着皮卡、货车，经验告诉我该寻找停车场了。虽然顺利找到一个停车场，但收钱的大叔不懂英文，笔画半天最后还是一个年轻男生来帮忙翻译搞定。停车很便宜，两小时只花了฿10。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-2.avif"></p>
<p>沿着大叔指示的吃饭方向，我们边找边逛。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-3.avif"></p>
<p>再往前走，明显闻到了海腥味。马路两旁卖着各种各样的海鲜，还有些水果、杂货店，不过感觉车来车往运货的多，实际买东西的人少。考虑到工作日加上国内还没放假，可以理解。</p>
<p>我个人除了各种虾外不爱吃海鲜，完全不认识这些品种，对价格也没什么感想。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-4.avif"></p>
<p>虾脚和螃蟹脚都是蓝色的，有点神奇。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-5.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-6.avif"></p>
<p>哪里都有猫猫哈哈。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-7.avif"></p>
<p>一条巷子全是卖货的，除了便利店，没有吃饭的地。大中午，很晒。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-8.avif"></p>
<p>好在巷子不算长，走到尽头就是河边。鲁迅先生曾说过，只要是有景的地方，就会景观餐厅… 果然我们找到一家河景餐厅，由一个露台加铁棚搭成，出人意料的凉爽。</p>
<p>至于景嘛，只能说视野不错，很接地气… 没了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-9.avif"></p>
<p>右手边是个码头，当地的居民很多骑着摩托乘坐轮渡跨越他钦河 (Tha Chin River)。可以看到他钦河比较脏，不过后来看湄南河其实也差不多。毕竟发展中国家嘛~</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-10.avif"></p>
<p>这次出来玩所有手机都是用Samsung Note9拍摄，AI技术加持使照片直出效果已经达到不错的水准，尽管偶尔曝光控制还是差点火候。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-11.avif"></p>
<p>大中午工人还在不停地卸货。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-12.avif"></p>
<p>其实上面这些照片都是后话，饿得要死的我们第一件事当然是点餐😂。看菜单价格不贵，考虑到是海鲜类菜品，和国内比还算便宜。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-13.avif"></p>
<p>我们点了一个类似冬阴功的海鲜小火锅、一份鱿鱼圈和一份青菜。好吧其实点菜时也是半看半猜，比如那个小火锅的英文就是上图中的”Shrimp with sweet sour spicy Soup &amp; vegetable fried”，给M介绍时就直译为了蔬菜酸辣虾汤🤣。汤的卖相一般，但味道不错！</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-14.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-15.avif"></p>
<p>鱿鱼圈看起来也很普通，青菜就直接不拍了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-16.avif"></p>
<p>顺带一提，水也是收费的，不过很便宜。此外这个玻璃瓶设计还有点民族特色，酷。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-17.avif"></p>
<p>吃得差不多吹吹风，我们准备慢慢转回停车场，前往下一站美功铁道市场。泰国最大的海鲜集散地，看过就好。</p>
<p>在路上第一次遇到了超长时间的红灯，后面发现很常见。奇葩的是这个计时器只能显示两位数，实际等待时长超过一百秒…</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-18.avif"></p>
<p>还没到景点就感受到了小镇上（可能不是个镇，但破破烂烂的样子就姑且称为镇吧）与之不符的热闹，主要是人和车多了不少。停车场基本停满了轿车和旅游大巴，边上也有不少卖吃喝的小摊。给M买了个椰汁，发现并不好喝。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-19.avif"></p>
<p>步行几分钟，就到了传说中的美功铁道市场，各种火车徐徐开来的打卡拍照胜地。拍了好几张才发现这个招牌是斜的…</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-20.avif"></p>
<p>作为网红景点，游客非常多。加上天热，导致我们游玩的兴致并不高，就走马观花四处看看。</p>
<p>从马路的一侧望过去。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-21.avif"></p>
<p>不远处是售票口，可以看到火车站不仅仅是个摆设。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-22.avif"></p>
<p>走到头回望。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-23.avif"></p>
<p>马路另一边就是铁道市场，两旁的各种小摊把铁轨挤在了中间。逛这一边时M嫌人多已经歇着了，我也是浅尝辄止，当再往前一点发现人多得水泄不通时也果断放弃。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-24.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-25.avif"></p>
<p>就这么简单转了半小时，感到索然无味，也热，就吹着空调直接开回华欣，前往原定的景点龙普多寺。</p>
<p>下午很困，和昨天一样开到一半找个服务区休息一下，买杯咖啡，哦对了顺便加个油。不得不夸赞一下日本车，真的省油。之前租过一次神车飞度，第一次开日本车，跑了千把公里，对其低油耗印象深刻。这次的致炫从满油开到不足1&#x2F;4的样子，跑了四百公里出头，尽管高速居多，还是觉得省油，秒杀我的老欧宝😭。</p>
<p>喜欢人少车少的感觉。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-26.avif"></p>
<p>PTT，除了BBS还是加油站，哈哈。这边91号汽油对应国内的92号。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-27.avif"></p>
<p>一升六块多，比国内便宜一点。不过我一直秉承一个观点：油耗只要不是特别夸张就行，十几万、几十万的车都买了，还在乎那点油钱吗？</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-28.avif"></p>
<p>肥仔的日常伴侣，各种泡面。M基本每天早上就吃这些东西… </p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-29.avif"></p>
<p>见到了熟悉的身影！只是… 出口商品就是不便宜呀！</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-30.avif"></p>
<p>随手翻了翻书刊杂志，发现这个漫画还挺有意思的，龙王很可爱~</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-31.avif"></p>
<p>这饮料巨甜，受不了，喝几口就扔了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-32.avif"></p>
<p>走前看到一个别具热带气息的饮品店，布景好看。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-33.avif"></p>
<p>选择去龙普多寺是之前在网上看不少游记都提到了这个地方，评分、评价都不错，游客少、安静、保佑出入平安。位置距离我们民宿南边 40 公里的样子，沿路返回开进华欣区域后，应该是下了高速，明显感觉走在乡间道路上，马路两旁更多是树林，与曼谷到华欣一段完全是两种风情。开到的时候太阳也差不多快要落山，不那么晒，正好适合走走。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-34.avif"></p>
<p>寺庙内几乎没什么人，很好停车，下车后首先看到了华欣市的介绍立牌。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-35.avif"></p>
<p>寺庙不大，一眼就能看到龙普多高僧的佛像。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-36.avif"></p>
<p>两旁各有一只三头象护法，上面还坐着一个和尚。写这篇文章时才注意到是三头象，当时居然忽略了另外两个头以为就是普通的大象。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-37.avif"></p>
<p>大象身上嵌了不少硬币，可能是游客祈祷时放的吧，我也学着放了枚硬币在上面😆。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-38.avif"></p>
<p>龙普多高僧的雕像栩栩如生，阳光下显得庄严而温暖。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-39.avif"></p>
<p>虔诚地祈祷。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-40.avif"></p>
<p>照例寺庙里有金碧辉煌的宫殿，在阳光照耀下很好看。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-41.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-42.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-43.avif"></p>
<p>在大门口回望龙普多佛像。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-44.avif"></p>
<p>停车场旁还有个小型的纪念台，展示了泰国人民丰富的想象力——一名骑马将军带领着一群公鸡军队。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-45.avif"></p>
<p>其实也有别的动物，例如大象、老虎、马，都被做的这么小😂。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-46.avif"></p>
<p>不到一小时逛完龙普多寺后，迎来了今天的最后一站，华欣火车站。</p>
<p>路上终于抓拍到了皮卡载人的画面：在乡间道路上看着景吹着风，非常有fu~</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-47.avif"></p>
<p>临近华欣县时恰逢学校放学，路上可以看到家长开车或骑摩托载小朋友们放学，路过学校门口还能看到一点学生。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-48.avif"></p>
<p>放学、下班高峰，略堵，过铁轨这段路时走走停停，朝着这个方向再走一点就是华欣火车站。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-49.avif"></p>
<p>等我们在车站附近找好停车位、走到火车站时，恰好有一班从曼谷开往边境城镇那拉提瓦的火车停在站内，和小时候不带空调的绿皮车有些像。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-50.avif"></p>
<p>初看华欣火车站，小而美，很有特色。由于很多游客会选择坐火车到华欣，因此车站的人气相应的也会变高，可以看到不少带着行李拍照的游客。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-51.avif"></p>
<p>有一些欧洲火车站的影子。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-52.avif"></p>
<p>轨道间的灯、对面展示的旧机头也很有特色。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-53.avif"></p>
<p>车站其实很小，一眼就能望全。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-54.avif"></p>
<p>这购票处的布局像极了台南站，可能小型火车站大抵如此。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-55.avif"></p>
<p>不好意思我们之前从停车场直接走进了火车站，现在才看到了大门，好看。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-56.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-57.avif"></p>
<p>火车站逛完，最后就是走去夜市找点吃的。泰国很多地方都会立上他们国王的画像，我只想说让国王在外面这么风吹雨淋的合适么😅。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-58.avif"></p>
<p>不多见的热带雨林款房子。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-59.avif"></p>
<p>夜市旁的水果店。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-60.avif"></p>
<p>晚餐选择了路边一家看起来生意不错的餐厅，点餐后才感觉到靠马路有些吵。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-61.avif"></p>
<p>他们的开放式厨房，和家里的看起来没什么两样。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-62.avif"></p>
<p>依然点了三个菜，味道还行吧，可能也饿了，基本都吃光光。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-63.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-2-64.avif"></p>
<p>今天也算跑了不少地方，开了两三百公里。所以晚上就直接回家休息，明天拷龙穴走起。</p>
<h2 id="下一集"><a href="#下一集" class="headerlink" title="下一集"></a>下一集</h2><p>《<a href="https://joouis.com/2019/2019-thai-trip-3/">2019 泰国行游记（三）</a>》</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>thailand</tag>
        <tag>self-driving</tag>
        <tag>bangkok</tag>
        <tag>hua hin</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 泰国行游记（三）</title>
    <url>/2019/2019-thai-trip-3/</url>
    <content><![CDATA[<h2 id="上一集"><a href="#上一集" class="headerlink" title="上一集"></a>上一集</h2><p>《<a href="https://joouis.com/2019/2019-thai-trip-2/">2019 泰国行游记（二）</a>》</p>
<h2 id="1-31"><a href="#1-31" class="headerlink" title="1.31"></a>1.31</h2><p>今天是在华欣游玩的最后一天，明天一大早就要开车赶回素万那普机场还车。今天的第一站并不是拷汪宫，而是Big C超市，我们需要再买一个行李箱。来的时候还穿着冬天的衣服，一个大点的行李箱装夏装足矣。然而在前天洗完冬装后，发现一个箱子要装下所有东西比较吃力，因此决定再买一个。买前当然也在网上做了功课，还真有人在泰国买过行李箱，推荐的Big C，号称物美价廉。不过那个帖子有点老，我又在Big C的线上商城确认过，有行李箱卖，价格确实不贵😝。Big C（和其便利店Mini Big C）基本随处可见，刚好最近的一家距离我们就几公里，可以说是顺路来采购。</p>
<p>路上随处可见 Big C 的招牌。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-1.avif"></p>
<p>一大早也没什么人来买东西，空空荡荡的停车场。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-2.avif"></p>
<p>这里的肥仔水好像比国内便宜啊。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-3.avif"></p>
<p>然而转了一圈都没有看到我们想要的行李箱，只好去收银台问店员，有没有luggage或者suitcase，结果收银小哥一脸懵逼地看着我们，后面又来了俩同事也是如此。多亏发达的移动互联网，沟通不畅下找了张行李箱的图片给他们看，人家立刻恍然大悟😂，指引我们走到目标前——原来行李箱摆在收银台外面的区域。</p>
<p>价格和网上一样，并且20寸的箱子居然和24寸相同，那当然是买大的会感觉赚到哈哈。橙色显得有点廉价，于是选了低调的蓝色，反正后面也要被飞机托运给摧残。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-4.avif"></p>
<p>汇率还不错，感谢支付宝😊。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-5.avif"></p>
<p>行李箱对面好像是卖潜水器材的区域，不多见所以拍一张，灯光打得比较亮。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-6.avif"></p>
<p>买到了需要的东西，我们继续出发，前往拷汪宫。谷歌地图把我们带到了应该是拷汪宫的后山入口，而景点的入口其实在山的另一边。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-7.avif"></p>
<p>路边居然还看到了🐒，生态很好嘛哈哈。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-8.avif"></p>
<p>问过一个骑摩托的大叔后，重新导航，很快来到了真正的入口。景点就是景点，一眼能看出来。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-9.avif"></p>
<p>门口的纪念品商店，这家挺有当地特色。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-10.avif"></p>
<p>外国人的票价是来回缆车50和门票150共200泰铢，对比国内的门票价格不得不说真的非常便宜。在检票口就要搭乘缆车，这缆车票还没捂热就还回去了，也拍张留个纪念吧。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-11.avif"></p>
<p>这是门票，背面有拷汪宫的简介。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-12.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-13.avif"></p>
<p>门票上其实已经交待了现在的拷汪宫是一个包含国家博物馆的历史公园，不过这个公园在山上，因此绝大多数游客需要搭乘这个缆车上山下山。山并不高，缆车行程也就几分钟而已。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-14.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-15.avif"></p>
<p>拷汪宫是泰国国王拉玛四世建立的皇宫，通常介绍它都会提到发哥闯荡好莱坞时的作品《安娜与国王》。不过拷汪宫只是电影的原型，至于为什么不直接来这里取景呢，看看维基百科的介绍就知道了。</p>
<blockquote>
<p>电影涉嫌对泰国皇室不敬，泰国当局至今仍然禁止上画和播映。连取景拍摄和盗版影碟都一律禁止。</p>
</blockquote>
<p>皇宫给人的最大感受就是幽静典雅，不愧是皇室的居住地！</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-16.avif"></p>
<p>我们从最近的国家博物馆逛起，就两个字，好看！虽然不到百年的历史，但这些石柱上都刻满了岁月的痕迹。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-17.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-18.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-19.avif"></p>
<p>皇宫的植物摆放为建筑增色不少，设计得太棒了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-20.avif"></p>
<p>博物馆的招牌来一张。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-21.avif"></p>
<p>很喜欢这个台阶扶手缠绕的设计。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-22.avif"></p>
<p>很不巧这个宫殿暂未开放，在网上可以看到里面应该是个摆放着大长桌和国王画像的餐厅。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-23.avif"></p>
<p>接着往上走到Western Peak的最高处。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-24.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-25.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-26.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-27.avif"></p>
<p>想象国王俯瞰自己的土地。还有，最近几天曼谷居然有雾霾…😯。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-28.avif"></p>
<p>远处可以看到Middle Peak的佛塔和Eastern Peak的另一座皇宫和佛塔，不过大中午又晒又热，加上还没补充能量，就远远眺望一下当去过了😝。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-29.avif"></p>
<p>这个宫殿有不少西式建筑的味道。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-30.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-31.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-32.avif"></p>
<p>敢问路在何方？太远的咱不去🙏。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-33.avif"></p>
<p>另一块距离入口很近的建筑是用来接待国宾的住处和剧场。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-34.avif"></p>
<p>如果可以，还挺想在这住一宿，刚好咱也是外国来的客人嘛哈哈。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-35.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-36.avif"></p>
<p>剧场长27米宽8米，早期其实是有顶的。这个应该是二维码介绍，不过太热了没兴致扫。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-37.avif"></p>
<p>这个白色的椅子很抓人眼球。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-38.avif"></p>
<p>随便看看就往回走咯。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-39.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-40.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-41.avif"></p>
<p>最后看一眼拷汪宫的地图，同样充满了历史厚重感。可以看到我们只游玩了白字”PlAN OF PHRA NAKHON KHIRI”下方的一带区域，另外还能看到右下角就是我们一开始走错的后山入口，那个牌匾细节都和我拍的一模一样👍。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-42.avif"></p>
<p>还是搭乘缆车下山，没想到出发口的墙壁上也雕刻了不少图案。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-43.avif"></p>
<p>炎炎夏日，毫无食欲。从拷汪宫出来，我们决定晚点再吃午饭，先去拷龙穴。途径 7-11 补充点水和咖啡，对面居然是一所有着百年历史的中学。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-44.avif"></p>
<p>还没到景点，就可以看到警惕🐒的安全提醒，感觉这群家伙已经在各大景区臭名昭著了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-45.avif"></p>
<p>拷龙穴不要门票，停车也免费，真是太佛心。几个工作人员在树下乘凉，除了告诉我们all free外，又再次提醒把包括水在内的东西锁在车里。感觉周围的环境还在建设中，一开始还以为这是洞口，然而好像是个介绍场馆。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-46.avif"></p>
<p>在它的左手边，才是洞穴入口。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-47.avif"></p>
<p>走过这扇门，发现洞穴还挺深的。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-48.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-49.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-50.avif"></p>
<p>一走下来就能看到佛像。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-51.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-52.avif"></p>
<p>洞穴内的光线其实比较昏暗，阳光透过顶部的洞口照射进来，配合庄严的佛像，令人肃穆。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-53.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-54.avif"></p>
<p>拷龙穴至少也有百年的历史。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-55.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-56.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-57.avif"></p>
<p>很喜欢这个洞口阳光打进来的画面，有种新生的感觉？</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-58.avif"></p>
<p>就这么走马观花看一下，今天的两个景点就这么游完啦。回家之前先去沿路的一个商城吃点东西，难得招牌里只有绿营大厂OPPO。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-59.avif"></p>
<p>依然选择了肥仔快乐餐，好吧一开始导航的目的地就是这里。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-60.avif"></p>
<p>这个点餐和取餐台相当简洁，另外右侧桌子上提供了标准插座和USB插座，很贴心。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-61.avif"></p>
<p>差点都忘了衣服上还贴着拷汪宫的徽章。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-62.avif"></p>
<p>吃完去商城逛了下，和国内类似，这边也会展览卖车，只不过从SUV换成了皮卡。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-63.avif"></p>
<p>路上比较常见的皮卡大多是两座，这个四座的卖近二十万人民币，也不知道是贵还是便宜。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-64.avif"></p>
<p>商场的厕所指示牌有点个性。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-65.avif"></p>
<p>回去休息了一会，等到晚上我又出来走走，顺便买点吃的。公寓旁边这个酒店民宿看起来很棒的样子。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-66.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-67.avif"></p>
<p>公寓里住了不少上了年纪的老外，也不知道是来华欣度假呢还是养老。走到海边，路上偶尔也能看到骑车或者跑步的老外。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-68.avif"></p>
<p>又看到一个高大上的酒店。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-69.avif"></p>
<p>路边除了住宿外，也有些吃饭的小店和排挡。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-70.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-71.avif"></p>
<p>远远就能听到这边的歌声，唱得很嗨。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-72.avif"></p>
<p>我买了个类似煎饼之类的东西，甜的，不好吃😭。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-73.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-74.avif"></p>
<p>各种杆子上也能看到卖房卖公寓的广告。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-75.avif"></p>
<p>最后回到家，又喝了一瓶大爱的豆奶。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-3-76.avif"></p>
<p>明天就要返回曼谷，在华欣的两天半过得非常充实，给这个安静的地方一个大大的好评。确实如网上所评价的那样，这个海边小城是一个适合带老人来放松的好去处。</p>
<h2 id="下一集"><a href="#下一集" class="headerlink" title="下一集"></a>下一集</h2><p>《<a href="https://joouis.com/2019/2019-thai-trip-4/">2019 泰国行游记（四）</a>》</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>thailand</tag>
        <tag>self-driving</tag>
        <tag>bangkok</tag>
        <tag>hua hin</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 泰国行游记（四）</title>
    <url>/2019/2019-thai-trip-4/</url>
    <content><![CDATA[<h2 id="上一集"><a href="#上一集" class="headerlink" title="上一集"></a>上一集</h2><p>《<a href="https://joouis.com/2019/2019-thai-trip-3/">2019 泰国行游记（三）</a>》</p>
<h2 id="2-1"><a href="#2-1" class="headerlink" title="2.1"></a>2.1</h2><p>七点起来收拾一下，退房，取回一千泰铢的押金，便踏上返程之路。回曼谷的前半段非常顺畅，当然我也喜欢开快车（咦），到达曼谷周边才八点半左右。曼谷车多已是常识，碰上早高峰，开始走走停停，恰好有机会拍到曼谷交界的欢迎碑。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-1.avif"></p>
<p>十一点半还车，因此即使略堵，我们也不慌不忙。谷歌地图还根据拥堵路段推荐了其他路线，果断改道走之。最后到达机场附近的加油站时，居然才九点四十，非常顺利！</p>
<p>和国内相同，满油取车，满油还车，倒是难得见到壳牌的加油站。像致炫这种油耗低的车，可以稍微提前一段距离就加满油，能省一丢丢油钱，不过对我这种开惯 “油老虎” 的人来说没差了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-2.avif"></p>
<p>还车地点和取车时一致，进入机场的高架后导航就不好使了，靠着指示牌成功回到抵达层的指定Gate。还车手续更快，联系ThaiRent几分钟后就有工作人员过来，简单检查下车的外观没问题，让我签个字便把车开走了。</p>
<p>国内的C2C租车平台一般会限制每天最多跑200公里（神州之类的B2C没限制），而我们三天跑了952公里，这波不亏！</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-3.avif"></p>
<p>接下来我们乘坐机场地铁前往市中心，开始本次曼谷之行。不得不说哪个城市的地铁都冷得要命。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-4.avif"></p>
<p>由于下午三点才能入住公寓，我们先转乘地铁到Sukhumvit站，在附近的Terminal 21百货吃点东西。转乘过程中要先出站，走在天桥上就能看到拥堵。不仅机场地铁沿线的这条主干道Phetchaburi Road堵，我们住宿附近的Sukhumvit Road也非常堵。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-5.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-6.avif"></p>
<p>地铁站附近的自助寄存柜。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-7.avif"></p>
<p>等地铁中，看着电视联想到泰国的各种创意广告被微博、公众号广泛传播，已经成为一种文化现象。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-8.avif"></p>
<p>不一会抵达Terminal 21，顾名思义，这个百货大楼以机场航站楼为主题，无论是内部装潢、工作人员的服饰都是机场题材，就连出入大门都要遵循In和Out的指示😂。除此之外还能看到中国结、灯笼等中国元素，可想而知是为几天后的中国春节做准备。</p>
<p>商场大概有十几层，和吃有关的店基本都在高层。我们慢悠悠转上去看了一圈后，我为在曼谷的第一顿饭做了一个保守的决定——Pepper Lunch。之前在武汉吃过Pepper Lunch，是一家主营铁板牛排的快餐店，很对肥仔我的胃口。虽然考虑过到国外就不要重复国内能吃到的味道，不过鉴于在华欣都没有吃过传统的中式偏咸口味，果断选择了它。事实证明… 真香！另外也就是这家店，说他们的支付宝系统坏了…</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-9.avif"></p>
<p>吃完也才下午一点，又去星巴克喝杯咖啡，撑得不行，到两点出头我们开始拖着行李箱步行前往公寓。地铁站延伸的天桥还挺长的，相比下面的砖块路要好走很多。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-10.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-11.avif"></p>
<p>这位是王后吗？</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-12.avif"></p>
<p>沿路走有大城市的拥挤和压迫感，这里的东亚风公园算很好的调剂。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-13.avif"></p>
<p>因为想多体验不同的公寓，所以在曼谷我分别订了两间，每间各住两天。第一间是处于闹市区、我们即将入住的网红公寓Park 24，位于Sukhumvit 24 Alley。这条巷子很窄，人行道更窄，拖着行李箱走很痛苦，时不时遇到个电线杆就要走到马路上绕开。马路是一个双向单车道，毫无疑问的堵。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-14.avif"></p>
<p>而就是这么一个窄窄的巷子里卧虎藏龙，有包括希尔顿在内的一些高档酒店、餐厅、酒吧等等。Park 24自然也不差，2016年底的楼盘，酒店式公寓，现在应该要三万多人民币一平。公寓的房东有一部分就是中国人，我租的这间也是，之前在阿里时还看过同事分享来曼谷投资公寓的心路历程，很有意思。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-15.avif"></p>
<p>在一楼大厅闲晃时认识了一位来自上海、现在长期在曼谷工作的房东，她正在和她的上海朋友签租房合同。据她说公寓主要做长租，所以像我们这样的短租其实是有问题的… 可以从广告上看到月租价格大概五千人民币起，和上海等一线城市差不多。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-16.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-17.avif"></p>
<p>电梯大门也要刷卡。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-18.avif"></p>
<p>老规矩先来信箱取房卡。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-19.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-20.avif"></p>
<p>实体按键几乎完全被触屏取代，只剩下报警的两个按钮。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-21.avif"></p>
<p>高楼大厦间，没想到还有这种小号足球场和篮球场。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-22.avif"></p>
<p>我们住五楼，房间就是典型的公寓户型，麻雀虽小五脏俱全。另外这边的公寓也是精装修还配家电，家电全是大品牌，比国内房东自己配的品质要好不少。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-23.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-24.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-25.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-26.avif"></p>
<p>浴室和厕所分开的设计很棒，另外抽屉式房门的设计节省了不少空间，赞。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-27.avif"></p>
<p>安顿好之后直奔顶楼的网红露天泳池参观，不过旱鸭子我也只能看看。和照片上差不多，只是少了点灯光的点缀。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-28.avif"></p>
<p>就算不游泳，顶楼的视野也很棒。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-30.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-31.avif"></p>
<p>隔壁楼的顶层看起来也是同样的泳池。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-4-32.avif"></p>
<p>M到公寓后的主旋律依然是洗衣服洗澡，然后就不出门了，要我去附近7-11带点吃的回来当晚餐。我吃完后独自出门进行今天最后一个项目，体验泰式 “马杀鸡”。</p>
<p>程序猿这个职业长期面对电脑，久坐、低头、错误坐姿，绝大多数人都有颈椎和腰椎的毛病，算是我们这行的职业病。我在国内就定期去推拿按摩，这次开了三天的车，当然要体验一下大名鼎鼎的泰式按摩。周围有好几家店，无脑选择Google评价最高分，体验完后感觉确实不错。泰式按摩更多的通过全身关节的拉伸达到放松效果，与中式按摩以穴位揉捏手法为主不同。</p>
<p>总得来说作为一个长期肩颈酸痛的人，我还是更喜欢中式按摩。跟师傅说明哪里不舒服后，有针对性地推拿酸痛区域的穴位，可能过程中痛点，但按完后效果更好。</p>
<p>就这样放松完，度过了在曼谷的第一天，悠哉，舒服。</p>
<h2 id="下一集"><a href="#下一集" class="headerlink" title="下一集"></a>下一集</h2><p>《<a href="https://joouis.com/2019/2019-thai-trip-5/">2019 泰国行游记（五）</a>》</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>thailand</tag>
        <tag>self-driving</tag>
        <tag>bangkok</tag>
        <tag>hua hin</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 泰国行游记（五）</title>
    <url>/2019/2019-thai-trip-5/</url>
    <content><![CDATA[<h2 id="上一集"><a href="#上一集" class="headerlink" title="上一集"></a>上一集</h2><p>《<a href="https://joouis.com/2019/2019-thai-trip-4/">2019 泰国行游记（四）</a>》</p>
<h2 id="2-2"><a href="#2-2" class="headerlink" title="2.2"></a>2.2</h2><p>OMG不知不觉泰国行游记已经写到第五篇，内容有点碎，不过我正希望通过这种形式尽可能全面地记录旅行过程中有趣的点点滴滴。昨天休整一天，今天开刷曼谷最有名的几个景点，第一站是距离我们十几分钟车程（前提是不堵车）的四面佛。</p>
<p>从今天开始终于有机会用上号称东南亚独角兽的打车软件Grab，之前在社区看到过不少他们的招聘信息，吹得很漂亮，福利待遇也不错。实际上手APP做得一般，在国内时想提前绑定支付宝居然没入口，和期望有不小的差距，毕竟国内滴滴都做得这么成熟了。另外难得作为一名外国游客体验几天后，发现APP的一大痛点是虽然通过内置翻译服务解决了乘客和司机的线上沟通问题，然而线下基本还是没法交流。上车后多少都有些尴尬，懂英文的人真不多。最后Grab的价格和出租车相比（前提是出租车不宰客🙄）也不算便宜。不过这样的O2O产品还是很实用，除了打车功能外，待会还会提到关于它的特殊用法👻。</p>
<p>在Grab上打到的第一辆车是丰田Fortuner，运气不错。尽管后面才知道这款车在泰国很常见，不过能坐上一辆汉兰达级别的出租车，还是很不错。不一会到了四面佛，下车后能明显感觉到旅游景点的人多，那场面，那是相当壮观，真是锣鼓喧天、鞭炮齐鸣、红旗招展、人山人海… 但四面佛景点特别小，就是一尊佛龛，紧靠着购物商场。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-1.avif"></p>
<p>四面佛金光闪闪，一体四面，之前在华欣也见过类似的佛像。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-2.avif"></p>
<p>这应该是我们待过时间最短的景点，驻留十来分钟后，我们便准备打车去今日的重头戏——曼谷大皇宫。还是毫不犹豫打开Grab叫车，然而等了五分钟都没人接单，考虑到天气炎热、周围拥堵的情况下等车接单、过来都不容易，且附近的出租车很多，于是决定直接拦出租车。早就听说曼谷的出租车司机会宰客，我们也毫不意外地遇上了。这里就要提到Grab的另一个功能，规范市场，提供参考费用信息，从而防止被宰。</p>
<p>在国内养成的防宰习惯，拦下出租车后首先问司机多少钱，老头开头就说三百块，和Grab上报价180相去甚远，我直接说太贵了不坐，他立马改口两百。这算是一个能接受的价格，也省得再等，招呼M上车出发。在后排居然看到出租车的价目表就挂在这… 好家伙，这些司机真是能宰一个是一个啊，反正那么多中国游客人傻钱多，价目表就是个摆设不怕人看。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-3.avif"></p>
<p>虽说是说好价后司机应该不会绕路，我还是下意识打开Google Maps时不时看看路线。一路上比较通畅，大概半小时抵达大皇宫附近，明显感受到了汹涌的人潮。我们一开始没找到入口在哪，先沿着宫殿围墙走了几分钟。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-4.avif"></p>
<p>看看这斑驳的宫殿墙壁，确实需要保养了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-5.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-6.avif"></p>
<p>抓拍到了非常old school的巴士！很长，这要放在国内的话应该是过去那种两节车厢的连体公交车。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-7.avif"></p>
<p>经安保人员的指示，走完为疏导客流设置的一个大圈，进入了大皇宫的第一道围墙。一进大门就可以听到警察和工作人员大妈在大声叫喊，拦住着装露出膝盖的游客去旁边的商店买条裤子穿上（还好穿拖鞋他们不管），很不幸我的短裤也不及膝盖… 裤子很薄，印着类似青花瓷图案，200泰铢不贵，只是排队又多花了时间。下图中间的男高个老外手里拿的应该就是刚买的裤子，有兴趣自己网上找图看吧~</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-8.avif"></p>
<p>在售票口前的左手边有一块大草坪，看着非常舒服，好不容易取到一次没人的景。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-9.avif"></p>
<p>买好票，正式进入大皇宫。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-10.avif"></p>
<p>首先映入眼帘的是走廊，墙上画满了壁画，柱子上则挂了一些看不懂的牌匾。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-11.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-12.avif"></p>
<p>中间的各种宫殿就四个字，金碧辉煌，非常高级！很佩服泰国人擅长利用金色、玻璃和阳光，使宫殿呈现出非同寻常的视觉感官。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-13.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-14.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-15.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-16.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-17.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-18.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-19.avif"></p>
<p>看到这个台阶下的石雕莫名会想到关公。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-20.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-21.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-22.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-23.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-24.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-25.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-26.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-27.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-28.avif"></p>
<p>这是一个微缩版的石雕宫殿喔。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-29.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-30.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-31.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-32.avif"></p>
<p>『佛像并非装饰。尊重乃常识也』。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-33.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-34.avif"></p>
<p>厕所附近居然有荷花盛开，美。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-35.avif"></p>
<p>扶手上的小石狮，非常中国元素啊。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-36.avif"></p>
<p>离开前最后再瞅一眼。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-37.avif"></p>
<p>没想到走出来后还能看到各式各样的宫殿建筑。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-38.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-39.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-40.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-41.avif"></p>
<p>这个正在修建的宫殿看起来也非常厉害，闪闪发光。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-42.avif"></p>
<p>从大皇宫出来已经两点出头，急需补充能量，我们就近选择了马路对面的一家海军餐厅解决午饭。不得不夸赞泰国的旅游业很规范，无论是大皇宫内卖的矿泉水（10฿，大约两块钱人民币）、饮料，还是地理位置这么好的餐厅，没有因为是热门旅游景点就坐地起价。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-43.avif"></p>
<p>吃完歇到三点，我们来隔壁的码头坐船，欣赏一下湄南河的风景。对着地图确认好我们要乘坐的线路和对应的游船类型，买票后排队等待船来。船票价格和武汉的轮渡差不多，码头岸边的柴油味有点重。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-44.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-45.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-46.avif"></p>
<p>湄南河其实没啥好看的，河水比较浑浊，两岸的建筑风景不错。轮渡乘客非常多，包括我们这样的游客和本地人。河岸两旁既有一些高大上的餐厅、景观，也有破破烂烂、饱含生活气息的小破屋，反映了这个城市巨大的贫富悬殊。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-47.avif"></p>
<p>又想骗我生女儿系列😍！</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-48.avif"></p>
<p>富有或贫穷？</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-49.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-50.avif"></p>
<p>有的地段很现代化。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-51.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-52.avif"></p>
<p>这是在保养发动机吗？</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-53.avif"></p>
<p>其他的一些随拍。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-54.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-55.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-56.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-57.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-58.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-59.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-60.avif"></p>
<p>很多人选择在临近地铁的码头下船，而我买票看地图时发现这边有个摩天轮夜市，便打算逛一逛、买点吃的再打车回去。下船时发现船舱已空空荡荡。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-61.avif"></p>
<p>出了码头后朝摩天轮方向走过去，感觉街道比较老旧。值得玩味的一个细节是路边的几个7-11全都在入口处安装了报警系统，这无疑在暗示附近的治安并不太好。走到夜市发现其实是个带游乐场的购物广场，广告、招牌里都带着中文，而旁边的停车场里停满了旅游大巴，大概能猜到是专门带外国（国人）游客来购物消费的 “景点”。一来这种购物中心毫无特色，二来购物广场的门口也张贴了大大的防盗提示，还是叫Grab闪人吧。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-62.avif"></p>
<p>回到Park 24，又看到这辆MPV痛车。经过明天的行程后我才知道，这辆车应该是专门带人来看楼盘的。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-63.avif"></p>
<p>晚餐找了小巷内的一家泰式餐厅，装潢很漂亮，味道嘛只能说一般😅。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-64.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-65.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-5-66.avif"></p>
<p>今天还是跑了不少地方，见识了既现代化又历史悠久的曼谷，也见识了既繁华又贫穷的曼谷。很累，晚上也不想再安排什么娱乐活动，就洗洗睡结束今天这一回合咯。</p>
<h2 id="下一集"><a href="#下一集" class="headerlink" title="下一集"></a>下一集</h2><p>《<a href="https://joouis.com/2019/2019-thai-trip-6/">2019 泰国行游记（六）</a>》</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>thailand</tag>
        <tag>self-driving</tag>
        <tag>bangkok</tag>
        <tag>hua hin</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 泰国行游记（六）</title>
    <url>/2019/2019-thai-trip-6/</url>
    <content><![CDATA[<h2 id="上一集"><a href="#上一集" class="headerlink" title="上一集"></a>上一集</h2><p>《<a href="https://joouis.com/2019/2019-thai-trip-5/">2019 泰国行游记（五）</a>》</p>
<h2 id="2-3"><a href="#2-3" class="headerlink" title="2.3"></a>2.3</h2><p>昨天在外面浪了一天，今天的行程就很简单。上午约了之前在大厅勾搭的房产中介小姐姐看看在售的公寓楼盘，下午换公寓入住、休息。</p>
<p>早在阿里就看过土豪同事投资曼谷公寓，这次住的Park 24房东也是广东朋友，可见中国人在曼谷投资房地产已经成为一种现象。虽说越成熟的生意成本也就越高，不过作为一个公寓爱好者，鉴于曼谷的公寓房型、设施通常都非常完备，很有兴趣深入了解一下。尤其相比某天朝的政策，泰国的房屋都是永久性产权，没有房产税和遗产税，是吸引众多国人过来投资的主因之一。更多有关泰国房产投资的中文资讯Google能搜出一大把，我也不专业，感兴趣的朋友就自己去研究吧。</p>
<p>中国人或者说外国人只能在泰国买公寓，因此今天去看的也是公寓。中介小姐姐Lingli是泰国人，大学读的中文系专业，还曾去广西交换过，能用中文简单交流，因此和中国买家打交道有着得天独厚的优势。和她认识经由Park 24的一位上海房东小姐姐Mingyi介绍，那会Mingyi正和她的房客在大厅签长租合同，讲中文引起了我的注意，待他们签完后我便上前打了个招呼，简单聊几句泰国买公寓的话题。Mingyi告诉我在泰国买房千万不要找中国中介，中国人爱坑中国人，还是找本地的靠谱，然后给我推荐了Lingli。在台湾生活两年见识太多中国大陆人坑大陆人的案例，以及听说过一些北美中国人坑同胞的故事。可能有人会说这个小姐姐也是中国人，你怎么能随便相信呢？反正我也是先了解学习一下，之前没联系过任何中介，现在有人带着看看正好。</p>
<p>这次去看的公寓叫Siamese Exclusive Queens，距离Queen Sirikit National Convention Center地铁站非常非常近，从地图上看也就百米不到的样子。隔壁还有两个城市公园，以及一站路到Terminal 21，配套挺不错。我们从Park 24过去也很快，坐公寓的电动观光车大概十分钟，可以看到公寓快修好了。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-1.avif"></p>
<p>和国内一样看样板房，我就选择一室的房型。这边都是精装送家电，看起来是不错，秉承着小型公寓麻雀虽小五脏俱全的风格。先看的是Type 1A，面积大概35㎡。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-2.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-3.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-4.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-5.avif"></p>
<p>换Type 1B房型再看看，也是一室的，不过面积要大不少，大概58㎡。和1A相比最大的区别就是客厅独立出来了，是正儿八经的一室一厅。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-6.avif"></p>
<p>看完回到大厅，Lingli以三楼的1A-2房型（低层加小面积，应该是整栋楼数一数二便宜的房型）给我一张价格清单，不得不说相比国内看房中介在纸上打草稿算数，这样的报价单正规太多，所有费用一目了然。不过公寓的总价不算便宜，和北上深估计差不多了，刚需都还没解决，咱现在也就长长见识吧。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-7.avif"></p>
<p>看完房回去收拾一下，还是像来时一样把房卡放回信箱退房。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-8.avif"></p>
<p>打车入住下一家公寓，位置在更东南边一些，实际坐车过去就能感受到要偏僻不少。公寓位于Sukhumvit 62&#x2F;1巷子，很幽静，走出去吃饭买东西时能看到除公寓大楼外也有些不错的私人庭院，相比闹市区我个人挺喜欢这种安静舒适的环境。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-9.avif"></p>
<p>公寓大厅摆放了大楼模型，可以看到它在14年获得一个叫THINK of LIVING评选的认可。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-10.avif"></p>
<p>健身房很小，椭圆机和跑步机就这么几台。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-11.avif"></p>
<p>在保安监控室拿房卡入住，房间面积比Park 24的大不少，整体感觉也要舒适不少，价格还更便宜，Park 24那个单纯胜在地段。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-12.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-13.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-14.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-15.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-16.avif"></p>
<p>睡个午觉，晚上看地图发现有家名为A&amp;W的美国连锁快餐店，肥仔我当然要去尝试下。我们都觉得味道不错，最有特色的就是它们家的根啤，和台湾的黑松沙士口味很像！</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-17.avif"></p>
<p>据说A&amp;W在美国就是以这个结霜马克杯闻名。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-18.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-19.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-20.avif"></p>
<h2 id="2-4"><a href="#2-4" class="headerlink" title="2.4"></a>2.4</h2><p>今天难得睡了个大懒觉，中午随便吃点东西，下午四点多打车去Talad Rod Fai Train Night Market铁路夜市。这个夜市在当地很有名，但由于远离市区、交通不是那么便利，中国游客并不多。结果辛苦打车过去才发现，今天是礼拜一，夜市不开💔…</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-21.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-22.avif"></p>
<p>好在旁边就是个大商场，不愁没吃的。一顿中餐过后沿着大道往南散步消食，发现还有几个大的商场，又随便选了一个进去逛逛，在集市又买了些小吃。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-23.avif"></p>
<p>今天是除夕夜，自从外公去世后，已经很久没有一大家子人聚在一起吃年夜饭看春晚了。这次人在异国他乡，难免也会有些低潮和失落。回到公寓打开电视想找一点家的气息，发现机顶盒是支持YouTube视频源的，感谢万能的YouTube，居然让我在海外看到了春晚！！！</p>
<p>我也一直没觉得春晚好看过，通常都是电视放着玩手机，一种仪式感吧。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-24.avif"></p>
<p>结果M嫌春晚无聊想看别的节目，也罢… 看无聊了就会再切回春晚。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-25.avif"></p>
<p>反正家的感觉已经失去很久，只能期待在未来的小家中重拾。这些年这种话也是一直埋藏在心里，跟M讲只会让她爆炸和受伤，引来更多的麻烦。</p>
<p>人生不如意十之八九，可与语人无二三。</p>
<h2 id="2-5"><a href="#2-5" class="headerlink" title="2.5"></a>2.5</h2><p>今天是在泰国的最后一天，明天凌晨的航班回到深圳继续避寒。行程也很简单，中午退房后打车去The Nine Centre Rama 9吃午饭喝咖啡打发掉下午的时光，吃完晚饭后去机场等候登机。选择去The Nine Centre是因为它挨着机场快线Hua Mak站，三公里的距离步行或打车都很方便。</p>
<p>整个商场就几层楼，并不大，不过也能看到浓浓中国新年的元素。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-26.avif"></p>
<p>想着走前再吃顿好的，选了家自助火锅店，相对于人均百元的价位来说，味道令人失望，肉的质感很一般。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-27.avif"></p>
<p>吃完老规矩去星巴克，点杯咖啡坐一下午。不过我打算去附近评分不错的泰式按摩店再放松一下，M也坐不住想出去走走，于是我们在星巴克待了个把小时就拖着行李去找Massage店。Massage的体验在前文中已经分享过，这次很有趣的是碰到了按摩店的老板，一位华裔泰国人，从事外贸工作，英语还不错，我们一聊就是一个小时。他知道我们的航班时间后，很热情地给了一些时间安排上的建议，在我们表示懒得四处闲逛之后，又热心开车把我们送到了地铁站。聊天中有两件事让我印象比较深刻，一是他介绍了分辨泰国华裔的方法，除了看外貌，也可以通过人名分辨，如果名字特别特别长，一般就是华裔或华裔后代；二是他刚好要去接他的女儿放学，我们就聊起了两个国家的教育话题，基本上升学、找工作的竞争都很激烈，此外越是高品质的教育越需要钱砸。</p>
<p>回到机场，吃了最后一顿冬阴功口味的晚餐，上楼到机场出发厅，准备归国。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-28.avif"></p>
<p>不知道为什么值机、出境的速度非常慢，此外安检十分严格，头一次遇到脱鞋检查的要求。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-29.avif"></p>
<p>就这样，八天的泰国之行就此告一段落了。总得来说玩得还是非常舒服，尤其是带着一位老人家，路上基本没发生什么大的争执。之前的各种经历记录得非常详细，结尾也不必再做更多的总结。如果有人问我泰国好不好玩，我会肯定地回答好玩。如果问我还会不会再来，我也会肯定地回答，我会再回来。</p>
<p>全文终。</p>
<h2 id="彩蛋-2-6-2-8"><a href="#彩蛋-2-6-2-8" class="headerlink" title="彩蛋 2.6-2.8"></a>彩蛋 2.6-2.8</h2><p>考虑飞回武汉还要再抢高铁票回苏州绝非易事，这几天武汉又是数一数二冷的时候，因此我们干脆飞到温暖的深圳再歇几天，9号我直接回苏州。上一次来深圳还是2013年夏天，参加北大信息工程学院的优秀大学生科技夏令营活动，争取直博机会失败，不算什么美好的回忆😆。此番再来深圳度假，感觉挺不错，悠闲。说明自身的心境与心态影响自己的感受。</p>
<p>在深圳最大的收获是老友重逢。首先是在Lazada工作时的同事齿虎，与虎哥一起回忆了同是应届生加入阿里后的各种酸甜苦辣，共鸣不断。接着感谢中学时代的好友毛哥带着老婆从广州过来碰面，还有他们的好友Gavin，一起在万象天地吃喝畅谈一天。Gavin是华为的设计大佬，开标致DS5非常有品位，散伙后贴心地把我们依次送回火车站和公寓。</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-30.avif"></p>
<p>临走前一天约上了百阿同学策远老哥。我非常清楚地记得上次一别还是2017年底在西溪园区1号楼，那会他表示情况不妙，后来没过多久就听到他离职的消息，而我也转岗去了Lazada，离开云OS这个黑洞。这次再见我俩也是感慨万分，彼此分享了这一年多的工作和家庭生活情况，聊了很多很多。老哥请我吃了著名的网红茶餐厅点都德，菜品丰富（顾着聊天去了没拍全😂），味道也不错，享受！</p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-31.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-32.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-33.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-34.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-thai-trip-6-35.avif"></p>
<p><strong>天南地北，相聚不易，感谢大家，期待下次再会！</strong></p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>thailand</tag>
        <tag>self-driving</tag>
        <tag>bangkok</tag>
        <tag>hua hin</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 说走就走的珠海之旅（上）</title>
    <url>/2019/2019-zhuhai-trip-1/</url>
    <content><![CDATA[<p>原本计划端午节就在家看书休息，结果由于某位同学的失策不能如期回到苏州，加上另外两位好姐妹的盛情邀请，于是有了这趟说走就走的珠海地区之旅。</p>
<p>先来介绍一下本次同行的两位小伙伴，都是设计师小姐姐，一位是目前在北京工作的青岛妹子，另一位是在珠海工作的本地土著。我们相识于一个设计师和前端工程师交流的QQ群，经过一两年的专业切磋后，逐渐建立了深厚的（灌水）友谊。由于三个人比较聊得来又能相互接梗，某一日就组成了日后也许会在青岛海边捡螃蟹为生的螃蟹家族，青岛妹子是大姐，我是夹起来的二姐（咦），珠海的小妹是三妹。值得一提是的螃蟹家族的身高也很了不得，大姐175高大魁梧， 三妹也有168，我嘛… 介于175和168之间。</p>
<p>大姐和三妹大概提前一个月就约好了，我这临时起意听起来很潇洒，但只剩下四天时间预订端午小长假的机票和酒店想想都不容易😂。</p>
<p>好在运气不错，机票和酒店都订得比较顺利。继上个月去无锡参加婚礼后这次特意关注了从无锡出发的航班，发现一点都不比上海的两个机场差，并且从住处开到无锡硕放机场不堵车只要五十分钟，远比去上海方便！以后只要能从无锡走，就绝不向魔都迈半步。住宿这次依然通过 Airbnb 订的民宿，位置刚好在三妹家附近，完美。</p>
<p>那么，开始本次行程吧 😎。</p>
<h2 id="6-6"><a href="#6-6" class="headerlink" title="6.6"></a>6.6</h2><p>这次去珠海最大的挑战应该就是赶飞机要早起。航班时间在早上7:50，这意味着我要五点起来，且在一个小时顺利抵达硕放机场，但凡中间出点差错就凉了。早起对我这种夜猫族来说是一件非常痛苦的事情，虽然我经常睡过，不过从没在关键时刻掉过链子。</p>
<p>保持着一靠近节假日就异常忙碌的规律，端午前几天我都很晚才离开公司（当然不能跟阿里的9-12-6时期相比）。6.5回去稍微早些也十点了，收拾好东西、洗完澡以及中间各种放空一下，准备睡觉时已经两点。怕三个小时后自己仍然昏迷不醒，我设置了多个闹钟，同时拉开窗帘准备迎接黎明的第一道曙光，然而并没看到… 我按时醒了，只是外面下起了大雨😅。</p>
<p>一日之计在于晨，检查好证件齐全的我拖着行李箱就出发了。清晨真是一点都不堵，到机场高速的出口时才花了半小时。可以看到这时雨小了很多，不过等到机场后又下大了，此乃后话。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-1.avif"></p>
<p>再走一刻钟来到机场附近的私人停车场。机场配套的停车场价格不菲，同时也无法确认是否有一定有空车位。相比之下，现在有一类互联网 O2O应用提供包括机场、高铁站、迪士尼、港口等地方的停车服务，通过线上预约下单后，在预订时间把车开到指定的停车场即可。这些停车场虽然不在目的地内部，但也都挨得非常近，一般还会提供接送服务，可以说安排得明明白白。价格通常也不贵，年初在虹桥附近的室外停车场停4天花了110块，这一次室外停五天也才130块，还送了免费的机场接送服务，赞。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-2.avif"></p>
<p>从停车场到出发层十分钟不到，开始按部就班地值机、过安检、等候登机。结果在登机口看到了坏消息，由于航空管制，航班延误，空乘人员只说最快四小时起飞，但不作任何保证。更惨的是在等待过程中听到广播通知：无锡飞往广州的航班由于天气原因取消。原本打算上飞机就补觉的我，也没体力担心航班取消的问题，扛不住困意直接抱着书包睡了起来。</p>
<p>谈到这次延误还有个搞笑的事情，飞机延误后朋友问我买延误险没，答没买。理由是飞猪的延误险卖八十多，提示的延误赔偿只赔两百多，我想着早上七点多的飞机延误概率很小吧，这亏本买卖谁做…</p>
<p>感谢老天爷，十一点二十终于开始登机，随后顺利起飞。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-3.avif"></p>
<p>值机时还有靠窗的位置可选，虽然在机翼旁，但有的看就不错啦。当飞机降落时，可以看到不同于内陆地区的地形地貌，很有特色。更有趣的是，在这个高度手机已经可以收到GPS信号，默默地给这张照片添加了地理位置信息！对照地图可以得知，当时飞机正经过珠海的黑面将军山峰，照片中间是西江，横跨西江却只有桥墩的是正在修建的珠三角环线高速。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-4.avif"></p>
<p>飞机即将降落，看着晴朗的天空、厚厚的云朵，从烟雨江南而来的我心情立马好了起来。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-5.avif"></p>
<p>由于晚点，正好和大姐的抵达时间相近，等她拿到行李后，我们一起坐机场大巴加打车去明珠站附近的民宿。可能是小长假来临的缘故，明珠站附近非常堵，并且持续堵了好几天。等到完成入住已经五点多，大姐去附近逛逛，我则接着补个午觉，等三妹下班一起吃晚餐。</p>
<p>晚餐订在珠海大剧院附近的网红餐厅“太阳与海”，除了我们仨外还有一位老友，我的大学室友阿健，不会佛山无影脚的佛山人😆。在确定来珠海后第一时间想到他，看了下佛山离珠海也不远，问他有没有机会搞起。没想到他在更近的中山工作，下班开车过来非常快，快到他是第一个到饭店的…</p>
<p>同处一个屋檐下生活四年，我和阿健关系很好，曾经去深圳参加完夏令营后还去他佛山的家里蹭吃蹭喝了几天。五年未见，再次相聚非常激动。基本上晚餐和饭后散步都在和他叙旧，没怎么和初次见面的三妹说话，吃完甚至连网红餐厅的味道都没什么印象。</p>
<p>还好坚持了每道菜“手机先吃”，放几张有特色的。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-6.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-7.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-8.avif"></p>
<p>这个鱼炸得很日式，但令大家意外的是旁边挤了坨沙拉酱，不应该是半颗柠檬吗… 名字也很迷，叫“香煎一夜情”。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-9.avif"></p>
<p>饭后我们沿海边散步，绕着珠海大剧院溜达一圈，感觉非常舒服。阵阵海风带来不少凉意，边走边看边聊一点也不觉得热，无限的惬意和愉悦。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-10.avif"></p>
<p>夜景很美，路边有很多人跑步、散步和骑自行车。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-11.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-12.avif"></p>
<p>其实单看珠海大剧院没觉得有多好看，不过搭配其他的灯光效果，整体营造得氛围不错。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-13.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-14.avif"></p>
<p>绕了好大一圈回到“老人与海”，我们决定先把车开回住的小区，再打车去附近的啤酒屋进行下半场。机会真的很难得，阿健本来计划要孩子好久不沾酒，不过今天实在开心就小酌一点点咯。我是头一次来这种啤酒屋，不同于常见的酒吧，没有表演，店里摆满了各式各样的啤酒都可以点，挺专业的。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-15.avif"></p>
<p>差不多聊尽兴已经一点出头，打车回去洗洗睡。明天阿健捎上我们仨回中山，看一眼孙中山纪念馆，更重要的是尝一尝中山特色——石岐乳鸽。</p>
<h2 id="6-7"><a href="#6-7" class="headerlink" title="6.7"></a>6.7</h2><p>早上睡到十点多，我们四人一起出发前往中山。三妹很贴心地为我们买了鲜虾云吞作为早餐，说是她家附近很多人买，真是不尝不知道，味道非常的棒，可惜太好吃忘了拍照 😂。这几天珠海都是好天气，后来我们一走就开始下暴雨，还出现了“龙吸水”的奇观。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-16.avif"></p>
<p>看着这大片的云朵，我们开心地放着歌，不一会就到了孙中山故居纪念馆。此时已接近十二点，热的不行，我们也就走马观花看了故居房子，又躲进博物馆里乘凉顺便看了孙中山老人家的生平。说起来有意思，咱这叫孙中山纪念馆，台北叫国父纪念馆… 嗯，这种小细节挺有意思。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-17.avif"></p>
<p>不到一点，我们终于迎来了短暂中山行的核心节目——食石岐佬。这家网红老店就不多做介绍，阿健带我们来是东区的新店，同一个老板开的。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-18.avif"></p>
<p>店内基本座无虚席，我们做好了排队的心理准备却直接入座，反而有点小惊喜。开放式的厨房，食客可以近距离观察师傅们制作美食的过程。最出乎意料的莫过于男厕所，小便区安装了一块落地窗玻璃，给人一种直接朝着室外嘘嘘的感觉，很神奇的体验。当然玻璃顶部有装置一直放水，保证清洁和隐私。</p>
<p>石岐佬的味道可能在阿健这样的本地人看来一般，名气大于实力，不过我们仨都觉得非常棒，完全不虚此行。</p>
<p>第一道菜叫上汤鱼包，大概是鱼皮包的小馄饨。我觉得一般，不过他们仨很喜欢。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-19.avif"></p>
<p>没想到从小吃到大的菠萝包居然是广东特色。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-20.avif"></p>
<p>今天是端午节，阿健很贴心也点了石岐佬的特色粽子，外面应该是竹子包裹起来的。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-21.avif"></p>
<p>这个小肉饼里加了蚬子肉，口感一级棒，煎得很香。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-22.avif"></p>
<p>红烧的乳鸽不如烤的好吃，不是很好咬。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-23.avif"></p>
<p>终于吃到大名鼎鼎的中山乳鸽，简直是肥仔的快乐。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-24.avif"></p>
<p>鱼肉非常非常Q弹，虽然略有一丢丢腥，但这口感真的绝了，大家都很喜欢。名字记不清了，大众点评上肯定能查到。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-25.avif"></p>
<p>吃饱稍作休息，阿健开车把我们送到高铁站回珠海，又要分别啦。五年之后的重逢，不到一天的时光，非常宝贵。临别前总少不了对未来再聚的约定，虽然很难，但就像这次一样，有缘自会相见！</p>
<p>这么早回珠海除了中山没啥可玩的外，也因为我和十二年未见的初中语文老师还有一场小聚——这两天似乎一直在重逢和怀旧。我从初中、高中到大学全是班长，要说这三个阶段里最有团队感的就是初中时期，大家都很单纯，老师们也都认真负责，从学习到生活，整个班级非常有凝聚力。大家都很喜爱班主任和这位教语文的胡老师，不仅是因为她们课教得好，更重要的是她们不止关注学生的学习成绩，也关心学生平时的生活和想法。人都是将心比心，老师投入了饱满的感情，自然会收获学生的尊敬和爱戴。</p>
<p>如今胡老师已经六十六岁，退休后一开始还留在武汉，但随着她女儿在珠海稳定下来、成了家立了业，慢慢的胡老师和她老公也过来与女儿家一起生活，一大家子其乐融融。读初中那会只有QQ，之前不知通过什么途径意外加上了胡老师的微信，之后经常能在朋友圈看到她的动态，这次来珠海也立马想起了她，很快就约好了今天下午见面。</p>
<p>高铁只花了半小时就把我们送回了珠海，出站后那叫一个热，但天气和环境是真的好，看一眼爽一眼。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-26.avif"></p>
<p>十二年未见，我已经比初中毕业时胖了十五公斤，老师还是一眼就认出了我。尽管已经六十六岁，但老师的变化并不大，让人惊喜的是气色非常好，精气神十足，看不出太多衰老的痕迹，真心替她感到开心。我们坐公交车到她常去的华发商圈，从喝冷饮到吃晚餐，也是不停地分享这十几年的心路历程，中间经历了好多好多事情，还提到了其他老师和同学，回顾不同人的发展轨迹，感触颇多。</p>
<p>和老师聊天很愉快，她天生自带正能量，话语里透露着乐观与自信，很有感染力。等吃完晚饭已经八点半多，非常满足，又到了说再见的时候。走出华发商圈看到周围热闹依旧，不少人散步、带娃或坐在草坪上聊天。夏夜晚风吹过，看着这繁华安逸的景象，幸福感油然而生。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-27.avif"></p>
<p>送老师到公交车站后，我也坐公交回住处，没想到大晚上九点还能遇到堵车… 到家后赶紧洗洗睡了，明天要起个大早，过关见识一下传说中的澳门。</p>
<h2 id="6-8"><a href="#6-8" class="headerlink" title="6.8"></a>6.8</h2><p>早上起来大姐就说胃不舒服，她房间的床太硬这两天都没休息好，加上昨天她和三妹逛街又吃了些冰的东西，到夜里就开始胃疼。她自己跑出去想找24小时开放的药店买药，可惜没有找到。到早上稍微好点，早餐喝了点粥，还是跟我和三妹一起出发去澳门，没想到悲剧的事情发生在后面😷。</p>
<p>打车到拱北口岸已经九点，过关的人非常非常多，不过三妹说目前这样还算好，再晚点人会更多。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-28.avif"></p>
<p>过关一共要刷两次港澳通行证，第一次是出大陆的海关，第二次是入澳门的海关。过关后绝大多数人都是排队乘坐赌场的接驳车直达市区的赌场，这很有意思，说明了澳门这座城市的命脉是什么。类似客运站的上车点，只不过站名换成了赌场，运营的接驳车自然由赌场提供。身为老司机的三妹带我们来坐人相对较少的新濠影汇的接驳车，计划白天最热的时间先在路氹这边的赌场和商场逛一逛，等到晚上凉快了再回澳门半岛的圣安多尼堂区看大三巴等景点。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-29.avif"></p>
<p>三妹很贴心地把靠窗位置让给我拍照，这一路风景不错，先是过友谊大桥到海岛市。和在珠海看到的一样，这边的海都是“阴阳海”，没什么好看的。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-30.avif"></p>
<p>经过一个大转盘后，即将看到一排辉煌壮阔的赌场。首先出场的是国人耳熟能详的威尼斯人，里面模仿了水都威尼斯经典的街道与河流。不过从外面来看，威尼斯人倒显得中规中矩。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-31.avif"></p>
<p>接下来是巴黎人，门口直接修建了一个“高仿”埃菲尔铁塔，牛逼！建筑外观也好看，金色、黄色、灰褐色的搭配，太有欧洲的味道了。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-32.avif"></p>
<p>最后是新濠影汇，我对主体建筑没什么感觉，但是左右两侧的人物雕像牢牢抓住了我的眼球，十足的高级感，还带着一点科技感。不知道该怎么用言语形容，当下只好发了条朋友圈：『你说有钱多好，有钱我也这么玩.jpg』。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-33.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-34.avif"></p>
<p>一下大巴就看到这屋顶，虽然配色极其俗气，但依旧能感受到钞能力带来的气势。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-35.avif"></p>
<p>第一件事当然是进赌场看看，和电影里差不多，赌桌、荷官以及各种赌博机都有。唯一与印象不符的是荷官并非年轻漂亮的小姑娘，一群阿姨颜值普遍负分，说好的性感荷官在线发牌呢… 一定是我们咖位不够😆！赌场在大楼的中间区域，把它包围起来的外环则是琳琅满目的奢侈品店，一大早无论是赌场还是奢侈品店都看不到什么人。</p>
<p>我们没逛多久大姐的胃就越来越疼，即使休息了刻把钟也不见好转。但她勉强还能走走，鉴于这周围没个饮品店可以弄点热水喝，三妹决定带着我们去隔壁威尼斯人的麦当劳。尽管没在威尼斯人待多久，我倒也不觉得可惜，室内的布景有些年久失修，例如屋顶天空的白色都有点泛黄，给人“很假”的感觉。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-36.avif"></p>
<p>事实证明让一个迷糊的朋友带路，过程注定是曲折的，尤其是大姐痛成那个样子，大家的心理负担都有点重。好不容易来到麦当劳，三妹赶紧替大姐要了杯热水，然而喝完并没有什么作用… 随着大姐的情况越来越糟糕，我们也不得不接受最坏的打算——送澳门的医院。三妹是唯一懂粤语的人，对这边也比我们熟的多，自然让她去找商场的紧急医疗点，留我陪在大姐身边。</p>
<p>大姐已经疼得直不起腰，久痛还引起头晕想吐，但跑了几次厕所也吐不出来。同时我能感受到她很懊恼自责在这个时候身体出现这样的极端情况，整个人的精神状态也比较糟糕。我只能一边安慰她，一边祈祷三妹一定不要迷路、能迅速找到医生并顺利回来。</p>
<p>等待的过程是煎熬的，尤其是想做点什么又束手无措的时候。大概过了十几分钟，再次看到三妹的那一刻，心里一下子踏实太多。随她一起出现的是酒店的服务员，看肤色很像菲律宾人，不过讲得是粤语。服务员推来一个轮椅，把大姐搀扶上去，一边往酒店门口走一边打电话叫救护车。期间还问了我们是要去公立医院还是私立医院，虽然很想直接说去公立的就好，不过还是先问了下哪个更近，得知都差不多就果断去公立。</p>
<p>从酒店出来等待救护车到来又是一阵煎熬。冰火两重天的交替对大姐这样的北方人来说也是一种强伤害，室外湿度大、格外闷热，室内空调温度又开得非常低，其实我这几天也在感冒的边缘徘徊。</p>
<p>终于，救护车来了，还有一个好消息是救护车是免费的！一边着急看着医护人员把大姐抬上车，一边感慨澳门的高福利名不虚传，直到坐上车准备去医院才想起来没有向帮助我们的酒店服务员表示感谢，问三妹她也忘了。只好把这份感谢存在心里，对澳门的好感也由此大大增加。</p>
<p>一路上司机开得很猛，很快我们就来到了仁伯爵综合医院，据说它是澳门现在唯一的公立综合医院，也是澳门人口中的“害命”医院，当然我们也是后面才知道。</p>
<p>在看到曙光的那一刻，终于有心情拍张照纪念今天这个特殊的经历，人生第一次坐救护车成就达成✅。后来聊到这个事情时，三妹和大姐居然还记得这几个医护小哥很帅… 呵，女人🙄。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-37.avif"></p>
<p>仁伯爵医院给人最大的感受就是安静、有秩序，我跟着医护人员冲到诊室门口就被拦了下来，让我去候诊厅待着，这就杜绝了大陆一群病人和家属围着医生的场景，赞。虽然一眼就能看出医院有些年头，且通常公立医院的设施更新速度较慢，但这家医院整体上非常的干净，尤其像卫生间没什么异味，让我印象深刻。</p>
<p>急诊的候诊厅很小，两块大屏幕一个播放电视节目，另一个滚动播放各项就诊信息，这个细节做得不错。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-1-38.avif"></p>
<p>悲催的是端午节医生不在，大姐只能等待医生回来。而我们在这干等也没什么帮助，为了不给大姐造成额外的心理负担，就出去吃饭接着玩了。直到傍晚五点多大姐发微信说她好的差不多可以出院了，我们便回来找（结）她（账），确实气色好了不少。经过各种抽血化验检查，医生说是大姐得的是肠胃炎，给她打了消炎的吊针，在疼痛不见好转的情况下还加了止痛药剂… 最后总算是胃不疼了。</p>
<p>医院不支持支付宝或微信支付，只有我带了银行卡，这就是我们必须回来接大姐的原因。在中午挂号时我们就看到非本地户籍是按200%的价格收费，她又做了不少检查，这费用一翻倍真不好说有多高。我和大姐怀着忐忑的心情去付钱，所幸总开销两千六百多澳门币，以人民币结算两千三不到，不算太贵，换做在大陆这么叫个救护车进急诊费用应该也不会低。</p>
<p>你以为大姐的悲惨遭遇到这就结束了吗？并没有！结完账聊起这边的医疗时她们说澳门人看大病都是去珠海，而澳门民间流传着一个说法是 『澳门只有两家医院，一家谋财（镜湖医院），一家害命（山顶医院）』，我们不幸验证了这个说法😰。</p>
<p>大姐的胃全靠止痛药扛着，在我们去美高梅赌场坐接驳车回去时，止痛药的药效退了，大姐又开始疼了起来。我们在出关前遵循医嘱买了口服药，带大姐去粥店喝完白粥再把药吃了也未见有好转。大姐也知道再去医院可能还是打抗生素和止痛药，还是希望能坚持休息一晚再说。然而她还是疼的睡不着，在我已经做好心理准备带她半夜再闯珠海的急诊之时，神奇的事情发生了。</p>
<p>大姐决定最后坚持一下时，坐到了客厅的沙发上，立马就来了困意，她赶紧去房间拿了枕头和被子，安稳度过一夜，第二天继续躺沙发休息也慢慢恢复了精神。总结她的病情，大概就是硬板床睡不习惯，连续两天没休息好，同时频繁冷热交替，导致免疫力大幅下降，最后吃了生冷食物，引发肠胃炎。</p>
<p>可怜的大姐度过了噩梦般的一天，就让这些不幸留在游记的上篇，在下篇中继续欢快地玩耍吧。</p>
<h2 id="下一集"><a href="#下一集" class="headerlink" title="下一集"></a>下一集</h2><p>《<a href="https://joouis.com/2019/2019-zhuhai-trip-2/">2019 说走就走的珠海之旅（下）</a>》</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>zhuhai</tag>
        <tag>macau</tag>
        <tag>food</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 说走就走的珠海之旅（下）</title>
    <url>/2019/2019-zhuhai-trip-2/</url>
    <content><![CDATA[<h2 id="上一集"><a href="#上一集" class="headerlink" title="上一集"></a>上一集</h2><p>《<a href="https://joouis.com/2019/2019-zhuhai-trip-1/">2019 说走就走的珠海之旅（上）</a>》</p>
<h2 id="6-8"><a href="#6-8" class="headerlink" title="6.8"></a>6.8</h2><p>书接上文，由于大姐不幸病倒，接下来的一天半基本就是三妹带着我到处吃吃走走。这个下午的时光感觉失而复得，也不再遵循之前的计划，就先找个地方吃饭，容三妹研究路线后再做决定。</p>
<p>从急诊大楼出来就能看到新葡京酒店和澳门旅游塔，山顶医院的位置实属不错，闹中取静。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-1.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-2.avif"></p>
<p>走了大概一刻钟就来到了闹市区，街头的游客非常多，尤其是公交站附近人头攒动。几次路过新葡京时都能看到很长的等候接驳车的游客队伍。道路是右舵驾驶，街头也能看到不少破旧的矮房子，这个顶着中国银行LOGO的大楼有点扎眼哈哈。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-3.avif"></p>
<p>新八佰伴是澳门唯一一间百货公司，挨着它的马路中间有家很有格调的花店，等红灯时刚好可以进去看一眼。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-4.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-5.avif"></p>
<p>此时已经下午两点，饿意渐浓，我们先进新八佰伴吃午餐。美食广场在八楼，没想到这个点人还非常多，等我们找到位置、拿到餐点已经两点半。食物的味道还行，就是一开始觉得好饿点多了。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-6.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-7.avif"></p>
<p>这个烤鳗鱼甜不拉几的，又比较肥，差评。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-8.avif"></p>
<p>人生就是容易陷入两个极端，要么太饿，要么撑得不行。我们坐手扶电梯慢慢晃悠下去，逛超市为冒烟的嗓子买了龙角散，三妹路过柜台迅速买了个化妆品（土豪的大气😏），最后回到一楼时看好路线：先去玛嘉烈买蛋挞，随后去大三巴打卡。</p>
<p>再次回到街上真的是要把人热化了，本来想看劳力士的心情也荡然无存。路过Omega橱窗被这个小金人闪到。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-9.avif"></p>
<p>澳门的葡式蛋挞非常有名，可能最出名的店就是安德鲁，但是名气大就意味着人多。三妹带我来的这家叫玛嘉烈，取自老板娘的名字。据说她曾经是安德鲁的妻子，离婚后自己开了这家店，所以味道和安德鲁差不多，人气也是非常旺。从店的门口往外共有两条队伍，先排左手边的这条点餐和付钱，拿到号牌后再去右边的队伍等待取餐。</p>
<p>为了几个蛋挞和牛角包排了大约半小时，我也不知道为什么我会干出这么傻逼的事情。更重要的是当时天那么热，我们不久前才吃了午饭，现在哪有胃口再吃别的东西。后面就一路把蛋挞和牛角包背回了珠海，蛋挞给三妹带回家，牛角包放了一夜太硬直接被我扔了… 😓。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-10.avif"></p>
<p>沿路可以看到有不少旧房子，即使是再繁华的都市也少不了衰败的街景。新葡京酒店就像电影里召唤外星怪兽的建筑一样，毅然耸立在一群“老破小”之上，画面冲击感太强了！</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-11.avif"></p>
<p>打开流量看下微信，大姐依然没动静，我们就继续向大三巴前进。我们距离大三巴其实并不远，全程也就花了二十分钟的样子。只不过走到还剩一公里时，路上基本全都是人，三妹干脆直接走我身后抓着我的书包，以防走散。</p>
<p>坦白讲看到大三巴这个牌坊的时候，我的内心是失望的。这么热的天，这么艰辛走到这里，就为了看一堵墙？虽说拿别的历史遗迹作对比没有意义，但当下的直觉就是青岛的天主教堂完全秒杀这里嘛。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-12.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-13.avif"></p>
<p>过了这堵墙是炮台遗址，但是为什么坑里只有沙子连个大炮的配件都见不着，这不逗人玩么🙄！最里面还有个在半地下的天主教艺术博物馆，只想说，真凉快啊…</p>
<p>在大三巴牌坊的侧面有一块不显眼的石碑，应该是1602年教堂重建的奠基石。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-14.avif"></p>
<p>『你在桥上看风景，看风景的人在楼上看你』。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-15.avif"></p>
<p>嗯国人素质… 👍！</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-16.avif"></p>
<p>就这么简单看完大三巴后，大姐还是毫无音讯，我们去附近的老店蕃茄屋吃布丁休息下。在穿过各种小巷时听到了舞狮的打鼓声。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-17.avif"></p>
<p>蕃茄屋主打葡式料理，我和三妹都还不饿，就要了两个布丁和一瓶葡萄牙啤酒。布丁不错，啤酒很难喝（好吧我一直都不爱喝啤酒，可以忽略我对啤酒的评价）。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-18.avif"></p>
<p>这时大姐终于发来消息说她可以出院了，我们立即返程回去接她。往返都看到了这个教堂，颜值不错，那就拍一张吧。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-19.avif"></p>
<p>途中还路过一家书店，也进去瞧了瞧，中英葡文的书籍都有，类型上和大陆的书店并没什么大的区别。接到大姐后担心她身体没完全康复，我们计划直接去新葡京坐接驳车回珠海再吃晚饭。澳门的傍晚很好看，随手一拍都是好风景。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-20.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-21.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-22.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-23.avif"></p>
<p>等到新葡京我们才得知想坐上接驳车大概要等一个小时，我们又去马路对面的永利和美高梅，发现一样要等很久。考虑到大姐的身体经不住折腾，胃又开始疼，就直接打车解决问题。说起来女人的天性果真强大，尽管胃疼，大姐还是坚持在美高梅的免税店里和日本的朋友同步价格后扫了点货😂。</p>
<p>当看到永利大酒店的那一刻我震惊了！之前在杭州乐佳国际上班时隔壁有个万利大厦，那会我们都觉得它的外观非常骚气像家酒店，原来是抄袭了永利（Google看两者并没有关联），连LOGO这个签名都抄袭得有模有样，呵呵🙃。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-24.avif"></p>
<p>回到珠海后很难打车，拱北口岸门前的马路堵得水泄不通。在第一次叫滴滴失败后，我们艰难地走到侨光路，打车去苏记潮汕砂锅粥。先给大姐叫了碗白粥，她喝完吃了药就先回去休息了。苏记的味道不错，此外它家的凉茶和王老吉有点像，应该是用了某些同款中草药配方。</p>
<p>好久没吃潮汕砂锅粥，还是熟悉的味道，很香。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-25.avif"></p>
<p>这个豆腐外面炸得酥脆，但里面特别嫩！</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-26.avif"></p>
<p>看过《人间一串》的朋友们应该都知道这么一句话：『男人的加油站，女人的美容院』。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-27.avif"></p>
<p>晚上回去洗完又是两点，大姐终于找到了她的“归宿”，在沙发上安稳度过一夜。</p>
<h2 id="6-9"><a href="#6-9" class="headerlink" title="6.9"></a>6.9</h2><p>今天白天大姐留在家休息，三妹带我沿海边走走。碰头时已经十一点多，三妹租了辆共享汽车作为今天的出行工具。我们先开车到珠海博物馆对面的海怡酒家吃午茶，请教三妹才知道，原来这顿饭在早上吃就叫早茶，中午吃就叫午茶，晚上吃就叫晚茶😂。</p>
<p>这个虾饺的虾肉很多，味道不错。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-28.avif"></p>
<p>乳鸽被三妹嫌弃长得不好看（呵，女人.jpg），但味道不输石岐佬。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-29.avif"></p>
<p>下面这三道菜普普通通，尤其烧麦和我想象中不太一样，不好吃。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-30.avif"></p>
<p>吃完喝茶聊了好一会，到两点的样子我们开车去格力海岸的无界书店。沿路的风光很棒，滨海之城的魅力所在。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-31.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-32.avif"></p>
<p>去格力海岸会路过金山软件园，附近还有南方软件园和珠海北站，位置挺不错的，房价也还可以（咦）。这个商圈是都市小清新风格，此次主题是WHIKO迷之生物，很可爱。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-33.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-34.avif"></p>
<p>无界书店和普通书店最大的区别恐怕就是这个海景视角了，看书看累了，抬头放松一下眼睛，太享受了有没有！！！</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-35.avif"></p>
<p>旁边还有个天台，坐久了可以过去活动一下。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-36.avif"></p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-37.avif"></p>
<p>大概五点的样子，我们去海鲜市场买菜，回去找大姐。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-38.avif"></p>
<p>室外稍微凉快一点，沙滩上也能看到些游客。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-39.avif"></p>
<p>最后，看看三妹的成果~我觉得稍微有点清淡，不过对一个不经常做饭的孩子来说已经不错了。</p>
<p><img data-src="https://cdn.joouis.com/2019-zhuhai-trip-2-40.avif"></p>
<p>吃完饭大家一起看《向往的生活》聊到了一点… 要跟美好的假期和美好的相聚说再见了，把三妹送上滴滴，也意味着这次珠海之行告一段落。</p>
<p>珠海是个美丽的城市，抛开房价和交通来说，是个适合生活和养老的好地方。已经计划今年冬天给我妈在这租个小公寓过冬，如果实现，再来珠海就不只是句口号。</p>
<p>这几个月，不如先把在无界书店列好的书单刷完。</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>zhuhai</tag>
        <tag>macau</tag>
        <tag>food</tag>
      </tags>
  </entry>
  <entry>
    <title>2020 微软内推，已协助超过十余位候选人拿到 offer</title>
    <url>/2020/2020-referral-kickoff/</url>
    <content><![CDATA[<p>时间真的过得太快，一眨眼一年就过了。</p>
<p>从2018年末尾到现在，我一共协助超过十位候选人拿到offer，其中绝大部分已经入职或即将入职。除了这少部分候选人外，给我发简历咨询、被劝退、被内推但挂掉的朋友，虽然结果不一定尽如人意，但应该多少也会有些收获。面对所有候选人，我尽力做到对自己的要求——尊重、真诚和专业。</p>
<span id="more"></span>



<p>回顾过去一年自己最满意的一点是坚持通过邮件与候选人沟通，除仪式感外，邮件的专注度相比微信有很大的优势，通过邮件沟通大家都可以先想清楚要说什么，从而减少很多无效沟通。当然微信也有其优势所在，对候选人来说沟通成本可能更低、响应速度更快，很佩服其他几位同事以及HR们能高效使用微信，我作为强迫症患者还是算了吧😂</p>
<p>过去一年做的不足之处是没能完全履行24小时内回复的承诺，打破了大概十几次，包括漏掉了少量邮件，通常是在工作比较忙的情况下。解决办法不难，自动给自己每天预约一段时间查看邮件，定期回溯过往的邮件。另外有少量邮件我看到但未回复是因为信息量太少，有的可能忘了放简历、LinkedIn链接，构不成一次对话，我就佛系跳过了。向晚回复、漏回复、没回复的朋友表示抱歉！</p>
<p>2020继续内推的“副业”，本质上还是因为帮助到别人很开心，我在微软工作很开心并愿意帮助微软发展壮大。同时自己作为一名面试官，深知招人不易，能在内推这个“上游”环节做点事情、认识些新朋友，也是乐事一桩。我还是保持真诚且佛系的态度，把该说的都说了，有新消息就更新博客、置顶本帖，随后的事就随缘了。去年开始计划一年只发一帖，信息的聚合远比大量更新却重复冗余有价值，时间成本也是额外开销。</p>
<p>最后照例贴上一些过往的资讯，麻烦有意走内推的朋友们先看看，肯定不亏，沟通起来也更快捷。</p>
<ul>
<li><a href="https://joouis.com/recruit/">我的内推博文</a>，个人内推“门户”，有微软中国的基本环境介绍、内推流程介绍以及最新的职位，知乎有份copy就不贴了</li>
<li><a href="https://joouis.com/2019/a-thought-of-referral/">内推心得</a>，详细介绍了内推、面试的流程</li>
<li><a href="https://www.v2ex.com/t/562136">2019年V站内推帖</a>，超过3万次点击，269人收藏，170条回复</li>
<li>其他同事的内推帖，有的其实写得不错，有些干货，相信善用搜索的你们也不会错过</li>
</ul>
<br />

<p><strong>2020我们一起继续努力，技术、工作、生活总会越来越好。能在贩卖鸡汤和焦虑的年代找回内心的一点平静，可能是最为难得和宝贵的事情。</strong></p>
]]></content>
      <categories>
        <category>技术人生谈</category>
      </categories>
      <tags>
        <tag>work</tag>
        <tag>referral</tag>
        <tag>recruit</tag>
        <tag>microsoft</tag>
        <tag>feedback</tag>
        <tag>review</tag>
      </tags>
  </entry>
  <entry>
    <title>2020云南游记（上）</title>
    <url>/2021/2020-yunnan-trip-1/</url>
    <content><![CDATA[<p>2020上半年疫情较为严重的那段时期，旅游业为了生存推出各种机酒预售套餐，三月底在阿里旅行群里看到嬉游的菜菜推荐丽江和府洲际&#x2F;英迪格酒店，3晚含双早和玉龙雪山门票只要￥1846，花呗囤货、不约可退，有效期至2020年底。要知道疫情前后一晚酒店加下午茶和索道就要接近两千，这谁顶得住呀，果断下手。</p>
<p>经历漫长拖延期后，我们在八月预约了九月底入住酒店。由于把去程机票买在丽江后才决定顺道去大理走走，租车自驾游便成为能把整个行程串联起来的上佳选择。租车也不贵，携程上选了一个高分车行，起亚K2 （实际是同等级车型，最终给了我们一辆奔腾X40，这个后面再吐槽）租3天，异地还车，考虑要开山路加选无忧尊享服务费（无需承担含玻璃、轮胎在内的全部车辆损失）才五百多，再使用中行卡支付立减￥55，总共￥481。至于大理的酒店就随意选了一间民宿，两百多一晚含双早。</p>
<h2 id="09-25出发"><a href="#09-25出发" class="headerlink" title="09.25出发"></a>09.25出发</h2><p>可怜的在苏务工人员只能打车去无锡硕放机场，特意选了下午四点飞的航班，两张票加机建费一共一千四出头。出行前还收到了航司的促销短信，加百来块把座位调到第一排，好处是腿部空间宽敞许多。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-1.avif"></p>
<p>疫情在家待了好久，再次上天看到成片的云朵内心有点小激动。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-2.avif"></p>
<p>晚上八点准时抵达丽江三义国际机场，车行距离机场还有一定距离，工作人员开车接我们过去后，办好手续，就马不停蹄前往大理的民宿！拿到车照例拍一张初始里程数~</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-3.avif"></p>
<p>山路有几段还是有点蜿蜒曲折，一路上黑黢黢也没什么灯光，甚至连前后也没有来车，漆黑又寂静。这辆低价位SUV只配了卤素灯，开灯给人的感觉就是“开了，但没全开”… 基于没什么来车的情况，安全起见，我默默打开了远光灯赶路。</p>
<p>经过两个小时的跋涉，我们进入大理，看到了洱海的星星点点。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-4.avif"></p>
<p>奔腾这辆车动力极其之弱，开去玉龙雪山时油门踩到底也只能跑一百。更可怕的是在第二天还出现过突然熄火的状况，还好当时不是在高速上… 也不知道为啥还是个河北的车牌。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-5.avif"></p>
<p>民宿在洱海传奇小区里，一个半山腰上的度假别墅群，靠近大理市区，环境不错。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-6.avif"></p>
<p>更爽的是晚上十点多还可以点外卖，抚慰了饥肠辘辘的赶路人。干饭当然要配上张大仙的视频🤣。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-7.avif"></p>
<h2 id="09-26喜洲与大理古城"><a href="#09-26喜洲与大理古城" class="headerlink" title="09.26喜洲与大理古城"></a>09.26喜洲与大理古城</h2><p>我们订的是所谓的“海景房”，考虑到其价位，远观个大概倒也尚可。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-8.avif"></p>
<p>楼顶还有观景平台，地板上铺了镜面玻璃，方便客人们拍那些网红打卡风格的游客照哈哈。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-9.avif"></p>
<p>对面便是苍山洱海。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-10.avif"></p>
<h3 id="喜洲镇"><a href="#喜洲镇" class="headerlink" title="喜洲镇"></a>喜洲镇</h3><p>我们今天计划环洱海顺时针开到喜洲古镇，中午玩完古镇后去海舌生态公园，最后回到大理古城吃吃逛逛。出发时候已经十一点多，二十分钟后到洱海公园还下来看了看湖景。</p>
<p>米10Pro广角拍摄的自动白平衡有问题，21年果断换回S21Ultra。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-11.avif"></p>
<p>公园就在路边，对面是停车场，不过没啥好看的。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-12.avif"></p>
<p>一路上车不多，十二点半就到了喜洲古镇，停好车发现对面有所古香古色却挂着电子跑马灯的中学。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-13.avif"></p>
<p>居然还是华师的附属中学… 还有一架正在行驶的马车花车。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-14.avif"></p>
<p>喜洲镇外的马路边有不少这样的花车，算旅游景区的特色服务项目吧 -。-</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-15.avif"></p>
<p>马路对面就是喜洲镇的一个入口。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-16.avif"></p>
<p>走进去左手边又是一座古香古色的小学。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-17.avif"></p>
<p>古镇的游客少到令人惊喜。我们猜测是因为疫情的关系，有店家解释还没到人流高峰期。可以看到古镇已经经过了现代化改造，不少房子也重新装修过。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-18.avif"></p>
<p>一路上见到过好几家的连锁（或加盟）鲜花饼店，刚出炉的鲜花饼味道确实不错。另外还有全国知名的清真兰州拉面，长得都一样，就不放图了。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-19.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-20.avif"></p>
<p>我们十点多才吃过早饭，因此在喜洲镇随便吃点当地小吃当作午餐了。除了鲜花饼外，自然要尝尝点评上好评的喜洲粑粑。在这么冷清的镇上，这家店生意算相当不错。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-21.avif"></p>
<p>至于味道嘛… 个人觉得一般。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-22.avif"></p>
<p>这家店位于喜洲镇的中心广场旁，有一排桌椅供游客们在小店买了吃喝后休息，主要是防晒。严家大院也在广场旁边，不过我们对此都不感兴趣就没进去参观。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-23.avif"></p>
<h3 id="稼穑集農耕文化艺术馆"><a href="#稼穑集農耕文化艺术馆" class="headerlink" title="稼穑集農耕文化艺术馆"></a>稼穑集農耕文化艺术馆</h3><p>不到一个小时我们逛完了喜洲镇，坦白讲也没啥可逛的。除了吃以外，这些翻新的建筑也就走马观花看一看。但俗话说得好，来都来了，换条小路继续逛逛吧，意外地发现了这座農耕文化艺术馆，很是惊喜。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-24.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-25.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-26.avif"></p>
<p>这稻田是真的好看。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-27.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-28.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-29.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-30.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-31.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-32.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-33.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-34.avif"></p>
<p>从喜洲镇出来，虽然地图上显示海舌生态公园停止营业，但来都来了，这么近的距离还是开车过去看看。公园确实还在维修建设中，尘土飞扬，还有很重的柴油味。路边看洱海水质一般，却有老哥在湖边钓鱼，也不知道收获如何。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-35.avif"></p>
<h3 id="大理古城"><a href="#大理古城" class="headerlink" title="大理古城"></a>大理古城</h3><p>返程前在车上小憩一会，开回大理古城已过五点。天色渐暗，还飘起了毛毛细雨。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-36.avif"></p>
<p>大理古城人依旧不多，没有太阳后非常凉爽，逛起来很舒服。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-37.avif"></p>
<p>晚餐是点评上搜的特色菌菇锅，菌菇的种类非常丰富，还有火腿肉，味道不错，物美价廉。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-38.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-39.avif"></p>
<p>大理古城商业化成熟，麦当劳、星巴克、屈臣氏等连锁店一应俱全。小店和国内的其他古城、古镇也都差不多，没啥意思。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-40.avif"></p>
<p>九点回到民宿，再次登上楼顶欣赏洱海夜色，结束这一天。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-41.avif"></p>
<h2 id="09-27环海东路、双廊古镇与丽江和府洲际酒店"><a href="#09-27环海东路、双廊古镇与丽江和府洲际酒店" class="headerlink" title="09.27环海东路、双廊古镇与丽江和府洲际酒店"></a>09.27环海东路、双廊古镇与丽江和府洲际酒店</h2><p>早餐，人生的一半。民宿的米粉好吃。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-42.avif"></p>
<p>回屋喝杯茶，收拾好行李，准备出发游玩洱海的东半部分。今天计划沿环海东路一路边开边欣赏湖景、拍照，时间有限跳过挖色镇，在双廊古镇吃午餐，最后回丽江的酒店歇脚。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-43.avif"></p>
<h3 id="环海东路"><a href="#环海东路" class="headerlink" title="环海东路"></a>环海东路</h3><blockquote>
<p>后视镜里的世界，越来越远的道别。</p>
</blockquote>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-44.avif"></p>
<p>蓝天白云，车少，开起来非常爽。有些路段有绿道可供游客跑步、骑行，旁边靠湖的草坪有几组人在拍婚纱照。我们也在附近停车，下来走走拍拍。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-45.avif"></p>
<p>走，过去看人拍婚纱！</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-46.avif"></p>
<p>这个天气、景色以及人流来拍婚纱还是蛮不错的。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-47.avif"></p>
<p>右前方应该是金梭岛。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-48.avif"></p>
<p>天境阁景区这有一个下坡大拐角路段，特意规划停车位供游客驻足赏景。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-49.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-50.avif"></p>
<p>沿路能看到不少租敞篷甲壳虫或小跑车的店，也确实有人租（顶着这么强的紫外线也是够拼😅）。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-51.avif"></p>
<p>给这辆小破车也来一张，虽然是租来的车。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-52.avif"></p>
<p>抬头可见罗荃塔。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-53.avif"></p>
<p>看起来下方有些布景可供游客拍照。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-54.avif"></p>
<p>铁门把山旁有一段路还在维护，两边都有工人指挥，双向单车道。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-55.avif"></p>
<h3 id="双廊古镇"><a href="#双廊古镇" class="headerlink" title="双廊古镇"></a>双廊古镇</h3><p>两点半出头，我们来到了双廊古镇。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-56.avif"></p>
<p>从主干道往巷子里看通向洱海。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-57.avif"></p>
<p>走到靠湖的尽头，跨过这座桥，来吃点评推荐的石板烧。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-58.avif"></p>
<p>二楼的风景也是不错，能看到桥的另一侧。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-59.avif"></p>
<p>和平时吃的烤肉味道差不多，此时已是下午三点，开吃！</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-60.avif"></p>
<p>凉拌木耳酸辣清爽。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-61.avif"></p>
<p>当地特色饵丝，吃不惯。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-62.avif"></p>
<p>饭店厕所门前的景色竟然也不错。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-63.avif"></p>
<p>吃饱再散步消消食。这里景色说不上有多美，但给人感觉安逸闲适。杨丽萍的违章建筑太阳宫就在隔壁，不过需要喝下午茶才让进，略过。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-64.avif"></p>
<p>随便找条大点的巷子走进去看看。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-65.avif"></p>
<p>有台阶走下去，湖水还算清澈。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-66.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-67.avif"></p>
<p>另一侧民宿的风格很网红哈哈。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-68.avif"></p>
<p>返回停车场的路上还跟一位老奶奶买了几个石榴，甜。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-69.avif"></p>
<p>没想到腾讯云已经把“魔手”伸向了云南一个旅游古镇的公厕！</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-70.avif"></p>
<p>出发回丽江。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-71.avif"></p>
<p>六点四十抵达三义收费站，夕阳很美。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-72.avif"></p>
<h3 id="和府洲际酒店"><a href="#和府洲际酒店" class="headerlink" title="和府洲际酒店"></a>和府洲际酒店</h3><p>提前订房时已经被告知没有英迪格的房源，IHG对比之下少个小院子，算是小小的遗憾。不过IHG也蛮棒的。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-73.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-74.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-75.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-76.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-77.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-78.avif"></p>
<p>提前搜好附近好评的铁锅鱼，套餐才六十多块，店的环境也不错，性价比无敌。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-79.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-80.avif"></p>
<p>土豆片居然带着淡紫色，第一次见。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-81.avif"></p>
<p>快十点回到酒店，去礼宾部取上明天雪山的门票，一切就绪只待出发。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-1-82.avif"></p>
<h2 id="下一集"><a href="#下一集" class="headerlink" title="下一集"></a>下一集</h2><p>《<a href="https://joouis.com/2021/2020-yunnan-trip-2/">2020云南游记（中）</a>》</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>food</tag>
        <tag>yunnan</tag>
        <tag>dali</tag>
        <tag>driving</tag>
        <tag>洱海</tag>
        <tag>喜洲</tag>
        <tag>稼穑集農耕文化艺术馆</tag>
        <tag>大理</tag>
        <tag>大理古城</tag>
        <tag>双廊</tag>
        <tag>玉龙雪山</tag>
        <tag>蓝月谷</tag>
        <tag>丽江</tag>
        <tag>丽江古城</tag>
        <tag>木府</tag>
      </tags>
  </entry>
  <entry>
    <title>2020云南游记（中）</title>
    <url>/2021/2020-yunnan-trip-2/</url>
    <content><![CDATA[<h2 id="上一集"><a href="#上一集" class="headerlink" title="上一集"></a>上一集</h2><p>《<a href="https://joouis.com/2021/2020-yunnan-trip-1/">2020云南游记（上）</a>》</p>
<h2 id="09-28玉龙雪山"><a href="#09-28玉龙雪山" class="headerlink" title="09.28玉龙雪山"></a>09.28玉龙雪山</h2><p>对于夜猫族来说，假期的上午九点多起床、十点出门已经够早，我们需要赶在最后一刻去吃自助早餐。洲际和府酒店的房间坐落在一群古香古色的二层楼房里，如果有较重的行李或距离大堂较远可以提前预约电瓶车接送。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-1.avif"></p>
<p>餐厅在大堂一楼的一侧，味道中规中矩，关键还是装修风格和视野别有风情。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-2.avif"></p>
<p>吃饱站在外面的天台，找个合适的角度能看到雪山。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-3.avif"></p>
<p>当然酒店内视野最好的观景点，同时也是酒店著名的打卡点之一，便是大堂中央的酒廊。犹抱琵琶半遮面的雪山远景如同一幅壁画镶嵌在巨大的落地窗上。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-4.avif"></p>
<p>条条大路通雪山😁。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-5.avif"></p>
<p>半小时出头，我们便到了雪山景区入口。除了套餐里包含的玉龙雪山门票，需要额外付一笔主景区门票费，网上也称为进山费，80块一个人。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-6.avif"></p>
<p>进入景区大门之后，实际还有一段路程才到停车场，沿路已经开始有人停车拍照。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-7.avif"></p>
<p>从停车场往游客中心走去，环境不错，像走在一个生态公园中。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-8.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-9.avif"></p>
<p>本次云南之行的一个重要目的，就是考察景区智慧厕所的建设情况（大误）。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-10.avif"></p>
<p>在游客接待大厅兑票、检票过后，坐上了旅游大巴，把我们送去雪山脚下的索道站。沿途这蜿蜒的盘山公路，配上四周高耸林立的树木，和之前又是完全不同的景色。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-11.avif"></p>
<p>索道口的海拔高度是3356米，对常人来说已不算低。其实从停车场下车走了两步，我就隐约感觉脚下有点飘。事实证明越往上走，随着供氧不足，高原反应会越来越严重。而我们一开始在网上做功课的结论是不买氧气罐，那么实际情况会如何呢？</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-12.avif"></p>
<p>坐上缆车，没想到某人怕得要命，抓紧了我的裤子😂。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-13.avif"></p>
<p>不过害怕这事因人而异，我们隔壁的一对情侣是男生怕得闭上了眼睛，反倒是他对象一直喊他睁眼看看。索道的后半段已经云雾缭绕，窗外什么都看不清，直到接近光秃秃的雪山。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-14.avif"></p>
<p>前一天了解到九月底的雪山还没有雪，温度也不是很低，我便只穿了短袖T恤套一件厚绒外套上去。事实证明静止不动时还是有一点冷，爬山则刚刚好。出了索道出口这边的游客中心，就到了登山的大平台，海拔4506米。望向玉龙雪山允许游客攀爬的终点觉得并不远，等到实际爬起来才发现并不容易，每一步上升的海拔高度都仿佛在对渺小的人类说“到此为止吧”。有些年纪大的老人确实没上去，就在平台上拍拍照、转悠一下。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-15.avif"></p>
<p>往下看很壮观，有平原、山峦、索道还有栈道。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-16.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-17.avif"></p>
<p>居然还有商家运了只羊驼上来搞创收，有点离谱。然而大爷大妈们似乎对它很感兴趣。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-18.avif"></p>
<p>我们在4506米平台上晃了一圈，吃掉昨天在大理买的鲜花饼和自助早餐薅的酸奶后，做了一个明智的决定——买瓶氧气罐再上栈道。最终这瓶氧气罐支撑着某位朋友上到终点，按照她的理论，身体好的人高反会更加严重，而我这种身体差加上长期过度疲劳的人，受到的影响会小很多🙄。</p>
<p>那么，开始爬向终点吧。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-19.avif"></p>
<p>走一段台阶就休息一下，顺便拍拍照、欣赏下风景。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-20.avif"></p>
<p>一眨眼就爬了65米，比想象中轻松呢。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-21.avif"></p>
<p>往另一边看，一点绿色都没有。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-22.avif"></p>
<p>人少，走走停停还是比较舒服。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-23.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-24.avif"></p>
<p>又上升了20米，距离终点4680还有228米。另外无人机禁飞，赞！</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-25.avif"></p>
<p>距离4506米平台的垂直高度，这么看根本不像有85米。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-26.avif"></p>
<p>救命的“大宝贝”，景点商铺卖60块一瓶，对某位朋友发出“真香”⚠️。一路上有不少跟团来的游客，除了自己买的氧气罐外，旅行团也发了，压根用不完。他们直接原地叫卖，我们半价30又收了一瓶😂。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-27.avif"></p>
<p>来，摆个自黑的pose，哈哈哈哈。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-28.avif"></p>
<p>有点雪山那意思了。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-29.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-30.avif"></p>
<p>另一侧还是这种黑灰色沙土面。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-31.avif"></p>
<p>终于，来到了终点！</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-32.avif"></p>
<p>4680米！一对东北的母女游客给她们可爱的玩偶拍打卡站，超有爱。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-33.avif"></p>
<p>回头看看来时走过的路，174米的高度。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-34.avif"></p>
<p>冰川分段景观，这时候没什么好看的。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-35.avif"></p>
<p>下山前来根全国各大旅游景点的知名美食——台湾烤肠补充体力。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-36.avif"></p>
<p>下山的路上已经可以看到我们的下一个目标蓝月湖。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-37.avif"></p>
<p>返回4506米平台，最后在缆车中看一眼美丽山川。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-38.avif"></p>
<h2 id="09-28-蓝月谷"><a href="#09-28-蓝月谷" class="headerlink" title="09.28 蓝月谷"></a>09.28 蓝月谷</h2><p>走完玉龙雪山，下一站是同样大名鼎鼎的蓝月湖。看到第一眼就被折服，好美！</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-39.avif"></p>
<p>雪山脚下的壮丽。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-40.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-41.avif"></p>
<p>我很中意这一处景，很有感觉。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-42.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-43.avif"></p>
<p>除了拍婚纱的新人外，似乎还有奇怪的主播入镜？</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-44.avif"></p>
<p>不同角度看湖水颜色还不完全一样。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-45.avif"></p>
<p>实际上湖水非常清澈。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-46.avif"></p>
<p>走到第三个湖，脚酸的不行，湖景也看够了，打道回府吧。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-47.avif"></p>
<p>上大巴前看到三位老太太齐坐一排吸氧😂。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-48.avif"></p>
<p>回到停车场，走前再去马路对面拍几张，远处也有人在拍婚纱照。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-49.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-50.avif"></p>
<p>下山的路，没什么车，开起来超级惬意。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-51.avif"></p>
<p>回到酒店，电话车行来停车场取车。三天跑了五百公里，回本咯。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-52.avif"></p>
<p>傍晚的酒店，也还蛮好看的。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-53.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-54.avif"></p>
<p>今天整理房间的服务员小姐姐给折了一只小象，有点丑萌哈哈。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-55.avif"></p>
<p>晚餐来吃大众点评热门的阿婆腊排骨，从酒店步行十分钟就到了。店不大，生意很好。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-56.avif"></p>
<p>团购的情侣套餐才109块，这满满一锅肉，味道可以。连续两天晚餐都物美价廉，大大的好评！</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-57.avif"></p>
<p>走完溜达回去，看到了酒店的招聘广告，有需要的朋友直接电话联系，就说是我介绍的👌。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-58.avif"></p>
<p>抬头还能看到几颗星星，真好，晚安。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-2-59.avif"></p>
<h2 id="下一集"><a href="#下一集" class="headerlink" title="下一集"></a>下一集</h2><p>《<a href="https://joouis.com/2021/2020-yunnan-trip-3/">2020云南游记（下）</a>》</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>food</tag>
        <tag>yunnan</tag>
        <tag>dali</tag>
        <tag>driving</tag>
        <tag>洱海</tag>
        <tag>喜洲</tag>
        <tag>稼穑集農耕文化艺术馆</tag>
        <tag>大理</tag>
        <tag>大理古城</tag>
        <tag>双廊</tag>
        <tag>玉龙雪山</tag>
        <tag>蓝月谷</tag>
        <tag>丽江</tag>
        <tag>丽江古城</tag>
        <tag>木府</tag>
      </tags>
  </entry>
  <entry>
    <title>2020云南游记（下）</title>
    <url>/2021/2020-yunnan-trip-3/</url>
    <content><![CDATA[<h2 id="上一集"><a href="#上一集" class="headerlink" title="上一集"></a>上一集</h2><p>《<a href="https://joouis.com/2021/2020-yunnan-trip-2/">2020云南游记（中）</a>》</p>
<h2 id="09-29丽江古城与木府"><a href="#09-29丽江古城与木府" class="headerlink" title="09.29丽江古城与木府"></a>09.29丽江古城与木府</h2><p>尽管前几日的行程负荷不算太大，但我一路兼顾车夫和游客的双重身份，仍有些疲惫，所以最后两天我们选择让节奏再慢一点。当然早餐还是不能落下，闹钟定在九点半，醒来拉开窗帘，让阳光照进古香古色的房间。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-1.avif"></p>
<p>不知是谁把门打开了，九月底的天气已经有点凉，来一碗热腾腾的牛肉面正是心头所好。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-2.avif"></p>
<p>吃饱当然要转一圈消消食，从对面看餐厅。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-3.avif"></p>
<p>回笼觉睡到两点，磨蹭一下出门吃午饭。我们选择了网上口碑很好甚至有同事推荐的云雪丽餐厅，皇冠分店就在酒店隔壁，步行三分钟可达。不过我们参考大众点评的热门榜单点了三个菜，只有炸豆腐合我们的口味（推荐！），另外两个菜嘛… 吃不惯，算难得的翻车经历吧，并且这顿是我们云南之行吃得最贵的一餐😂。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-4.avif"></p>
<p>鱼是甜口的，小火煮到后面越吃越甜😢。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-5.avif"></p>
<p>菌菇中规中矩，吃到后面有点凉了就不太行。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-6.avif"></p>
<p>人生充满了无数次试错，这次的失败原因只不过是口味不合，并不影响我们的心情。实际上为了不浪费粮食（以及钱），我们还是吃了很多，后面逛丽江古城时都没买什么小吃。从店里出来向古城中心走，路的右边是饭店、民宿等商家，左边便是我们住的酒店。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-7.avif"></p>
<p>人少，幽静，处处有河道。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-8.avif"></p>
<p>不一会便走到了木府，它是我们今天参观得唯一一个正儿八经的景点，代表了一段民族文化融合的历史。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-9.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-10.avif"></p>
<p>门票包含导游解说服务，由于游客不多，都是聚集一批游客才开始导览。我们木府门后的广场等待时，还见识了旅游景点的赚钱套路。有工作人员主动安排我们合影留恋，等参观完回到广场时他们便拿着洗好的照片和挂牌问我们买不买。老一辈或传统观念的人还是很吃这套，想着来都来了留个纪念或者担心打好的照片被用作其他用途，便掏出手机扫码付款、被强行消费了一把。只可惜工作人员今天遇上我们，一口回绝不要，主动跟我们讨价还价还是不要，当代年轻人谁要在你这大殿门口拍到此一游照😂。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-11.avif"></p>
<p>从大门的“忠义”到议事厅的“心诚报国”，也算是一次爱国教育机会吧哈哈。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-12.avif"></p>
<p>木府是纳西族木氏土司的衙门，当时的土司审时度势主动归顺明王朝，积极学习汉文化，因此木府里的不少建筑元素对我们国内游客而言极其熟悉。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-13.avif"></p>
<p>读万卷书，行万里路。几百年前的少数民族积极学习先进文化知识是一件令人欣慰的事情。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-14.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-15.avif"></p>
<p>在木府内看古城的街道。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-16.avif"></p>
<p>乔木世家。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-17.avif"></p>
<p>半兽人？</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-18.avif"></p>
<p>最后登上这个半山腰的道教三清殿俯瞰木府，有点在景山公园眺望故宫的意思。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-19.avif"></p>
<p>出了木府才五点，晚上九点这边还有灯光秀，我们便打算在古城里逛逛再决定晚餐吃什么。这边的店铺和其他古城、古镇类似，都很商业化。不过也能看到一些当地的民俗特色，例如纳西语的象形文字。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-20.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-21.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-22.avif"></p>
<p>蓝是中国蓝。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-23.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-24.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-25.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-26.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-27.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-28.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-29.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-30.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-31.avif"></p>
<p>晚餐选择了大众点评上的另一家热门餐厅——滇厨餐厅小锅巴，人气很旺，七点取号居然排了四十分钟的队，这是云南之行头一次也是唯一一次排队。好在等待是值得的，味道很不错，我们也等饿了，只随手拍了两张。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-32.avif"></p>
<p>这个野山菌铜锅饭贼香，有菌菇有火腿，米饭带着油和锅巴，无敌！</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-33.avif"></p>
<p>吃完我们直奔木府看灯光秀，通过将影片投影在木府的大门上呈现木府的历史与风采，视觉效果比较立体。上一次看到类似的表演应该还是清华大学百年校庆时的主楼投影，也是当时的热搜话题之一。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-34.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-35.avif"></p>
<p>最后一项活动是回酒店泡澡玩手游😆，顺带一提云南的网络延迟在玩游戏时特别明显，打PVP游戏只配玩玩娱乐模式。</p>
<p>洲际酒店的后门，有点欧式建筑的感觉，还挺好看的。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-36.avif"></p>
<h2 id="09-30返程"><a href="#09-30返程" class="headerlink" title="09.30返程"></a>09.30返程</h2><p>今天睡到十点多，卡在极限来吃最后的早午餐。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-37.avif"></p>
<p>吃完就回去收拾行李准备回家啰。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-38.avif"></p>
<p>下午六点多的航班不着急，作为吃货的我们寄存好行李后，又去酒店附近一家广受好评的牛肉米线嗦了碗粉，顺便再搞杯奶茶喝喝。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-39.avif"></p>
<p>做出口碑的苍蝇小馆必然是物美价廉。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-40.avif"></p>
<p>从酒店打车到三义机场的终点直接设在贵宾楼，招行CIP点数赶紧消耗一下，疫情日子都要用不完了。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-41.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-42.avif"></p>
<p>不远处硕大的招牌写着“重拳出击，扫黑除恶”，今年的《扫黑风暴》你看了吗？</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-43.avif"></p>
<p>是时候说再见了，我们下篇游记再见吧👋🏻。</p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-44.avif"></p>
<p><img data-src="https://cdn.joouis.com/2020-yunnan-trip-3-45.avif"></p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>food</tag>
        <tag>yunnan</tag>
        <tag>dali</tag>
        <tag>driving</tag>
        <tag>洱海</tag>
        <tag>喜洲</tag>
        <tag>稼穑集農耕文化艺术馆</tag>
        <tag>大理</tag>
        <tag>大理古城</tag>
        <tag>双廊</tag>
        <tag>玉龙雪山</tag>
        <tag>蓝月谷</tag>
        <tag>丽江</tag>
        <tag>丽江古城</tag>
        <tag>木府</tag>
      </tags>
  </entry>
  <entry>
    <title>2021 微软内推，已协助超过十余位候选人拿到 offer</title>
    <url>/2021/2021-referral-kickoff/</url>
    <content><![CDATA[<p>哈喽各位，2020年的时间仿佛被偷走了一样，一晃眼就来到了2021。</p>
<p>从2018年底第一次发帖为微软内推，现在已是第三个年头。在工作和生活之余进行这项活动，至今推成了三十多位候选人，对我来说是一件非常有成就感的事。每一批候选人入职后，请大家一起吃个饭、相互认识一下，偶尔也请HR同事一起顺道为新人们答疑解惑，这样的“网友”线下见面很有意思。公司尤其是苏州这边发展得速度也超乎想象，即将有一大批人搬到隔壁楼办公，而正式的二期大楼也已经开工。公司一直在持续发展、整体环境依然处于不错的水准，是我继续内推的动力。</p>
<p>回想过去大半年，其实我已经很少置顶自己的帖子去打广告，因为体验不好停掉了校招内推，这期间也陆续能看到其他同事的内推帖，甚至包括我内推进来的同事 LOL。不过还是能陆续收到一些咨询、请求内推的邮件，真的非常感谢大家对我的信任。我做内推的想法一直没变，真诚沟通，不骗简历，不歧视简历，尽量换位思考。</p>
<p>这里极简单的分享过去一年中的两个小故事。第一个也许有点老生常谈，一位职场经验不多的优秀候选人，同时拿到了两份大厂offer，很纠结，我从短期三五年职业发展的角度帮助他分析了两小时，给了他一些建议，即便这些建议可能让我拿不到内推奖金。第二个有点曲折，简而言之是候选人成功进来做了同事，工作很努力，但发展远不如预期，他自己过得也不是很开心。我们一年多的时间聊了好几次，我从一开始给一些工作效率、沟通效率的建议，到后面帮忙打听别组的机会，现在他开心地飞起，开始另一段业务挑战。</p>
<p>最后我也只是个普通的打工人，经验不多，个性耿直。不是所有找我内推的朋友我都帮推了，我内推的不少候选人最后也没通过所有面试，这太正常不过了。反正我就继续佛系内推，有缘多交流，最后来不来还是看候选人自身的实力和职业发展选择。</p>
<p>希望大家2021都能顺利，更重要的是，自己和家人身体健康！</p>
<span id="more"></span>

<br />



<p>至于如何找我内推，附上以往的内推帖，里面会有答案：</p>
<ul>
<li><a href="https://joouis.com/recruit/">微软中国招聘，期待你的加入</a></li>
<li><a href="https://joouis.com/2019/a-thought-of-referral/">分享一下我的内推心得，顺便招人</a></li>
<li><a href="https://joouis.com/2020/2020-referral-kickoff/">2020 微软内推，已协助超过十余位候选人拿到 offer</a></li>
</ul>
]]></content>
      <categories>
        <category>技术人生谈</category>
      </categories>
      <tags>
        <tag>work</tag>
        <tag>referral</tag>
        <tag>recruit</tag>
        <tag>microsoft</tag>
        <tag>feedback</tag>
        <tag>review</tag>
      </tags>
  </entry>
  <entry>
    <title>开车有三宝</title>
    <url>/2021/3-idiots-while-driving/</url>
    <content><![CDATA[<p>开车有三宝：</p>
<p>变道、转向不打灯，</p>
<p>并线或占两车道行驶，</p>
<p>限速 60 开 40，限速 80 开 50，限速 120 开 80。</p>
<p>“奇葩”的违规行为数不胜数，以上三宝只因过于常见可以作为模式归纳。</p>
<p>三宝们配合上横冲直撞的电瓶车“大军”，在马路上构建出一幅幅和谐、美好的画面。</p>
<p>真好，呵呵。</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>driving</tag>
        <tag>idiots</tag>
        <tag>illegal</tag>
      </tags>
  </entry>
  <entry>
    <title>写在博客三周年</title>
    <url>/2019/3rd-blog-anniversary/</url>
    <content><![CDATA[<p>有的时候事情就是这么巧。比如这篇博文，并非专程为三周年而写，而是恰好在这个时间节点博客有了一些质的进步，值得记录一下。</p>
<span id="more"></span>

<h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p>翻修博客的起因源自写游记的需求，今年过年在泰国玩了十来天，想在博客上记录心得。一直拖到现在还未动笔，除了年后工作较忙外，也是考虑想给博客找一个合适的图床托管图片，毕竟游记涵盖大量照片，而目前图片都托管在 GitHub 上，访问速度得不到保障，时常还会被墙，非常影响阅读体验。此外偶尔也想过距离博客搭建之初已久，会不会在最新版本的博客框架中支持一些新的特性可以提升博客书写和访问的体验，例如支持视频、音乐播放等。</p>
<p>于是，在清明假期的第一天，我看了下本博客使用的 <a href="https://github.com/theme-next/hexo-theme-next">NexT</a> 主题，发现都已经更新到第七个版本，支持不少新功能，如从 CDN 加载第三方库、支持 <code>quicklink</code>、代码可复制等等。翻着翻着，又突然好奇博客的创建时间，在 GitHub 上惊奇地发现第一次 commit 是在 2016.04.28，也就是说博客即将年满三岁！因此趁着假期，干脆把博客的技术框架升级，同时整理博文内容，作为三周年的纪念。</p>
<h2 id="升级思路"><a href="#升级思路" class="headerlink" title="升级思路"></a>升级思路</h2><p>关于博客是怎么搭建的，在最初建站时就写了一篇简单的<a href="https://joouis.com/2016/build-a-blog-in-5-minutes/">文章</a>，随后两年多的时间里还添加了评论功能、统计功能、小修小补了一些地方。照理说这类静态博客的核心就是文章，只要把文章挪到新的工程里，剩余工作主要就是配置框架。</p>
<p>因此首先更新 hexo 脚手架，用脚手架生成一个最新版的工程样例。对比现有博客的工程结构，把属于内容的部分抠出来放到新工程里，主要是 <code>source</code> 目录下的资料。接着对照旧版 <code>_config.yml</code> 文件，一点点把新的配置文件填好即可。这时候在本地把博客运行起来，应该要和线上运行的版本一模一样，毕竟主题没变。</p>
<p>接下来就要更新主题框架了。这里并没有按照官方推荐的方式去 <code>git clone</code> <code>master</code> 分支，而是出于稳定性考量从 <code>releases</code> 页面下载了最新版的 <code>zip</code> 包。考虑到之前可能魔改过一些主题的 layout 文件（这种做法显然不可取），而新版主题可能已经升级过一些样式细节，因此遵循新版主题的所有设计，只对照 <code>_config.yml</code> 文件重新配置，舍弃过去魔改的部分，未来哪里看着不顺眼再改进。</p>
<p>7.1.0 版本的 NexT 主题配置文件已达到一千两百多行，内容非常的丰富，把每一个配置过一遍也是学习博客功能的过程。就这么了解每一个配置的功能，确认当前博客是否配置过、如何配置的，然后决定在新版博客里要怎么配。通常依赖到 hexo 第三方库的功能，要额外通过 <code>yarn add</code> 安装；而主题自身支持的功能，函数库一般以 <code>theme-next-</code> 开头的，其实并不用把代码下载到指定的 <code>source/js/</code> 目录下，因为配置已经支持 CDN 加载，非常的方便！</p>
<p>在配置博客的过程中，可以通过 <code>hexo server</code> 在本地起一个服务实时查看效果，有的配置也是通过这样的调试方式才了解其作用。完成配置后，本地生成静态资源，使用脚手架推送到 <code>gh-pages</code> 分支，最后进行线上验证。另外有些问题，如百度打点推送功能，也只有线上环境才能验证。</p>
<p>此外，在整个升级过程中，由于新增分类页、支持主页文章的预览、更换图床链接等，对博文内容也进行了一些相应的修改。后续时间充裕时还可以补充一些标签以便更好地发挥”相关热门文章”功能，甚至是给一些适合的文章添加合适的音乐 ;)</p>
<h2 id="改善点"><a href="#改善点" class="headerlink" title="改善点"></a>改善点</h2><p>此次博客改版主要有以下更新：</p>
<ul>
<li>顶部菜单加入了”招聘”菜单，是的<a href="https://joouis.com/recruit/"><strong>微软中国正在招人</strong></a>喔！</li>
<li>为每篇博文添加 Creative Common 版权信息。选择 <code>BY-ND</code> 而非 <code>BY-NC-ND</code> 是考虑到如果我的博文能帮助别人赚到钱，那么何乐而不为呢；</li>
<li>将所有图片从 GitHub 迁移到了 OneDrive，后者的 CDN 极大提升了图片的可访问性与访问速度；</li>
<li>优化了一些 SEO 配置项<ul>
<li>更新了蜘蛛协议的 <code>robots.txt</code> 文件；</li>
<li>向 Google 和百度提交了 <code>sitemap.xml</code> 文件；</li>
<li>将文章链接缩短为 <code>年份+文章名</code> 的组合；</li>
</ul>
</li>
<li>预加载页面内的链接内容，加速访问体验；</li>
<li>侧边栏<ul>
<li>社交媒体全部改为图标展示，新增邮箱链接；</li>
<li>点击其他区域自动隐藏侧边栏；</li>
<li>移动端文章页支持展示侧边栏；</li>
</ul>
</li>
<li>博文<ul>
<li>首页支持博文预览；</li>
<li>Meta 信息添加了博文更新时间、分类以及预计阅读时长；</li>
<li>代码区块支持复制；</li>
<li>添加相关热门文章阅读推荐；</li>
<li>添加打赏娱乐功能 XD；</li>
<li>自动对文章内容进行空格处理；</li>
</ul>
</li>
<li>优化搜索方案，从 Swifttype 切换为本地索引方式，搜索速度提升非常明显；</li>
<li>升级 Fancybox 版本，支持图片名称、查看文内所有图片等功能，浏览体验大大增强；</li>
<li>添加 pace 进度条，提升加载体验；</li>
<li>支持页面阅读位置保存。最早在微信公众号上体验到这个特性，对于阅读长文很有帮助；</li>
<li>隐藏标签菜单入口。考虑到目前已有大几十种标签，太多太杂，不如换成分类菜单。同时保留文章内的标签展示，作为二级入口可以查看某一标签的所有博文；</li>
<li>支持 Aplayer 音乐播放器。</li>
</ul>
<h3 id="2020-11-24-更新"><a href="#2020-11-24-更新" class="headerlink" title="2020.11.24 更新"></a>2020.11.24 更新</h3><p>没想到今天又更新了一版主题，将 NexT 主题升级到了 <code>8.0.2</code> 版。这次也非常偶然，原本准备写一篇关于机器学习入门的文章，里面需要使用到数学公式插件。其实原本 NexT <code>7.1.0</code> 就有插件支持该功能，但我完全忘了这茬，一番 Google 后装了 <code>hexo-math</code> 插件，命令行报错发现它“Requires Hexo 5+”，再一看原本的 Hexo 还是 <code>3.8.0</code> 版，好家伙一下子差了两代，升！</p>
<p>主题升级带来的最大收益非黑暗模式莫属。其实去年做博客翻新工程期间，就恰好发现下一个小版本支持了黑暗模式，但当时尝试升级发现体验并不理想，小毛病不少，因此作罢。时隔一年半再次尝试，效果已经基本达到我的预期。其他方面，常规的升级依赖包括字体、修复 bugs、优化性能，还有一些小的 features 增删（不过未必在博客中启用），都可以在 NexT 的 <a href="https://github.com/next-theme/hexo-theme-next/releases">Release Notes</a> 中查看。</p>
<h3 id="2024-02-24-更新"><a href="#2024-02-24-更新" class="headerlink" title="2024.02.24 更新"></a>2024.02.24 更新</h3><p>这次更新的契机来自Github Security Dependabot alerts，总共有56个问题，其中不乏数个Critical severity。那就刚好把Hexo、Next以及一众插件依赖都升到最新版看看能解决多少问题，剩下的再手动调整吧。</p>
<ul>
<li>移除 Aplayer 插件，使用频率实在太低。</li>
<li>移除<code>themes/next-x.x.x</code>目录，改用NPM包。</li>
</ul>
<h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>博客的升级花费大概两天的时间，一点点扣细节，既当产品又做技术，搞一个自嗨的项目，还是玩得非常开心。未来当然还是以输出文章为主，除了内容本身外，也试着丰富展现形式，达到一个比较舒服的阅读体验。最后关于博客的推广，其实在建站之初只想创造一个属于自己的空间，不过现在慢慢感受到，如果自己的文字能够帮助到更多人，是一件正能量满满的事情。</p>
<p>等到五周年时再看看又发生了哪些变化吧~</p>
]]></content>
      <categories>
        <category>技术人生谈</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>anniversary</tag>
        <tag>hexo</tag>
        <tag>refactor</tag>
        <tag>TechTalk</tag>
      </tags>
  </entry>
  <entry>
    <title>分享一下我的内推心得，顺便招人（已暂停内推）</title>
    <url>/2019/a-thought-of-referral/</url>
    <content><![CDATA[<p>哈喽各位，又是金三银四的季节。今年本来不打算发帖招人，一是最近工作比较忙，二是合适的人确实不好招，已经佛系了。不过这两天水 V 站看到两个帖子有感现在发起面试其实是一件门槛很低的事，却会同时增加候选人和面试公司的无效投入，因此分享一下自己内推的心得，顺便打个广告。那两个帖子待会也会提到，但绝对不是批评或嘲讽其他大厂的面试体验不好，只是举例，我是真的看到这两个案例才想发帖的。</p>
<span id="more"></span>

<h2 id="1-发招聘帖"><a href="#1-发招聘帖" class="headerlink" title="1. 发招聘帖"></a>1. 发招聘帖</h2><p>实事求是介绍公司的情况，最重要的是走心。</p>
<p>一直觉得实事求是很简单，不过这两天有 Shopee 的同学发帖说自己是 965 公司，下方留言纷纷打脸，酿成翻车现场。微软在 955.WLB repo 稳居前三（好吧前三就是第三），我也不敢说微软不加班。这事还是看组，看团队，看个人发展。不过确实加班的人很少，有些还是因为跨国团队协作的原因。</p>
<p>我理解的走心就是与大家分享这家公司的优势所在，内推人为什么愿意在这家公司工作，比如在上一个<a href="https://www.v2ex.com/t/518252">招聘帖</a>中详细介绍了微软会提供给员工的各种福利待遇。我乐意向大家推荐这家公司，是出自认同，同时希望找到靠谱的同事，而不是为了 KPI。</p>
<h2 id="2-收到候选人邮件"><a href="#2-收到候选人邮件" class="headerlink" title="2. 收到候选人邮件"></a>2. 收到候选人邮件</h2><p>手头一直有个 iPhone 的重要原因之一就是 iPhone 可以不翻墙收到 Gmail 推送。我对候选人的承诺是 24 小时之内一定会<strong>认真</strong>读完你的邮件，了解你的情况，并给出对应的回应（前提是靠谱的邮件哈，有正式一点的标题和具体的一些经历介绍，一句话之类太奇怪的邮件抱歉回不了）。</p>
<p>为什么这里强调认真了解候选人情况，就是我今晚看到《<a href="https://www.v2ex.com/t/553858">谈一下 4.4 号裸辞 4.6 号来杭 开始投简历的经历</a>》，原帖楼主是 18 届的，却被内推面试蚂蚁的 Java 开发专家，p5 去面 p7 职位，这不搞笑吗？</p>
<p>回应一般有以下几种：</p>
<ul>
<li>劝退。是的，劝退，只是为了候选人负责。劝退时通常会解释，大厂一般都有简历系统，你面试的情况都会记录下来，如果没有十足的准备，或者你的经历距离普遍录用标准有明显的差距，就别刷负评了。</li>
<li>进一步了解。抱着劝退的心态了解更多细节，比如学历不好的话有没有 ACM 经历，项目经验太宽泛问问有没有一些具体的实践推动业务等亮点。</li>
<li>确认投递职位和兴趣爱好。确认过简历，是我们要的人，但还需要再沟通。为什么要确认职位和兴趣，是因为我们尊重候选人的想法，希望尽量能帮助候选人找到喜欢的、合适的工作内容，而不是把人骗过来干活。这个马上还会细说。</li>
</ul>
<h2 id="3-内推系统，HR-联系"><a href="#3-内推系统，HR-联系" class="headerlink" title="3. 内推系统，HR 联系"></a>3. 内推系统，HR 联系</h2><p>内推后候选人的邮箱会收到系统邮件，然后我会联系 HR 赶紧捞简历，继续评估，并与候选人联系。联系的时候可能还会给候选人几个选择，因为有职位招满关闭或是评估觉得候选人不适合此团队的情况，总之是有的选，并且 JD 都会发给候选人看，待候选人确认后，再开启面试之旅。</p>
<p>这里就要说到这两天另外看的一篇帖子《<a href="https://www.v2ex.com/t/553057">shopee 即将三面的时候被告知不要我了</a>》，第一段便是</p>
<blockquote>
<p>当时想要投 web 后端，结果被推到了 devops，向 HR 告知我更想做的方向后对方也没说什么，就还是按照原来的计划面试了</p>
</blockquote>
<p>这种情况在现今找工作似乎有点常见，套路就跟看租房一样，什么半推半就、”来了再说”、”进来都好说”，我个人是非常反感。本质上这些招聘人员只是把你当做他们的业绩，却并没有考虑未来共事和人员稳定性等问题。如上面所说，在微软不太可能出现此类问题，我们会给你一个到多个选择。如果你真的不喜欢，那么通常就是再等等看别的机会，毕竟最近发展挺快的。</p>
<h2 id="4-面试"><a href="#4-面试" class="headerlink" title="4. 面试"></a>4. 面试</h2><p>最后，终于要开始面试了。这个环节我没啥好发挥的，也就是面试前嘱咐几句刷刷题、别紧张啥的，面试嘛本来就是一场缘分。</p>
<p>面试完后我会尽量帮你询问面试的反馈，当然 HR 也会给你。这个过程中会遇到一些有意思的事情，例如有位老哥面完后很有自信但结果很凉，如何向工作经验比我久很多的老哥委婉表达一些负面反馈同时照顾他的感受，是个技术活。</p>
<p>通常面试完后的结果不会等待太久，基本上过一两天就有了。</p>
<h2 id="5-职位获取渠道"><a href="#5-职位获取渠道" class="headerlink" title="5. 职位获取渠道"></a>5. 职位获取渠道</h2><p>好了废话那么多，进入正题吧(???)。通常招聘帖底下都会遇到很多人问 XX 职位招不招、X 年经验招不招以及招聘帖里的职位还招不招。<strong>面对这些常见的问题，为了提升效率，我将招聘有关的信息都整理到了<a href="https://joouis.com/recruit/">博客的招聘页</a>，并会定期更新当下开放的职位，使它成为一个稳定的信息源。</strong>欢迎关注、收藏。</p>
<p>至于想问 XX 职位招不招的朋友们，除了查看上面的招聘页面外，也可以线访问以下两个链接查看、搜索目前开放的职位：</p>
<ul>
<li>推荐手机端查看：<a href="https://microsoft.tupu360.com/position/list?type=SOCIALRECRUITMENT">https://microsoft.tupu360.com/position/list?type=SOCIALRECRUITMENT</a></li>
<li>推荐 PC 端查看：<a href="https://careers.microsoft.com/us/en/search-results?rt=professional">https://careers.microsoft.com/us/en/search-results?rt=professional</a></li>
</ul>
<h2 id="6-联系方式"><a href="#6-联系方式" class="headerlink" title="6. 联系方式"></a>6. 联系方式</h2><p>请写信至 <code>luckyjoou ## gmail.com</code>，24 小时内必回喔~</p>
]]></content>
      <categories>
        <category>技术人生谈</category>
      </categories>
      <tags>
        <tag>work</tag>
        <tag>referral</tag>
        <tag>recruit</tag>
        <tag>microsoft</tag>
        <tag>feedback</tag>
        <tag>TechTalk</tag>
      </tags>
  </entry>
  <entry>
    <title>解析AM335x Arm Cortex-A8处理器的启动流程</title>
    <url>/2019/am335x-arm-cortex-a8-boot-sequence/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2019/watching-notes-revolution-os/">嵌入式笔记</a>第三篇，原文写于2015年。</p>
<p>在真实世界中，一个操作系统是如何被加载的？对于单片机、SoC以及我们常见的计算机，由于硬件设备和软件系统的不同，启动流程肯定会有差异。不过对于大型操作系统，启动流程有不少共通之处，本文将简单解析一个消费类电子产品常用的系统（基于TI的AM335x处理器）是如何被加载启动的。</p>
<p>这篇笔记其实是在组队项目时，由一位队友Adrian Huang所写。相比我们这些“愣头青”，Adrian已经有八九年的Linux底层工作经验，先后在HP、联想、MTK工作过，是十足的大佬。</p>
<span id="more"></span>



<h2 id="Boot-Sequence"><a href="#Boot-Sequence" class="headerlink" title="Boot Sequence"></a>Boot Sequence</h2><p>圖一為AM335x開機流程，其包含ROM Code、MLO、U-Boot與OS Image，底下將說明ROM Code、MLO與U-Boot。</p>
<p><img data-src="https://cdn.joouis.com/am335x-arm-cortex-a8-boot-sequence-1.png" alt="Figure 1: High-level Overview to AM335x Boot Sequence"></p>
<h3 id="ROM-Code"><a href="#ROM-Code" class="headerlink" title="ROM Code"></a>ROM Code</h3><p>ROM Code主要有幾項任務:</p>
<ul>
<li>Stack Setup</li>
<li>Watchdog timer 1  configuration (set to three minutes)</li>
<li>System clock configuration</li>
<li>Search bootable devices (must be the FAT 12&#x2F;16&#x2F;32 partition) for a valid booting image (the image name must be MLO)</li>
<li>Load the content of the file “MLO” from a bootable device to internal RAM (the 128KB on-chip memory)</li>
<li>Execute the file “MLO” stored in internal RAM</li>
</ul>
<p>圖二為ROM Code架構，由“Public ROM Code drivers”可知ROM code支援如下裝置:</p>
<ul>
<li>MMCSD (MultiMediaCard SD)</li>
<li>NAND</li>
<li>XIP (eXecute In Place)</li>
<li>SPI</li>
<li>USB UART</li>
<li>EMAC (Ethernet Media Access Control)</li>
</ul>
<p>也就是說，系統一上電，ROM Code會掃描上述裝置，以便找到Bootable device。由於ROM Code只支援FAT檔案系統格式，所以Bootable device一定要是FAT檔案系統 (FAT12&#x2F;16&#x2F;32檔案系統都可以)。</p>
<p>注意: 該架構的On-chip boot ROM大小為176 KB。</p>
<p><img data-src="https://cdn.joouis.com/am335x-arm-cortex-a8-boot-sequence-2.png" alt="Figure 2: ROM Code Architecture"></p>
<p>圖三為ROM Memory Map:</p>
<ul>
<li>ROM Exception Vectors (0x20000-0x2001F): 該區段定義Exception Handler的位址。譬如: 0x20000存放Reset Handler的位址，也就是板子一上電，第一個執行的地方，課程第七周有詳盡的說明，可參考此<a href="https://docs.google.com/document/d/1Ygl6cEGPXUffhTJE0K6B8zEtGmIuIdCjlZBkFlijUaE/edit">文件</a>。詳盡的ROM Exception Vectors如表一所示。<br><img data-src="https://cdn.joouis.com/am335x-arm-cortex-a8-boot-sequence-3.png" alt="Chart 1: ROM Exception Vectors"></li>
<li>Public ROM Code CRC (0x20020): 由0x20000-0x2BFFF計算得出的四個位元組CRC值。</li>
<li>Dead loops (0x20080-0x200FF): 該區段定義預設的exception handlers，其預設handlers都是執行while(1)迴圈，程式設計者可以定義相同名字的exception handler，如此便能覆蓋 (override)對應之預設exception handlers。可參考<a href="https://github.com/jserv/mini-arm-os/blob/master/05-TimerInterrupt/startup.c#L63">mini-arm-os</a>與<a href="https://github.com/embedded2015/freertos-basic/blob/master/freertos/libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/startup_stm32f10x_md.s#L124">freertos</a>程式碼，以便了解其設計概念。</li>
<li>Code (started from 0x20100): ROM程式碼</li>
<li>ROM Version (0x2BFFC-0x2BFFF): ROM Code Version<br><img data-src="https://cdn.joouis.com/am335x-arm-cortex-a8-boot-sequence-4.png" alt="Figure 3: ROM Memory Map"></li>
</ul>
<h3 id="Two-Stage-U-Boot-Design-MLO-MMC-Loader-U-boot"><a href="#Two-Stage-U-Boot-Design-MLO-MMC-Loader-U-boot" class="headerlink" title="Two Stage U-Boot Design - MLO (MMC Loader) &amp; U-boot"></a>Two Stage U-Boot Design - MLO (MMC Loader) &amp; U-boot</h3><h4 id="MLO-File-Name-MLO"><a href="#MLO-File-Name-MLO" class="headerlink" title="MLO (File Name: MLO)"></a>MLO (File Name: <code>MLO</code>)</h4><p>AM335x ARM Cortex-A8處理器的On-chip memory( internal SRAM)大小為128KB (詳見AM3358 Data Sheet)，其Memory Map如圖四所示:</p>
<ul>
<li>1KB Secure Area: 此區域無法存取</li>
<li>109KB downloaded image (0x402F0400-0x4030B7FF): 此區域最多可以容納109KB二進制檔案，此檔案可以存放在儲存裝置，或透過UART&#x2F;USB傳輸，進而ROM Code載入至位址0x402F0400。MLO其實就是小型的U-Boot Boot loader (其大小必須小於109KB)。所以，其簡化版U-Boot (MLO)主要任務如下:<ul>
<li>初始化DDR (512MB)</li>
<li>一旦初始化DDR成功後，MLO將<code>u-boot.img</code>載入至DDR，並交由U-Boot接管。</li>
</ul>
</li>
<li>18KB area (0x4030B800-0x4030FFFF): ROM Code使用該區域。<br><img data-src="https://cdn.joouis.com/am335x-arm-cortex-a8-boot-sequence-5.png" alt="Figure 4: Memory Map for 128KB on-chip memory"></li>
</ul>
<h4 id="U-boot-File-name-u-boot-img"><a href="#U-boot-File-name-u-boot-img" class="headerlink" title="U-boot (File name: u-boot.img)"></a>U-boot (File name: <code>u-boot.img</code>)</h4><p>此完整版U-Boot主要做額外platform初始化 (如: 初始化網卡等)，並載入OS Kernel。</p>
<p><strong>為何需要two-stage U-boot？</strong></p>
<p>由於On-chip memory只能提供109KB給Boot loader。然而，對於一個完整版的U-Boot，其大小約350KB (參考<a href="http://www.armhf.com/download/">ARMhf</a>編好的<a href="http://s3.armhf.com/dist/bone/bone-uboot.tar.xz">u-boot</a>)。為因應此限制，便需要一個小型的U-boot (MLO)，用以初始化DDR並將完整版U-boot載入至DDR，再將控制權交給完整版U-boot。下圖在BeagleBoard Black成功載入MLO與U-Boot終端機輸出。</p>
<p><img data-src="https://cdn.joouis.com/am335x-arm-cortex-a8-boot-sequence-6.png"></p>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system course</tag>
        <tag>embedded system</tag>
        <tag>arm</tag>
        <tag>cortex-a8</tag>
        <tag>rom</tag>
        <tag>ram</tag>
        <tag>u-boot</tag>
        <tag>boot</tag>
        <tag>os</tag>
      </tags>
  </entry>
  <entry>
    <title>五分钟快速搭建一个博客</title>
    <url>/2016/build-a-blog-in-5-minutes/</url>
    <content><![CDATA[<p>作为部落格的第一篇文章，就记录一下它的诞生过程吧：）</p>
<span id="more"></span>

<p>博客很阳春，使用了 Github 和 Hexo，都是一谷歌就能找许多答案的技术。</p>
<h2 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h2><ol>
<li>安装 node.js 和 npm，推荐直接从<a href="https://nodejs.org/en/download/">官网</a>下载源码编译；</li>
<li>安装 hexo：<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure></li>
<li>安装主题，本博客使用 <a href="http://theme-next.iissnan.com/">NexT</a> 主题：<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li>
<li>启用主题，在根目录下将<code>_config.yml</code>文件中的<code>theme:</code>改为你所需的主题名；</li>
<li>验证主题：<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo s --dedbug</span><br></pre></td></tr></table></figure></li>
<li>Git 初始化并同步到 Github 上：<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# blog&quot;</span> &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin git@github.com:Joouis/blog.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></li>
<li>使用 hexo 部署功能，补充根目录<code>_config.yml</code>文件中的<code>deploy</code>，然后：<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></li>
<li>在 source 目录下加入<code>CNAME</code>文件，在登陆 DNS 服务商增添 CNAME 记录即可；</li>
<li>參考<a href="http://theme-next.iissnan.com/theme-settings.html">主題配置</a>、<a href="http://theme-next.iissnan.com/third-party-services.html">第三方服务</a>一步步客制化自己的博客。</li>
</ol>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>五分钟是完全足够搭建起博客的，不过真正费时的，就是一点点把它修改成自己想要的样子吧。 头一次使用 Hexo ，比 Jekyll 更方便，并且使用的 NexT 主题基于 Hexo 增添了很多功能接口，像搜索、评论平台等，只需要设置<code>_config.yml</code>一个文档基本上就能解决问题，确实很好用！</p>
<p>博客的用途是用来记录，Markdown 语言的特质就是帮助你专注在记录上，而今天使用的 Hexo 和 NexT 亦是如此。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="2019-04-08"><a href="#2019-04-08" class="headerlink" title="2019.04.08"></a>2019.04.08</h3><p>博客三周年，升级了 Hexo 和主题，请看<a href="https://joouis.com/2019/3rd-blog-anniversary/">这里</a>。</p>
]]></content>
      <categories>
        <category>笔记小抄</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
        <tag>TechTalk</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 年 JavaScript 测试概观</title>
    <url>/2018/an-overview-of-javascript-testing-in-2018/</url>
    <content><![CDATA[<blockquote>
<p>源文链接：<a href="https://medium.com/welldone-software/an-overview-of-javascript-testing-in-2018-f68950900bc3">An Overview of JavaScript Testing in 2018</a></p>
</blockquote>
<p><strong>摘要：使用 Jest 进行单元和集成测试，使用 TestCafe 进行 UI 测试。</strong></p>
<span id="more"></span>


<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>看看 Facebook 推出的测试框架 Jest 的 logo：</p>
<p><img data-src="https://ua6ucg.bn.files.1drv.com/y4mzt4dGxfvhghwHmJ1cOG61-jm4I3sK7rl1JeHhEqMY9t8bKW2Ednwn7ntduQywMmbQ6WAA0aKyvkcuTySVHOV4mgEJG8jxro9Cowdfi_oi8PBPK7A8muv2Rfq5rUQ4KAYyucW79coT9KXdQBtOvfTgIrhI0x2b-sIuloCLvSrNnNMXGJ3UoulMDRbZ2mSAuvL_HX5-kdXVt0fKl7GcvhTTg"></p>
<p>你可以看到他们的口号承诺“无痛”地进行 JavaScript 测试，然而“<a href="https://news.ycombinator.com/item?id=13128146#13128900">评论中的某些人</a>”指出：</p>
<p><img data-src="https://uq63cg.bn.files.1drv.com/y4mBInnhjMSj7yDXlFnklP4Ts-MyNAfN0ptQlUnrBzA5yEC2mA2vP4uxB347fuh86GLCNnQJwqNuQgvkCcLWqoW3ZdOrnS-tAJO4fbma7Ri8cE2kbu2c3EAl4jXPiyobqVKhrSb6gLuqG8UTlLuBAuw3vJ2jAqhjKktMsZn867h0MyMk_oyA_hRLbmSjUh8WGaeAtPPt90-dHU-znudYdueZA"></p>
<p>不过 Facebook 确实有一个很棒的理由使用这个口号。通常 JS 开发者都<a href="http://2016.stateofjs.com/2016/testing/">不太喜欢网站测试</a>，JS 测试意味着受限制、很难实现、进度缓慢且时而代价昂贵。尽管如此，只要使用正确的策略和正确的工具组合，一次接近全覆盖的测试也可以完成得有组织、简单并相对快速。</p>
<h2 id="测试的类型"><a href="#测试的类型" class="headerlink" title="测试的类型"></a>测试的类型</h2><p>你可以通过<a href="http://stackoverflow.com/questions/520064/what-is-unit-test-integration-test-smoke-test-regression-test">这里</a>、<a href="https://www.sitepoint.com/javascript-testing-unit-functional-integration/">这里</a>以及<a href="https://codeutopia.net/blog/2015/04/11/what-are-unit-testing-integration-testing-and-functional-testing/">这里</a>更深入地了解不同的测试类型。大体上，对于一个网站来说，最重要的几类测试有：</p>
<ul>
<li>**单元测试 (Unit Tests)**：通过输入和预期的输出结果测试独立的函数或者类；</li>
<li>**集成测试 (Integration Tests)**：测试流程或组件的表现是否符合预期，包括副作用；</li>
<li>**UI 测试 (UI Test)<strong>（又名</strong>功能测试 (Functional Tests)**）：在浏览器中对产品进行一些使用场景测试，无视其内部结构，只保证行为符合预期。</li>
</ul>
<h2 id="测试工具的类型"><a href="#测试工具的类型" class="headerlink" title="测试工具的类型"></a>测试工具的类型</h2><p>测试工具可以划分为以下功能类型，其中一些提供单一功能，而另一些则提供功能组合。为了功能性更加灵活，使用组合工具也很常见，即使存在一款工具可以实现类似的功能。</p>
<ol>
<li>提供一个<strong>测试结构 (testing structure)</strong> (<a href="https://mochajs.org/">Mocha</a>, <a href="http://jasmine.github.io/">Jasmine</a>, <a href="https://facebook.github.io/jest/">Jest</a>, <a href="https://github.com/cucumber/cucumber-jshttps://github.com/cucumber/cucumber-js">Cucumber</a>)</li>
<li>提供<strong>断言函数 (assertions functions)</strong> (<a href="http://chaijs.com/">Chai</a>, <a href="http://jasmine.github.io/">Jasmine</a>, <a href="https://facebook.github.io/jest/">Jest</a>, <a href="http://unexpected.js.org/">Unexpected</a>)</li>
<li>生成、**展示 (display) 并观察 (watch)**测试结果 (<a href="https://mochajs.org/">Mocha</a>, <a href="http://jasmine.github.io/">Jasmine</a>, <a href="https://facebook.github.io/jest/">Jest</a>, <a href="https://karma-runner.github.io/">Karma</a>)</li>
<li>生成并对比组件和数据结构的**快照 (snapshots)**确保早先运行中的变化符合预期 (<a href="https://facebook.github.io/jest/">Jest</a>, <a href="https://github.com/avajs/ava">Ava</a>)</li>
<li>提供 <strong>mocks</strong>、<strong>spies</strong> 和 <strong>stubs</strong> (<a href="http://sinonjs.org/">Sinon</a>, <a href="http://jasmine.github.io/">Jasmine</a>, <a href="http://airbnb.io/enzyme/docs/api/">enzyme</a>, <a href="https://facebook.github.io/jest/">Jest</a>, <a href="https://github.com/testdouble/testdouble.js">testdouble</a>)</li>
<li>生成<strong>代码覆盖 (code coverage)</strong> 报告 (<a href="https://gotwarlost.github.io/istanbul/">Istanbul</a>, <a href="https://facebook.github.io/jest/">Jest</a>, <a href="http://blanketjs.org/">Blanket</a>)</li>
<li>提供<strong>浏览器或近似浏览器环境 (browser or browser-like environment)</strong> 并可以在场景执行时进行控制 (<a href="http://www.protractortest.org/">Protractor</a><strong>,</strong> <a href="http://nightwatchjs.org/">Nightwatch</a>, <a href="http://phantomjs.org/">Phantom</a><strong>,</strong> <a href="http://casperjs.org/">Casper</a>)</li>
</ol>
<p>让我们解释上述提到的一些术语：</p>
<p><strong>测试结构</strong>指的是测试的组织方式。如今测试经常被组织成支持<a href="https://en.wikipedia.org/wiki/Behavior-driven_development">行为驱动开发</a> (behavior-driven development) 的 <strong>BDD 结构 (BDD structure)</strong> 。通常看起来像这样：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;calculator&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 使用嵌套 &quot;describe&quot; 函数描述一个模组</span></span><br><span class="line">  <span class="title function_">describe</span>(<span class="string">&#x27;add&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 详述预期行为</span></span><br><span class="line">    <span class="title function_">it</span>(<span class="string">&#x27;should add 2 numbers&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">       <span class="comment">// 使用断言函数测试预期行为</span></span><br><span class="line">       ...  </span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><strong>断言函数</strong>确保被测试的变量包含预期值。它们通常看起来像这样，其中最流行的写法莫过于前两种方式：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Chai expect (流行)</span></span><br><span class="line"><span class="title function_">expect</span>(foo).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">a</span>(<span class="string">&#x27;string&#x27;</span>)</span><br><span class="line"><span class="title function_">expect</span>(foo).<span class="property">to</span>.<span class="title function_">equal</span>(<span class="string">&#x27;bar&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Jasmine expect (流行)</span></span><br><span class="line"><span class="title function_">expect</span>(foo).<span class="title function_">toBeString</span>()</span><br><span class="line"><span class="title function_">expect</span>(foo).<span class="title function_">toEqual</span>(<span class="string">&#x27;bar&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Chai assert</span></span><br><span class="line">assert.<span class="title function_">typeOf</span>(foo, <span class="string">&#x27;string&#x27;</span>)</span><br><span class="line">assert.<span class="title function_">equal</span>(foo, <span class="string">&#x27;bar&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Unexpected expect</span></span><br><span class="line"><span class="title function_">expect</span>(foo, <span class="string">&#x27;to be a&#x27;</span>, <span class="string">&#x27;string&#x27;</span>)</span><br><span class="line"><span class="title function_">expect</span>(foo, <span class="string">&#x27;to be&#x27;</span>, <span class="string">&#x27;bar&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><em>TIP: 这里有一篇关于进阶的 Jasmine 断言<a href="https://medium.com/@boriscoder/the-hidden-power-of-jest-matchers-f3d86d8101b0">好文</a>。</em></p>
<p><strong><a href="http://sinonjs.org/releases/v2.1.0/spies/">Spies</a></strong> 提供了函数相关的信息：函数被调用了多少次，在什么情况下被调用，被谁调用？在集成测试中我们会使用它确保一个流程中的副作用符合预期，例如在下列场景中观察该方法是否只执行了一次？</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;should call method once with the argument 3&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 创建一个 sinon spy 来监视 object.method</span></span><br><span class="line">  <span class="keyword">const</span> spy = sinon.<span class="title function_">spy</span>(object, <span class="string">&#x27;method&#x27;</span>)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 调用方法，入参为 &quot;3&quot;</span></span><br><span class="line">  object.<span class="title function_">method</span>(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 确保在入参正确的情况下 object.method 只被调用了一次</span></span><br><span class="line">  <span class="title function_">assert</span>(spy.<span class="title function_">withArgs</span>(<span class="number">3</span>).<span class="property">calledOnce</span>)</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><a href="http://sinonjs.org/releases/v4.2.2/stubs/"><strong>Stubbing</strong> 或 <strong>dubbing</strong></a> （好比电影中的替身演员）通过<strong>替换选中的函数</strong>来测试模块的正确性。如果我们在测试另外的组件时希望 <code>user.isValid()</code> 总是返回 <code>true</code>，可以这么做：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Sinon</span></span><br><span class="line">sinon.<span class="title function_">stub</span>(user, <span class="string">&#x27;isValid&#x27;</span>).<span class="title function_">returns</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Jasmine stubs 实际是有 stubbing 功能的 spies</span></span><br><span class="line"><span class="title function_">spyOn</span>(user, <span class="string">&#x27;isValid&#x27;</span>).<span class="title function_">andReturns</span>(<span class="literal">true</span>)</span><br></pre></td></tr></table></figure>

<p>也可以使用 promise 的方式：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;resolves with the right name&#x27;</span>, <span class="function"><span class="params">done</span> =&gt;</span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 确保 User.fetch &quot;回复&quot;的是我们配置的值&quot;David&quot;</span></span><br><span class="line">  <span class="keyword">const</span> stub = sinon</span><br><span class="line">    .<span class="title function_">stub</span>(<span class="title class_">User</span>.<span class="property"><span class="keyword">prototype</span></span>, <span class="string">&#x27;fetch&#x27;</span>)</span><br><span class="line">    .<span class="title function_">resolves</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;David&#x27;</span> &#125;)</span><br><span class="line">  </span><br><span class="line">  <span class="title class_">User</span>.<span class="title function_">fetch</span>()</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">user</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">expect</span>(user.<span class="property">name</span>).<span class="title function_">toBe</span>(<span class="string">&#x27;David&#x27;</span>)</span><br><span class="line">      <span class="title function_">done</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><a href="http://sinonjs.org/releases/v4.2.2/mocks/"><strong>Mocks</strong> 或 <strong>Fakes</strong></a> 通过<strong>伪装成某些模块或行为</strong>测试一系列过程中的不同情况。举例来说，Sinon 能<a href="http://sinonjs.org/releases/v4.2.2/fake-xhr-and-server/">仿冒一个服务器</a>离线和网络状况良好的情况来测试期望的应答。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;returns an object containing all users&#x27;</span>, <span class="function"><span class="params">done</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建并配置一个假的服务器取代原生的网络请求</span></span><br><span class="line">  <span class="keyword">const</span> server = sinon.<span class="title function_">createFakeServer</span>()</span><br><span class="line">  server.<span class="title function_">respondWith</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;/users&#x27;</span>, [</span><br><span class="line">    <span class="number">200</span>,</span><br><span class="line">    &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span> &#125;,</span><br><span class="line">    <span class="string">&#x27;[&#123; &quot;id&quot;: 1, &quot;name&quot;: &quot;Gwen&quot; &#125;,  &#123; &quot;id&quot;: 2, &quot;name&quot;: &quot;John&quot; &#125;]&#x27;</span></span><br><span class="line">  ])</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用一个包含我们模拟网络请求的流程</span></span><br><span class="line">  <span class="title class_">Users</span>.<span class="title function_">all</span>()</span><br><span class="line">    .<span class="title function_">done</span>(<span class="function"><span class="params">collection</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> expectedCollection = [</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;Gwen&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;John&#x27;</span> &#125;</span><br><span class="line">      ]</span><br><span class="line">      <span class="title function_">expect</span>(collection.<span class="title function_">toJSON</span>()).<span class="property">to</span>.<span class="title function_">eql</span>(expectedCollection)</span><br><span class="line">      <span class="title function_">done</span>()</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 响应请求</span></span><br><span class="line">  server.<span class="title function_">respond</span>()</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 移除假服务器</span></span><br><span class="line">  server.<span class="title function_">restore</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><strong>快照测试 (Snapshot Testing)</strong> 会对某一数据结构与期望值进行比较。<a href="https://facebook.github.io/jest/docs/en/snapshot-testing.html">下面的例子来自 Jest 官方文档</a>，展示了某一 <code>Link</code> 组件的快照测试。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;renders correctly&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 创建一个包含页面链接和内部文字的 Link 组件实例</span></span><br><span class="line">  <span class="keyword">const</span> linkInstance = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Link</span> <span class="attr">page</span>=<span class="string">&quot;http://www.facebook.com&quot;</span>&gt;</span>Facebook<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 创建一个组件的数据快照</span></span><br><span class="line">  <span class="keyword">const</span> tree = renderer.<span class="title function_">create</span>(linkInstance).<span class="title function_">toJSON</span>()</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 比较数据和上一次快照</span></span><br><span class="line">  <span class="title function_">expect</span>(tree).<span class="title function_">toMatchSnapshot</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>在此过程中不会真正渲染该组件并截图，而是在一个独立的文件中保存其内部数据结构，大概长这样：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exports</span>[<span class="string">`renders correctly 1`</span>] = <span class="string">`</span></span><br><span class="line"><span class="string">&lt;a</span></span><br><span class="line"><span class="string">  className=&quot;normal&quot;</span></span><br><span class="line"><span class="string">  href=&quot;http://www.facebook.com&quot;</span></span><br><span class="line"><span class="string">  onMouseEnter=&#123;[Function]&#125;</span></span><br><span class="line"><span class="string">  onMouseLeave=&#123;[Function]&#125;</span></span><br><span class="line"><span class="string">&gt;</span></span><br><span class="line"><span class="string">  Facebook</span></span><br><span class="line"><span class="string">&lt;/a&gt;</span></span><br><span class="line"><span class="string">`</span>;</span><br></pre></td></tr></table></figure>

<p>当新产生的快照与上一次不同时，将提示开发者是否同意此次改动是有意为之。</p>
<p><img data-src="https://uq62cg.bn.files.1drv.com/y4mTfqnysoW01bKk4CWz60Y2v43G_VRxvulJeWDZklZz0IJY5Bs-Vjxkn1ALXo8Jp5jMsm6e2_4gJiQ5nRu8UEHRvZfU_xKZ_mFYaAcwd4bpWB5b7l0ySjfzhlQx84BTU3dMQZ-g7Z-4WmvjjxQUBg-I_TJ5sHhDU9QJ3SOXbHQDGej28ivoAikmDz3Cn9P30gQqGE5PjxVoc25P7oIgp7Lrg"></p>
<blockquote>
<p><strong>注意：</strong>快照通常用来比对体现数据的组件，其实它们也可以比较其他的数据类型，如 redux stores 或应用中不同单元的内部结构。</p>
</blockquote>
<p><strong>浏览器或近似浏览器环境</strong>可以是以下三种之一：</p>
<ul>
<li><a href="https://github.com/jsdom/jsdom"><strong>jsdom</strong></a> —— 一个模拟真实浏览器的纯 JavaScript 环境。它没有 UI 也不做渲染，只提供浏览器 JS 运行时所需的 window, document, body, location, cookies, selectors 等接口。</li>
<li><strong>无头浏览器环境 (Headless Browser Environment)</strong> —— 一个为了响应速度更快而缺省 UI 的浏览器。</li>
<li><strong>真实浏览器环境 (Real Browser Environment)</strong> —— 一个运行你测试用例的真实浏览器。</li>
</ul>
<h2 id="把所有东西放在一起…"><a href="#把所有东西放在一起…" class="headerlink" title="把所有东西放在一起…"></a>把所有东西放在一起…</h2><p>如果可以，我们建议面对所有测试类型都使用同一套工具：相同的<strong>测试结构和语法 (1)<strong>、</strong>断言函数 (2)<strong>、</strong>结果报告</strong>以及**监控机制 (4)**。</p>
<p>我们还建议创建两类不同的流程，一类运行单元和集成测试，另一类则运行 UI 测试。这是因为 UI 测试需要耗费更长的时间，尤其在跨浏览器测试时通常会使用外部提供的多设备、多浏览器付费服务（这个后续还会讨论），因此相比第一类流程你不会想跑更多的 UI 测试，譬如只在合并一条特征分支前才运行一次。</p>
<h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><p>应当覆盖应用中所有小而纯粹的单元：工具 (utils)、服务 (services) 以及助手 (helpers)。给这些单元简单和边界情况的输入并<strong>使用断言函数 (3)</strong> 确保输出正确。另外也需要使用<strong>覆盖率报告工具 (6)</strong> 了解哪些单元被测试到了。</p>
<blockquote>
<p>单元测试是尽可能使用函数式编程以及纯函数的理由之一——你的应用越纯粹就越容易被测试。</p>
</blockquote>
<h3 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h3><blockquote>
<p>老派的测试往往注重单元测试，这导致了应用的各个微观部分功能正常，但是所有流程合在一起时就会出错。</p>
<p>当你修复了某个问题，但是又破坏了其他部分时，集成测试（包含快照）可以从另一个角度捕捉许多未知的错误。</p>
<p>同样需要记住的是，在这个真实的世界存在因各种理由而出现的不完美的设计和广泛应用的黑盒子，并不是所有单元模块都是纯函数，也不是所有单元都可以被测试——有一些单元仅作为某个更大流程中的一部分而能被测试到。</p>
</blockquote>
<p>集成测试需要覆盖重要的跨模组流程。相较于单元测试，你可能会使用 <strong>spies (5)</strong> 确保一些预期的副作用而非只对输出做断言，同时使用 <strong>stubs (5)</strong> 模拟、修改在特定测试中不存在的部分流程。</p>
<p>并且与单元测试相反，<strong>一个浏览器或近似浏览器环境 (7)</strong> 可以支持依赖 <code>window</code> 、渲染某一组件或与组件交互的各种流程。</p>
<p><strong>组件快照测试 (4)</strong> 也属于此类测试。它们提供了一种无需真实渲染或使用浏览器就可以测试流程对选中组件影响的方式。</p>
<h3 id="UI-测试"><a href="#UI-测试" class="headerlink" title="UI 测试"></a>UI 测试</h3><p>有时候快速高效的单元和集成测试还不够。</p>
<p>UI 测试总是运行在<strong>一个浏览器或近似浏览器环境 (7)</strong> 中，模拟用户行为（点击，输入，滚动等等…），确保这些场景在终端用户眼中确实工作。</p>
<p>请记住这类测试是最难准备的。设想你自己创建一个环境在不同的机器、设备、浏览器类型和版本上运行一个测试… 这就是为什么有<a href="https://www.keycdn.com/blog/browser-compatibility-testing-tools">很多服务商</a>为你提供这项服务。</p>
<h3 id="常见的知名测试工具"><a href="#常见的知名测试工具" class="headerlink" title="常见的知名测试工具"></a>常见的知名测试工具</h3><h4 id="Jsdom"><a href="#Jsdom" class="headerlink" title="Jsdom"></a><a href="https://github.com/jsdom/jsdom">Jsdom</a></h4><p>jsdom 是 WHATWG DOM 和 HTML 标准的一个 JavaScript 实现。换言之 jsdom 仅用纯 JS 模拟了一个浏览器环境。之前提过，在这样的模拟浏览器环境中，测试运行的速度十分快。缺点则是在一个真实浏览器之外 jsdom 无法模拟所有功能，因此这会限制你的测试范围。</p>
<p>值得一提的是 JS 社区很快改进了它，目前的版本已经非常接近真实浏览器。</p>
<h4 id="Istanbul"><a href="#Istanbul" class="headerlink" title="Istanbul"></a><a href="https://istanbul.js.org/">Istanbul</a></h4><p>Istanbul 会告诉你有多少代码被单元测试所覆盖。它通过报告状态、行数、函数和分支覆盖维度的百分比情况以便你更好地理解哪些部分代码没有被覆盖到。</p>
<h4 id="Karma"><a href="#Karma" class="headerlink" title="Karma"></a><a href="https://karma-runner.github.io/2.0/index.html">Karma</a></h4><p>Karma 允许你在浏览器和近似浏览器环境甚至 jsdom 中进行测试。它运行的<strong>测试服务器有一个特殊网页</strong>可以让你的测试运行在页面环境中，而这个页面还可以跨浏览器运行。这也意味着测试可以通过 <a href="https://www.browserstack.com/">BrowserStack</a> 之类的服务远程执行。</p>
<h4 id="Chai"><a href="#Chai" class="headerlink" title="Chai"></a><a href="https://github.com/chaijs/chai">Chai</a></h4><p>Chai 是最流行的断言库。<em>（译者注：此处人狠话不多）</em></p>
<h4 id="Unexpected"><a href="#Unexpected" class="headerlink" title="Unexpected"></a><a href="https://github.com/unexpectedjs/unexpected">Unexpected</a></h4><p>Unexpected 是一个与 Chai 的语法稍有不同的断言库。其可扩展性衍生出了一些使断言功能更高级的库例如 <a href="https://github.com/bruderstein/unexpected-react">unexpected-react</a> ，你可以从<a href="https://medium.com/@bruderstein/enzyme-vs-unexpected-react-ee9cb099d12b">这里</a>了解更多。</p>
<h4 id="Sinon-js"><a href="#Sinon-js" class="headerlink" title="Sinon.js"></a><a href="http://sinonjs.org/">Sinon.js</a></h4><p>Sinon 是一个强大的 spies, stubs 和 mocks 独立库，可与任何单元测试框架配合工作。</p>
<h4 id="testdouble-js"><a href="#testdouble-js" class="headerlink" title="testdouble.js"></a><a href="https://github.com/testdouble/testdouble.js">testdouble.js</a></h4><p>testdouble 是一个声称比 Sinon 更加优秀但名气稍逊的库。其设计、哲学和特性与 Sinon 略有不同使其在许多情况下更实用，你可以从<a href="https://www.sitepoint.com/javascript-testing-tool-showdown-sinon-js-vs-testdouble-js/">这里</a>、<a href="https://spin.atomicobject.com/2016/03/21/javascript-mocking-testdouble/">这里</a>和<a href="http://blog.testdouble.com/posts/2016-03-13-testdouble-vs-sinon.html">这里</a>读到更多。</p>
<h4 id="Wallaby"><a href="#Wallaby" class="headerlink" title="Wallaby"></a><a href="https://wallabyjs.com/">Wallaby</a></h4><p>Wallaby 是另一款值得一提的工具。尽管需要付费，但很多用户推荐购买。它运行在你的 IDE （支持所有主流 IDE）之上，执行代码变更相关的测试，并在失败后实时定位错误代码。</p>
<p><img data-src="https://uq60cg.bn.files.1drv.com/y4mYsR4FCiOSU6upwCHNy5GuzHpJwYIOc1EDSs688BAdAmiY280rv-rbSgsEufXYttC34OqCpq3B-z2w2AVYIfLRy1CzjjxMto8H0BGMOGIMBd9h1F5ZPNAzwU86jayH4ylT2NC17YNmrwbGXABhEvm1xPBxcHn1QUoGd72g1rmq55T8flw-jAiv2iM7kOK_B6QQ9DUNHe3-n_7RU3PWTEnIw"></p>
<h4 id="Cucumber"><a href="#Cucumber" class="headerlink" title="Cucumber"></a><a href="https://github.com/cucumber/cucumber-js">Cucumber</a></h4><p>Cucumber 通过按验收准则文件 (accpetance criteria files，使用 <strong>Gherkin</strong> 语法) 划分并按与之对应的方式协助编写 BDD 结构的测试用例。框架支持的多种语言都可以编写测试用例，包含我们关注的 JS：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Filename: <span class="string">&quot;like-article.feature&quot;</span></span></span><br><span class="line">Feature: A reader can share an article to social networks</span><br><span class="line">  As a reader</span><br><span class="line">  I want to share articles</span><br><span class="line">  So that I can notify my friends about an article I liked</span><br><span class="line">Scenario: An article was opened</span><br><span class="line">    Given I&#x27;m inside an article</span><br><span class="line">    When I share the article</span><br><span class="line">    Then the article should change to a &quot;shared&quot; state</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Filename: &quot;like-article.step.js&quot;</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title class_">Given</span>(<span class="regexp">/^I&#x27;m inside an article$/</span>, <span class="keyword">function</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="comment">// 函数式测试工具代码</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title class_">When</span>(<span class="regexp">/^I share the article$/</span>, <span class="keyword">function</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="comment">// 函数式测试工具代码</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title class_">Then</span>(<span class="regexp">/^the article should change to a &quot;shared&quot; state$/</span>, <span class="keyword">function</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="comment">// 函数式测试工具代码</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>许多团队会发现这种语法比 TDD 更方便。</p>
<h2 id="选择你的单元和集成测试框架"><a href="#选择你的单元和集成测试框架" class="headerlink" title="选择你的单元和集成测试框架"></a>选择你的单元和集成测试框架</h2><p>第一个选择你应该做得也许是框架与其相关函数库。建议使用框架内提供的工具直到依赖某些绝无仅有工具的需求出现。</p>
<blockquote>
<ul>
<li>简而言之，如果你只想入门或针对大型功能寻找一款够快的框架，选择 <strong>Jest</strong>。</li>
<li>如果你想要灵活和可扩展的配置，选择 <strong>Mocha</strong>。</li>
<li>如果你喜欢简单选择 <strong>Ava</strong>。</li>
<li>如果你想要非常底层的框架，选择 <strong>tape</strong>。</li>
</ul>
</blockquote>
<p>这里有一份介绍主流工具及其特性的列表：</p>
<h3 id="mocha"><a href="#mocha" class="headerlink" title="mocha"></a><a href="https://github.com/mochajs/mocha">mocha</a></h3><p>Mocha 是目前最常用的库。不像 Jasmine，它使用第三方的断言、mocking 和 spying 工具（通常是  Enzyme 和 Chai ）。这意味着 Mocha 在初始配置时有一定难度并需要了解更多库，但这也会变的更加灵活、更开放去扩展。</p>
<p>举例来说，如果你想要<a href="https://mochajs.org/#assertions">特殊的断言逻辑</a>，可以 fork Chai（<em>译者注：此处怀疑是笔误，fork Mocha 看起来更合理</em>）并使用自己的断言库仅替换 Chai。虽说这在 Jasmine 中也可以实现，但这种修改在 Mocha 中更显而易见。</p>
<ul>
<li>**社区 (Community)**：有许多插件和扩展来测试独特的场景。</li>
<li><strong>扩展性</strong>：插件、扩展和例如 Sinon 之类的库包含了许多 Jasmine 没有的特性。</li>
<li>**全局变量 (Globals)**：默认会创建测试结构的变量，但是显然不像 Jasmine 那样包含了断言、spies 和 mocks ——有些人对这种看似不一致的变量感到吃惊。</li>
</ul>
<h3 id="Jest"><a href="#Jest" class="headerlink" title="Jest"></a><a href="https://facebook.github.io/jest/">Jest</a></h3><p>Jest 是 Facebook 推荐的测试框架，基于我们将会讨论的 Jasmine 开发。不过现如今 Facebook <a href="https://jestjs.io/blog/2016/09/01/jest-15.html">已经替换了大多数 Jasmine 的功能</a>并在顶层新增了许多特性。</p>
<blockquote>
<p>在阅读了大量文章和博客之后，人们对 Jest 速度与便利的印象深刻令人难以置信。</p>
</blockquote>
<ul>
<li><p>**性能 (Performance)**：Jest 首要考虑的是通过实现一个<a href="https://jestjs.io/blog/2016/03/11/javascript-unit-testing-performance.html">灵活的并行测试机制</a>使得处理包含大量测试文件的大型工程速度更快（以我们的经验和一些博客为例：<a href="https://hackernoon.com/testing-react-components-with-jest-and-enzyme-41d592c174f">这里</a>，<a href="https://medium.com/@kentcdodds/migrating-to-jest-881f75366e7e">这里</a>，<a href="https://medium.com/@gethylgeorge/testing-a-react-redux-app-using-jest-and-enzyme-b349324803a9">这里</a>，<a href="https://medium.com/aya-experience/testing-an-angularjs-app-with-jest-3029a613251">这里</a>）。</p>
</li>
<li><p><strong>用户界面</strong>：清楚方便。</p>
</li>
<li><p>**直接上手 (Ready-To-Go)**：自带和 Sinon 功能相同的断言、spies 和 mocks 库。如果你需要一些额外的特性，使用函数库也很容易。</p>
</li>
<li><p><strong>全局变量</strong>：与 Jasmine 类似，Jest <a href="https://jestjs.io/docs/en/api.html">默认创建了测试相关的全局变量</a>因此不用导入它们。虽然这可能导致测试不够灵活和可控而被诟病，但在绝大多数情况下都让测试更加容易：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// &quot;describe&quot; 已经在全局范围中，因此不需要这些导入代码：</span></span><br><span class="line"><span class="comment">// import &#123; describe &#125; from &#x27;jest&#x27;</span></span><br><span class="line"><span class="comment">// import &#123; describe &#125; from &#x27;jasmine&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;calculator&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>快照测试</strong>：Facebook 开发并维护了 <a href="https://github.com/facebook/jest/tree/master/packages/jest-snapshot">jest-snapshot</a>，不过它也可以作为工具集成的一部分被绝大多数框架使用，或通过正确的插件来使用。</p>
</li>
<li><p>**改进后的模组仿真 (Improved modules mocking)**：Jest 提供了一种简单的方法模拟任务繁重的模组以提升测试速度。例如一项服务可以通过 resolve 一个 promise 模拟一次网络请求。</p>
</li>
<li><p><strong>代码覆盖</strong>：包含一个基于 <a href="https://github.com/gotwarlost/istanbul">Istanbul</a> 的功能强大、高效的内置代码覆盖工具。</p>
</li>
<li><p>**可靠性 (Reliability)**：尽管这是一个相对年轻的函数库，但从 2017 年 Jest 逐步稳定直到现在被认为可靠，且被所有主流 IDEs 和相关工具所支持。</p>
</li>
<li><p>**开发 (Development)**：Jest 会对测试文件进行增量更新，因此在观察模式下的测试速度非常快。</p>
</li>
</ul>
<h3 id="Jasmine"><a href="#Jasmine" class="headerlink" title="Jasmine"></a><a href="https://github.com/jasmine/jasmine">Jasmine</a></h3><p>既然有了基于 Jasmine 构建的 Jest，为什么还要使用 Jasmine 呢？答案是后者存在得时间更久，有大量来自社区的文章和工具可以参考。同时，Angular 依然推荐使用它而非 Jest，尽管 Jest 目前也已完美适配 Angular 测试，且有很多人在使用。</p>
<ul>
<li><strong>直接上手</strong>：包含所有测试所需的东西。</li>
<li><strong>全局变量</strong>：在全局范围内提供所有重要的测试特性。</li>
<li><strong>社区</strong>：自从 2009 年问世以来积攒了海量文章、建议及工具。</li>
<li><strong>Angular</strong>：Angular 的所有版本都支持 Jasmine，并在<a href="https://angular.io/guide/testing">其官方文档</a>中推荐使用。</li>
</ul>
<h3 id="AVA"><a href="#AVA" class="headerlink" title="AVA"></a><a href="https://github.com/avajs/ava">AVA</a></h3><p>Ava 是一个并行执行测试的极简 (minimalistic) 测试库。</p>
<ul>
<li><p><strong>直接上手</strong>：包含所有测试所需的东西（除了可以秒加 spying 和 dubbing）。在测试结构使用以下语法、断言函数，并在 Node.js 中运行：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> test <span class="keyword">from</span> <span class="string">&#x27;ava&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;arrays are equal&#x27;</span>, <span class="function"><span class="params">t</span> =&gt;</span> &#123;</span><br><span class="line">  t.<span class="title function_">deepEqual</span>([<span class="number">1</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>全局变量</strong>：上文可见，Ava 没有创建任何测试相关的全局变量，因此你对你的测试有更多控制。</p>
</li>
<li><p>**简单 (Simplicity)**：支持许多高级特性时有着简单的结构和断言函数，摒弃了复杂的 API。</p>
</li>
<li><p><strong>开发</strong>：Ava 会对测试文件进行增量更新，因此在观察模式下的测试速度很快。</p>
</li>
<li><p>**速度 (Speed)**：以独立 Node.js 进程的方式并行执行测试。</p>
</li>
<li><p><strong>快照测试</strong>：<a href="https://github.com/avajs/ava#snapshot-testing">作为框架的一部分被支持</a>。</p>
</li>
</ul>
<h3 id="tape"><a href="#tape" class="headerlink" title="tape"></a><a href="https://github.com/substack/tape">tape</a></h3><p>Tape 是这些框架中最简单的。它仅有一个 Node.js 文件和一个非常简短的 API。</p>
<ul>
<li><strong>简单</strong>：简约的结构和断言函数，没有一个复杂的 API，甚至超越了 Ava。</li>
<li><strong>全局变量</strong>：不创建任何测试相关的全局变量因此你可以更多地掌控你的测试。</li>
<li>**测试间无共享状态 (No Shared State between tests)**：Tape 不鼓励使用 “beforeEach” 之类的函数以确保测试模块化以及对于测试周期的用户最大化控制。</li>
<li>**无命令行界面 (No CLI)**：Tape 在任何 JS 可以运行的地方都能跑。</li>
</ul>
<h2 id="UI-测试工具"><a href="#UI-测试工具" class="headerlink" title="UI 测试工具"></a>UI 测试工具</h2><p>首先就像之前提过的，你可以在<a href="https://www.keycdn.com/blog/browser-compatibility-testing-tools">这里</a>找到有关服务提供商的好文，这些服务提供商提供主机帮助你在不同的设备和浏览器上执行你的测试。</p>
<p>长期以 UI 测试为目标的工具从实现、哲学到 API 都多种多样，因此强烈建议花时间理解不同的解决方案并在你的产品中检验它们。</p>
<ul>
<li>*简短说，如果你只想通过一个可靠、设置简单的多浏览器合一的工具入门，使用 <strong>TestCafe</strong>。*</li>
<li><em>如果你想要随波逐流并获得最多的社区支持，*<em>WebdriverIO</em></em> 是正道。*</li>
<li>*如果你不在乎跨浏览器支持，使用 <strong>Puppeteer</strong>。*</li>
<li>*如果你的应用没有复杂的交互和图像，例如一个充满表格和导航的系统，可以使用跨浏览器无头工具如 <strong>Casper</strong>。*</li>
</ul>
<h3 id="selenium"><a href="#selenium" class="headerlink" title="selenium"></a><a href="https://github.com/SeleniumHQ/selenium">selenium</a></h3><p>Selenium 使用浏览器自动化模拟用户行为。它并不是专为测试创造，通过暴露一个在浏览器上模拟用户行为的服务器来达到多种用途。</p>
<p>Selenium 可以被多种方式控制，支持许多编程语言，甚至搭配一些工具后无需任何实际编程。</p>
<p>对我们的需求而言，通过一个 <a href="https://seleniumhq.github.io/selenium/docs/api/javascript/index.html">Selenium WebDriver</a> 提供通信层供我们的 NodeJS 代码与操作浏览器的 Selenium 服务器通信从而实现控制。</p>
<p>​	<strong>Node.js &lt;&#x3D;&gt; WebDriver &lt;&#x3D;&gt; Selenium Server &lt;&#x3D;&gt; FF&#x2F;Chrome&#x2F;IE&#x2F;Safari</strong></p>
<p>WebDriver 被引入测试框架后，测试代码可参考如下的部分代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;login form&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="title function_">before</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> driver.<span class="title function_">navigate</span>().<span class="title function_">to</span>(<span class="string">&#x27;http://path.to.test.app/&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&#x27;autocompletes the name field&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    driver</span><br><span class="line">      .<span class="title function_">findElement</span>(<span class="title class_">By</span>.<span class="title function_">css</span>(<span class="string">&#x27;.autocomplete&#x27;</span>))</span><br><span class="line">      .<span class="title function_">sendKeys</span>(<span class="string">&#x27;John&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    driver.<span class="title function_">wait</span>(until.<span class="title function_">elementLocated</span>(<span class="title class_">By</span>.<span class="title function_">css</span>(<span class="string">&#x27;.suggestion&#x27;</span>)))</span><br><span class="line">    </span><br><span class="line">    driver.<span class="title function_">findElement</span>(<span class="title class_">By</span>.<span class="title function_">css</span>(<span class="string">&#x27;.suggestion&#x27;</span>)).<span class="title function_">click</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> driver</span><br><span class="line">      .<span class="title function_">findElement</span>(<span class="title class_">By</span>.<span class="title function_">css</span>(<span class="string">&#x27;.autocomplete&#x27;</span>))</span><br><span class="line">      .<span class="title function_">getAttribute</span>(<span class="string">&#x27;value&#x27;</span>)</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function"><span class="params">inputValue</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">expect</span>(inputValue).<span class="property">to</span>.<span class="title function_">equal</span>(<span class="string">&#x27;John Doe&#x27;</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">after</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> driver.<span class="title function_">quit</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>WebDriver 本身对你来说可能已经足够，实际上<a href="https://marmelab.com/blog/2016/04/19/e2e-testing-with-node-and-es6.html">一些人</a>也建议使用它本体，不过还是有许多库通过分支或包装的形式扩展了它。包装后的 WebDriver 可能添加了多余的代码导致调试更加困难，而分支方式则可能偏离 <a href="https://github.com/SeleniumHQ/selenium/commits/master">2018 年正在活跃开发中</a>的 WebDriver 。</p>
<p>就算这样，一些人仍偏向不直接使用它，所以让我们看看有关 Selenium 操作的库吧。</p>
<h3 id="Appium"><a href="#Appium" class="headerlink" title="Appium"></a><a href="https://github.com/appium/appium">Appium</a></h3><p>Appium 提供类似 Selenium 的 API 测试移动设备上的站点，同时使用了以下工具：</p>
<ul>
<li>**iOS 9.3+**： Apple 的 <a href="https://developer.apple.com/reference/xctest">XCUITest</a></li>
<li><strong>Before iOS 9.3</strong>： Apple 的 <a href="https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/">UIAutomation</a></li>
<li>**Android 4.2+**： Google 的 <a href="http://developer.android.com/tools/help/uiautomator/index.html">UiAutomator&#x2F;UiAutomator2</a></li>
<li>**Android 2.3+**： Google 的 <a href="http://developer.android.com/reference/android/app/Instrumentation.html">Instrumentation</a>. （通过打包一个独立的工程提供指令支持, <a href="http://selendroid.io/">Selendroid</a>）</li>
<li><strong>Windows Phone</strong>： Microsoft 的 <a href="http://github.com/microsoft/winappdriver">WinAppDriver</a></li>
</ul>
<p>因此如果你使用 Selenium 或基于 Selenium 开发的工具，你同样可以使用 Appium 在移动设备上测试。</p>
<h3 id="Protractor"><a href="#Protractor" class="headerlink" title="Protractor"></a><strong><a href="https://github.com/angular/protractor">Protractor</a></strong></h3><p>Protractor 是一个包装 Selenium 并支持 Angular 增强语法以及特殊内置钩子的库。</p>
<ul>
<li><strong>Angular</strong>：尽管可以成功接入其他 JS 框架，但针对 Angular 提供了特殊的钩子。<a href="https://angular.io/guide/testing">Angular 官方文档</a>也推荐使用该工具。</li>
<li>**错误报告 (Error reporting)**：很好的机制。</li>
<li>**支持 (Support)**：目前已支持 Typescript，库本身由庞大的 Angular 团队更新维护。</li>
</ul>
<h3 id="WebdriverIO"><a href="#WebdriverIO" class="headerlink" title="WebdriverIO"></a><a href="http://webdriver.io/">WebdriverIO</a></h3><p>WebdriverIO 实现了另一个版本的 Selenium WebDriver：</p>
<ul>
<li><strong>语法</strong>：非常容易和可读。</li>
<li><strong>灵活</strong>：一个简单、灵活和可扩展的库。</li>
<li><strong>社区</strong>：拥有良好支持和热心开发者社区提供的丰富插件及扩展。</li>
</ul>
<h3 id="Nightwatch"><a href="#Nightwatch" class="headerlink" title="Nightwatch"></a><strong><a href="http://nightwatchjs.org/">Nightwatch</a></strong></h3><p>Nightwatch 也实现了又一个 Selenium WebDriver，并提供了自己的测试框架包含一个测试服务器、断言和一些工具。</p>
<ul>
<li><strong>框架</strong>：也可以与其他框架搭配使用，不过在你想要运行功能性测试而非作为其他框架的一部分时特别有用。</li>
<li><strong>语法</strong>：看起来是最简单和最可读的。</li>
<li><strong>支持</strong>：不支持 Typescript，大体上看这个库似乎比其他库的支持要少一丢丢。</li>
</ul>
<h3 id="TestCafe"><a href="#TestCafe" class="headerlink" title="TestCafe"></a><strong><a href="https://devexpress.github.io/testcafe/">TestCafe</a></strong></h3><p>TestCafe 是基于 Selenium 的不错替代品，在 2016 年底重写并<strong>开源</strong>。</p>
<p><strong>它仍有一款<a href="https://testcafe.devexpress.com/">付费版本</a>提供一些免编程的测试工具</strong>例如测试录制和用户支持，这很重要，因为有许多过时的文章错误地陈述其代码已停止开发并将这视为库的缺点。</p>
<p>与 Selenium 不同的是它通过 JavaScript 脚本的形式注入到网站中来控制浏览器。这使得 TestCafe 可以<strong>运行在任意浏览器中，包含移动设备</strong>，并完全控制 JavaScript 的执行循环。</p>
<p>TestCafe 是 JavaScript 和测试导向的。尽管已经被认为稳定和功能丰富，但目前仍然处于大规模开发状态。</p>
<ul>
<li>**快速构建 (Fast to set up)**：随意打开一个浏览器就可以跑你的测试。</li>
<li>**跨浏览器和设备 (Cross Browser and Devices)**：支持许多浏览器和设备，可与提供设备和浏览器测试的 <a href="https://saucelabs.com/">SauceLabs</a> 或 <a href="https://www.browserstack.com/">BrowserStack </a> 配合使用。这包含了在<a href="https://developers.google.com/web/updates/2017/04/headless-chrome">无头 Chrome</a> 和<a href="https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode">无头 Firefox</a> 中运行测试，将会在后续讨论到。</li>
<li>**并行测试 (Parallel Testing)**：TestCafe 可以<a href="https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/concurrent-test-execution.html">一次在多个浏览器实例中运行你的测试</a>。这个实践可以显著地缩短你的测试时间。</li>
<li><strong>方便的错误报告 (Convenient Error Reporting)</strong></li>
<li>**自有生态系统 (Own Ecosystem)**：<a href="https://testcafe-discuss.devexpress.com/t/interacting-with-browser-using-testcafe-apis-but-without-testcafe-test-runner/300/6">TestCafe 使用自己的测试结构</a>。这可能很方便，尤其因为 UI 测试经常与其他测试分开执行，<a href="https://medium.com/tech-quizlet/cypress-the-future-of-end-to-end-testing-for-web-applications-8ee108c5b255">不过有些人并不喜欢</a>。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Selector</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;testcafe&#x27;</span>;</span><br><span class="line"></span><br><span class="line">fixture <span class="string">`Getting Started`</span></span><br><span class="line">    .<span class="property">page</span> <span class="string">`https://devexpress.github.io/testcafe/example`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 自己的测试结构</span></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;My first test&#x27;</span>, <span class="keyword">async</span> t =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> t</span><br><span class="line">        .<span class="title function_">typeText</span>(<span class="string">&#x27;#developer-name&#x27;</span>, <span class="string">&#x27;John Smith&#x27;</span>)</span><br><span class="line">        .<span class="title function_">click</span>(<span class="string">&#x27;#submit-button&#x27;</span>)</span><br><span class="line">        .<span class="title function_">expect</span>(<span class="title class_">Selector</span>(<span class="string">&#x27;#article-header&#x27;</span>).<span class="property">innerText</span>)</span><br><span class="line">        .<span class="title function_">eql</span>(<span class="string">&#x27;Thank you, John Smith!&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="Cypress"><a href="#Cypress" class="headerlink" title="Cypress"></a><a href="https://www.cypress.io/">Cypress</a></h3><p>Cypress 是 TestCafe 的直接竞争对手之一。他们做的事情类似，如注入测试到网站中，但 Cypress 尝试将其做得更加现代化、灵活和方便。</p>
<p>Cypress 非常年轻，<a href="https://www.cypress.io/blog/2017/10/10/cypress-is-now-public-beta/">刚从封闭 beta 版推进到公开 beta 版</a>（在 2017 年十月），却已经有<a href="https://medium.com/tech-quizlet/cypress-the-future-of-end-to-end-testing-for-web-applications-8ee108c5b255">很多发烧友</a>。</p>
<ul>
<li><strong>不支持跨浏览器</strong>：目前仅支持 Chrome （<a href="https://github.com/cypress-io/cypress/issues/832">也不支持无头版</a>）。不过这个问题已经被创建，开发者也正在为之努力。</li>
<li><strong>缺乏高级功能</strong>：相较 TestCafe 而言缺少并行测试和专有测试工具，不过这些都已经在产品的路线图中了。</li>
<li><strong>文档</strong>：详实且清楚。</li>
<li><strong>调试工具</strong>：在测试过程中容易调试和打日志。</li>
<li><strong>Mocha</strong>：使用 Mocha 作为其测试结构的提供者，确保使用起来非常标准，UI 测试可与其他测试构建在同一结构中。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;My First Cypress Test&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;Gets, types and asserts&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    cy.<span class="title function_">visit</span>(<span class="string">&#x27;https://example.cypress.io&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    cy.<span class="title function_">contains</span>(<span class="string">&#x27;type&#x27;</span>).<span class="title function_">click</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 应在一个包含 &#x27;/commands/actions&#x27; 的新 URL 上</span></span><br><span class="line">    cy.<span class="title function_">url</span>().<span class="title function_">should</span>(<span class="string">&#x27;include&#x27;</span>, <span class="string">&#x27;/commands/actions&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取一个输入，打字填入其中，并验证其值已经更新</span></span><br><span class="line">    cy.<span class="title function_">get</span>(<span class="string">&#x27;.action-email&#x27;</span>)</span><br><span class="line">      .<span class="title function_">type</span>(<span class="string">&#x27;fake@email.com&#x27;</span>)</span><br><span class="line">      .<span class="title function_">should</span>(<span class="string">&#x27;have.value&#x27;</span>, <span class="string">&#x27;fake@email.com&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="Puppeteer"><a href="#Puppeteer" class="headerlink" title="Puppeteer"></a><strong><a href="https://github.com/GoogleChrome/puppeteer">Puppeteer</a></strong></h3><p>Puppeteer 是一个 Google 开发的 Node.js 库，提供了方便的 Node.js API 操控<a href="https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md">无头 Chrome</a>。</p>
<p>无头 Chrome 就是一个运行了 <code>--headless</code> 标志位的常规 Chrome v59+。当 Chrome 运行在无头模式时，会暴露出 API 供外界管理，而 Puppeteer 就是 Google 提供控制它的 JavaScript 工具。</p>
<p>值得一提的是 Firefox 在 2017 年底也推出了<a href="https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode">无头模式</a>。</p>
<p>注意其他不同的测试工具如 TestCafe、Krama 也可以使用无头 Chrome 和 Firefox。</p>
<ul>
<li>Puppeteer 相对较新，但它有一个很大的社区使用、开发工具和二次封装。</li>
<li><strong>原生 (Native) 的所以快，并且使用了最新的 Chrome 引擎</strong>，不像 <a href="https://about.gitlab.com/2017/12/19/moving-to-headless-chrome/">PhantomJS 构建在旧 WebKit 的分支上</a>。（下一小节会讨论）</li>
<li>无头 Chrome 的（因此也是 Puppeteer 的）一个主要缺点是它<a href="https://bugs.chromium.org/p/chromium/issues/detail?id=706008">不支持一些扩展</a>，比如 Flash 扩展（并且近期也可能不会支持）。</li>
</ul>
<h3 id="PhantomJS"><a href="#PhantomJS" class="headerlink" title="PhantomJS"></a><a href="http://phantomjs.org/">PhantomJS</a></h3><p>Phantom 通过实现 Chromium 引擎创建了一个可控的类 Chrome 无头浏览器。不过自从<a href="https://www.chromestatus.com/features/5678767817097216">谷歌宣布自家的 Puppeteer</a> 后，Phantom 的创始人和维护者 <a href="https://medium.com/@vitallium">Vitaliy Slobodin</a> 便<a href="https://groups.google.com/forum/#!msg/phantomjs/9aI5d-LDuNE/5Z3SMZrqAQAJ">不再对其投入精力</a>，因此从 2017 年中开始维护和开发速度就大幅下降，尽管还是有人在维护。</p>
<p>那么，为什么还要使用 Phantom 而非 Puppeteer？</p>
<ul>
<li>首先它有<strong>更多的特性</strong>和许多教程、工具。</li>
<li>它也被许多实用工具如后面会讨论的 <strong>CasperJS</strong> 使用。</li>
<li>它使用更早的 WebKit 因此可以模拟旧版 Chrome。</li>
<li>此外之前提过，Phantom <strong>支持如 Flash 扩展</strong>，<a href="https://bugs.chromium.org/p/chromium/issues/detail?id=706008">与无头 Chrome 相反</a>。</li>
</ul>
<h3 id="Nightmare"><a href="#Nightmare" class="headerlink" title="Nightmare"></a><a href="https://github.com/segmentio/nightmare">Nightmare</a></h3><p>Nightmare 是一款测试语法特别简单的优秀 UI 测试库，使用与 Phantom 类似的 <a href="https://electronjs.org/">Electron</a> 开发。Electron 基于更新版本的 Chromium，处在活跃维护与开发阶段，主要目标是使用 JavaScript、HTML 和 CSS 构建跨平台的桌面应用。</p>
<p>同样 Nightmare 也在<a href="https://github.com/segmentio/nightmare/issues/1092">讨论</a>和<a href="https://github.com/segmentio/nightmare/pull/1211">实验</a>使用无头 Chrome。以下是 Nightmare 和 Phantom 代码的比较：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 译者注：Nightmare 代码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">yield</span> <span class="title class_">Nightmare</span>()</span><br><span class="line">  .<span class="title function_">goto</span>(<span class="string">&#x27;http://yahoo.com&#x27;</span>)</span><br><span class="line">  .<span class="title function_">type</span>(<span class="string">&#x27;input[title=&quot;Search&quot;]&#x27;</span>, <span class="string">&#x27;github nightmare&#x27;</span>)</span><br><span class="line">  .<span class="title function_">click</span>(<span class="string">&#x27;.searchsubmit&#x27;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 译者注：Phantom 代码</span></span><br><span class="line"></span><br><span class="line">phantom.<span class="title function_">create</span>(<span class="keyword">function</span> (<span class="params">ph</span>) &#123;</span><br><span class="line">  ph.<span class="title function_">createPage</span>(<span class="keyword">function</span> (<span class="params">page</span>) &#123;</span><br><span class="line">    page.<span class="title function_">open</span>(<span class="string">&#x27;http://yahoo.com&#x27;</span>, <span class="keyword">function</span> (<span class="params">status</span>) &#123;</span><br><span class="line">      page.evaluate(</span><br><span class="line">        <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">var</span> el = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input[title=&quot;Search&quot;]&#x27;</span>)</span><br><span class="line">          el.<span class="property">value</span> = <span class="string">&#x27;github nightmare&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span><br><span class="line">          page.evaluate(</span><br><span class="line">            <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">              <span class="keyword">var</span> el = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.searchsubmit&#x27;</span>)</span><br><span class="line">              <span class="keyword">var</span> event = <span class="variable language_">document</span>.<span class="title function_">createEvent</span>(<span class="string">&#x27;MouseEvent&#x27;</span>)</span><br><span class="line">              event.<span class="title function_">initEvent</span>(<span class="string">&#x27;click&#x27;</span>, <span class="literal">true</span>, <span class="literal">false</span>)</span><br><span class="line">              el.<span class="title function_">dispatchEvent</span>(event)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span><br><span class="line">              ph.<span class="title function_">exit</span>()</span><br><span class="line">            &#125;</span><br><span class="line">          ) <span class="comment">// page.evaluate</span></span><br><span class="line">        &#125;</span><br><span class="line">      ) <span class="comment">// page.evaluate</span></span><br><span class="line">    &#125;) <span class="comment">// page.open</span></span><br><span class="line">  &#125;) <span class="comment">// ph.createPage</span></span><br><span class="line">&#125;) <span class="comment">// phantom.create</span></span><br></pre></td></tr></table></figure>

<h3 id="Casper"><a href="#Casper" class="headerlink" title="Casper"></a><a href="https://github.com/casperjs/casperjs">Casper</a></h3><p>Casper 基于 PhantomJS 和 <a href="https://slimerjs.org/">SlimerJS</a> （与 Phantom 相同只不过使用了 Firefox 的 Gecko）编写，抽象了在创建 Phantom 和 Slimer 时复杂的异步脚本，从而提供导航、脚本执行和测试工具。</p>
<p>Slimer 尽管被认为是试验性的产品但已被长期广泛使用，并在 2017 年底<strong>释出了 beta 版本</strong>——使用新版<a href="https://developer.mozilla.org/en-US/Firefox/Headless_mode">无头 Firefox</a> 的 <code>1.0.0-beta.1</code>，目前正在为稳定后发布 <code>1.0.0</code> 版本而努力。</p>
<p>Casper 近期可能会从 PhantomJS 移植到 Puppeteer，预期 2.0 版本成为通吃无头 Chrome 和无头 Firefox 的工具，敬请期待吧。</p>
<h3 id="CodeceptJS"><a href="#CodeceptJS" class="headerlink" title="CodeceptJS"></a><a href="https://github.com/codeception/codeceptjs/">CodeceptJS</a></h3><p>类似上面讨论过的 CucumberJS，CodeceptJS 通过不同的函数库 API 提供另一层抽象，哲学上期待你的测试更多关注用户行为。</p>
<p>它大概长这这样：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Scenario</span>(<span class="string">&#x27;login with generated password&#x27;</span>, <span class="keyword">async</span> (I) =&gt; &#123;</span><br><span class="line">  I.<span class="title function_">fillField</span>(<span class="string">&#x27;email&#x27;</span>, <span class="string">&#x27;miles@davis.com&#x27;</span>);</span><br><span class="line">  I.<span class="title function_">click</span>(<span class="string">&#x27;Generate Password&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> password = <span class="keyword">await</span> I.<span class="title function_">grabTextFrom</span>(<span class="string">&#x27;#password&#x27;</span>);</span><br><span class="line">  I.<span class="title function_">click</span>(<span class="string">&#x27;Login&#x27;</span>);</span><br><span class="line">  I.<span class="title function_">fillField</span>(<span class="string">&#x27;email&#x27;</span>, <span class="string">&#x27;miles@davis.com&#x27;</span>);</span><br><span class="line">  I.<span class="title function_">fillField</span>(<span class="string">&#x27;password&#x27;</span>, password);</span><br><span class="line">  I.<span class="title function_">click</span>(<span class="string">&#x27;Log in!&#x27;</span>);</span><br><span class="line">  I.<span class="title function_">see</span>(<span class="string">&#x27;Hello, Miles&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>以下是可以使用这段代码执行的函数库，在前文都讨论过：</p>
<p><a href="https://github.com/Codeception/CodeceptJS/blob/master/docs/helpers/WebDriverIO.md">WebDriverIO</a>, <a href="https://github.com/Codeception/CodeceptJS/blob/master/docs/helpers/Protractor.md">Protractor</a>, <a href="https://github.com/Codeception/CodeceptJS/blob/master/docs/helpers/Nightmare.md">Nightmare</a>, <a href="https://github.com/Codeception/CodeceptJS/blob/master/docs/helpers/Appium.md">Appium</a>, <a href="https://github.com/Codeception/CodeceptJS/blob/master/docs/helpers/Puppeteer.md">Puppeteer</a>.</p>
<p>如果你相信这种语法更适合你的需求，那就试试看吧。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们看完了web 开发社区中最流行的测试策略和工具，希望你能更加轻松地测试你的站点。</p>
<blockquote>
<p>最后，如今关于应用架构的最佳决策是在理解活跃开发社区提出的通用解决模式、与自身经验做结合且考虑应用的特性和特殊需求下做出的。</p>
</blockquote>
<p>噢，然后编码，再重新编码，再重新编码，再重新编码后，测试不同的解决方案 :)</p>
<p><img data-src="https://uq61cg.bn.files.1drv.com/y4m5Hsf55vPDgt2WkOq0qHEeEdQ7dj27ovAZLK4_JyfnwxaZNreWgW8Mh0lNUTdXRIzl2xmx_Oh_gWTPCGuqQuerACxTrxD4McCE5SaLCcWAOSrnDonVPapk7j1L-B3_4WImEfBIGeDsMHpgEgyEG2hRZlJg9_F0gXokxSvAK1RcWWovEWHrIOYkjt5ZEQ5PJtP4Bq6aNi5aI2X4Y1CwLPHmA"></p>
<p>测试快乐 :)</p>
<p>谢谢 :)</p>
<h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><h3 id="最佳"><a href="#最佳" class="headerlink" title="最佳"></a>最佳</h3><ul>
<li><a href="http://mo.github.io/2017/07/20/javascript-e2e-integration-testing.html"><strong>Javascript tools for end-to-end testing</strong> web applications (July 2017)</a></li>
<li><a href="https://medium.com/@adrian_lewis/top-5-most-rated-node-js-frameworks-for-end-to-end-web-testing-f8ebca4e5d44"><strong>Top 5 Most Rated Node.js Frameworks for End-to-End Web Testing</strong>(March 2017)</a></li>
<li><a href="https://www.blazemeter.com/blog/top-15-ui-test-automation-best-practices-you-should-follow">Top <strong>UI Test Automation Best Practices</strong> You Should Follow (November 2017)</a></li>
<li><a href="https://hackernoon.com/how-to-set-up-e2e-browser-testing-for-your-github-project-89c24e15a84">How to set up E2E browser testing for your <strong>GitHub project (With TestCafe)</strong> (February 2017)</a></li>
<li><a href="https://blog.logrocket.com/introduction-to-headless-browser-testing-44b82310b27c">Introduction to <strong>Headless Browser Testing</strong> (September 2017)</a></li>
<li><a href="https://blog.phantombuster.com/web-scraping-in-2017-headless-chrome-tips-tricks-4d6521d695e8"><strong>Web Scraping in 2017</strong>: Advanced Headless Chrome Tips &amp; Tricks (august 2017)</a></li>
<li><a href="https://about.gitlab.com/2017/12/19/moving-to-headless-chrome/">How GitLab switched to <strong>Headless Chrome for testing (From Phantom)</strong>(December 2017)</a></li>
</ul>
<h3 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h3><ul>
<li><a href="https://www.joecolantonio.com/2016/06/14/top-8-essential-javascript-automation-frameworks/">The <strong>Top 8 Essential JavaScript Automation Frameworks</strong> (June 2016)</a></li>
<li><a href="https://www.sitepoint.com/javascript-testing-unit-functional-integration/">JavaScript Testing: <strong>Unit vs Functional vs Integration Tests</strong> (April 2016)</a></li>
<li><a href="https://codeutopia.net/blog/2015/04/11/what-are-unit-testing-integration-testing-and-functional-testing/">What are <strong>Unit Testing, Integration Testing and Functional Testing</strong>? (April 2015)</a></li>
<li><a href="https://www.keycdn.com/blog/browser-compatibility-testing-tools/">Top 12 Browser Compatibility Testing Tools (June 2017)</a></li>
</ul>
<h3 id="spies-和-stubs"><a href="#spies-和-stubs" class="headerlink" title="spies 和 stubs"></a>spies 和 stubs</h3><ul>
<li><a href="https://spin.atomicobject.com/2016/03/21/javascript-mocking-testdouble/">Bye-Bye, Sinon — <strong>Hello, testdouble</strong> (March 2016)</a></li>
<li><a href="https://www.sitepoint.com/javascript-testing-tool-showdown-sinon-js-vs-testdouble-js/">JavaScript Testing Tool Showdown: <strong>Sinon.js vs testdouble.js</strong> (April 2017)</a></li>
<li><a href="http://blog.testdouble.com/posts/2016-03-13-testdouble-vs-sinon.html"><strong>testdouble.js vs. sinon.js</strong> (March 2016)</a></li>
<li><a href="https://medium.com/@bruderstein/enzyme-vs-unexpected-react-ee9cb099d12b"><strong>enzyme vs unexpected-react</strong> (April 2017)</a></li>
</ul>
<h3 id="测试框架对比"><a href="#测试框架对比" class="headerlink" title="测试框架对比"></a>测试框架对比</h3><ul>
<li><a href="https://spin.atomicobject.com/2017/05/02/react-testing-jest-vs-mocha/">React Testing — <strong>Jest or Mocha?</strong> (May 2017)</a></li>
<li><a href="http://instea.sk/2016/08/testing-react-applications-with-karma-jest-or-mocha/">Testing React Applications with <strong>Karma, Jest or Mocha</strong> (August 2016)</a></li>
<li><a href="https://medium.com/cardinal-solutions/lets-compare-javascript-testing-frameworks-bb500f0b1006">Let’s Compare <strong>Javascript Testing Framework</strong> (August 2016)</a></li>
<li><a href="http://thejsguy.com/2015/01/12/jasmine-vs-mocha-chai-and-sinon.html"><strong>Jasmine vs. Mocha, Chai, and Sinon</strong> (Updated February 2016)</a></li>
<li><a href="http://www.tisa-software.com/news/blog/217-jasmine-mocha-javascript-testing-framework-comparison"><strong>Jasmine vs. Mocha</strong>- JavaScript Testing Framework Comparison<br>(January 2017)</a></li>
</ul>
<h3 id="Jest-1"><a href="#Jest-1" class="headerlink" title="Jest"></a>Jest</h3><ul>
<li><a href="https://hackernoon.com/how-to-snapshot-test-everything-in-your-redux-app-with-jest-fde305ebedea">How to <strong>Snapshot</strong> Test Everything in Your <strong>Redux App With Jest</strong><br>(December 2016)</a></li>
<li><a href="https://medium.com/@kentcdodds/migrating-to-jest-881f75366e7e"><strong>Migrating to Jest</strong> on the P2P team at PayPal (November 2016)</a></li>
<li><a href="https://hackernoon.com/from-0-to-100-coverage-real-quick-d71dda7069e5"><strong>Jest</strong>- From 0 to 100% Coverage Real Quick (January 2017)</a></li>
<li><a href="https://medium.com/@boriscoder/the-hidden-power-of-jest-matchers-f3d86d8101b0">The Hidden Power of <strong>Jest Matchers</strong> (January 2017)</a></li>
<li><a href="https://hackernoon.com/testing-react-components-with-jest-and-enzyme-41d592c174f">Testing <strong>React components with Jest and Enzyme</strong> (December 2016)</a></li>
<li><a href="https://medium.com/@gethylgeorge/testing-a-react-redux-app-using-jest-and-enzyme-b349324803a9">Testing a <strong>React-Redux app using Jest and Enzyme</strong> (January 2017)</a></li>
<li><a href="https://semaphoreci.com/community/tutorials/snapshot-testing-react-components-with-jest"><strong>Snapshot</strong> Testing React Components with <strong>Jest</strong> (January 2017)</a></li>
<li><a href="https://medium.com/aya-experience/testing-an-angularjs-app-with-jest-3029a613251">Testing an <strong>AngularJS</strong> app with <strong>Jest</strong> (October 2016)</a></li>
</ul>
<h3 id="Ava"><a href="#Ava" class="headerlink" title="Ava"></a>Ava</h3><ul>
<li><a href="https://wecodetheweb.com/2016/04/19/effortless-unit-testing-with-ava/">Effortless unit testing with <strong>AVA</strong> (April 2016)</a></li>
<li><a href="https://atendesigngroup.com/blog/javascript-testing-ava">Javascript Testing with <strong>AVA</strong> (February 2017)</a></li>
<li><a href="https://tech.just-eat.com/2016/11/10/unit-testing-front-end-javascript-with-ava-and-jsdom/">Unit testing front-end JavaScript with <strong>AVA and jsdom</strong> (November 2016)</a></li>
<li><a href="https://shift.infinite.red/testing-the-bejeezus-out-of-react-native-apps-with-ava-330f51f8f6c3">Testing the Bejeezus out of React Native Apps with <strong>AVA</strong> (June 2016)</a></li>
</ul>
<h3 id="Tape"><a href="#Tape" class="headerlink" title="Tape"></a>Tape</h3><ul>
<li><a href="https://medium.com/javascript-scene/why-i-use-tape-instead-of-mocha-so-should-you-6aa105d8eaf4">Why I use <strong>Tape Instead of Mocha</strong> &amp; So Should You (July 2015)</a></li>
<li><a href="https://github.com/dwyl/learn-tape">Learn <strong>Tape</strong></a></li>
</ul>
<h3 id="UI-测试-1"><a href="#UI-测试-1" class="headerlink" title="UI 测试"></a>UI 测试</h3><ul>
<li><a href="https://moduscreate.com/blog/hybrid-application-testing-with-protractor-and-appium/">Hybrid Application Testing with <strong>Protractor and Appium</strong> (March 2017)</a></li>
<li><a href="https://hackernoon.com/benchmark-headless-chrome-vs-phantomjs-e7f44c6956c"><strong>Headless Chrome vs PhantomJS Benchmark</strong> (September 2017)</a></li>
<li><a href="http://www.webdriverjs.com/protractor-vs-webdriverio-vs-nightwatch/"><strong>Protractor vs WebdriverIO vs NightWatch</strong> (November 2016)</a></li>
<li><a href="https://marmelab.com/blog/2016/04/19/e2e-testing-with-node-and-es6.html">End to End (e2e) Testing React Apps With <strong>Selenium WebDriver And Node.js</strong> is Easier Than You Think (April 2016)</a></li>
<li><a href="https://blog.dmbcllc.com/using-javascript-to-drive-selenium-tests/"><strong>WebdriverIO</strong>- Using JavaScript to Drive Selenium Tests (August 2016)</a></li>
<li><a href="https://www.sitepoint.com/javascript-functional-testing-nightwatch-js/">JavaScript Functional Testing with <strong>Nightwatch.js</strong> (August 2016)</a></li>
<li><a href="https://blog.risingstack.com/end-to-end-testing-with-nightwatch-js-node-js-at-scale/">Node.js End-to-End Testing with <strong>Nightwatch.js</strong> (March 2017)</a></li>
<li><a href="http://dsheiko.com/weblog/nightmare-of-end-to-end-testing"><strong>Nightmare</strong> of End-to-End Testing (September 2016)</a></li>
<li><a href="http://www.webdriverjs.com/protractor-vs-webdriverio-vs-nightwatch/"><strong>Protractor vs WebdriverIO vs NightWatch</strong> (November 2016)</a></li>
<li><a href="http://stackoverflow.com/questions/35981605/what-is-the-difference-between-nightwatch-js-and-webdriver-io">Stack Overflow- What is the difference between <strong>nightwatch.js And webdriver.io?</strong> (March 2016)</a></li>
<li><a href="https://watirmelon.blog/2015/12/08/comparison-of-javascript-browser-automation-and-test-specification-libraries/"><strong>Comparison of JavaScript browser automation and test specification libraries</strong> (December 2015)</a></li>
<li><a href="https://scotch.io/tutorials/what-is-phantomjs-and-how-is-it-used">What is <strong>PhantomJS</strong> and How is it Used? (June 2016)</a></li>
<li><a href="https://medium.com/@armno/setting-up-end-to-end-testing-in-angular-project-with-codeceptjs-ac1784de3420">Setting up End-to-End Testing in Angular Project with <strong>CodeceptJS</strong>(December 2017)</a></li>
</ul>
<h3 id="TestCafe-1"><a href="#TestCafe-1" class="headerlink" title="TestCafe"></a>TestCafe</h3><ul>
<li><a href="http://onpathtesting.com/automated-testing-tool-testcafe-or-selenium-webdriver/">Which automated testing tool to pick — <strong>Testcafe or Selenium WebDriver</strong>? (January 2016)</a></li>
<li><a href="https://devexpress.github.io/testcafe/blog/introducing-testcafe-open-source-testing-framework.html"><strong>Introducing TestCafe</strong> — Open Source Testing Framework (Octobeer 2016)</a></li>
<li><a href="https://testcafe-discuss.devexpress.com/t/why-not-use-selenium/47">Why not use Selenium? (October 2016)</a></li>
<li><a href="http://mherman.org/blog/2017/03/19/functional-testing-with-testcafe">Functional Testing With <strong>TestCafe</strong> (March 2017)</a></li>
<li><a href="http://www.pqatesting.com/our_ideas/blog/u">UI Test Automation Frameworks Showdown: <strong>TestCafé versus Nightwatch.js</strong> (Fabruary 2018)</a></li>
</ul>
<h3 id="Cypress-1"><a href="#Cypress-1" class="headerlink" title="Cypress"></a>Cypress</h3><ul>
<li><a href="https://quizlet.com/blog/cypress-the-future-of-end-to-end-testing-for-web-applications"><strong>Cypress</strong>: The future of end-to-end testing for web applications (Fabruary 2018)</a></li>
</ul>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>javascript</tag>
        <tag>test</tag>
        <tag>unit test</tag>
        <tag>integration test</tag>
        <tag>ui test</tag>
        <tag>mocha</tag>
        <tag>jasmine</tag>
        <tag>jest</tag>
        <tag>cucumber</tag>
        <tag>chai</tag>
        <tag>unexpected</tag>
        <tag>karma</tag>
        <tag>ava</tag>
        <tag>sinon</tag>
        <tag>enzyme</tag>
        <tag>testdouble</tag>
        <tag>istanbul</tag>
        <tag>blanket</tag>
        <tag>protractor</tag>
        <tag>nightwatch</tag>
        <tag>phantom</tag>
        <tag>casper</tag>
        <tag>selenium</tag>
        <tag>appium</tag>
        <tag>webdriverio</tag>
        <tag>testcafe</tag>
        <tag>cypress</tag>
        <tag>puppeteer</tag>
        <tag>nightmare</tag>
        <tag>codeceptjs</tag>
      </tags>
  </entry>
  <entry>
    <title>Build web E2E test system from scratch</title>
    <url>/2019/build-web-e2e-test-system-from-scratch/</url>
    <content><![CDATA[<h2 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h2><p>The topic of end-to-end (E2E) test is a platitude in web front-end (FE) domain, especially most of blogs are talking about testing frameworks out of the real web production. The real world needs solution, for E2E test which means a service can do E2E testing and alerting with stability and even good performance. This article will introduce how we design and build our E2E test service for the newer version of our <a href="https://docs.microsoft.com/en-us/azure/machine-learning/studio/what-is-ml-studio">web application</a> based on popular web FE frameworks and integration with abundant Microsoft services, including several workarounds to tell the problems we met and how we overcame them.</p>
<p>In addition, I shared this system internally at first, then it becomes my first blog article in English. Probably I will translate it into Chinese sooner or later.</p>
<p><strong>In the July of 2021, we build another E2E system to replace the legacy one for Azure Machine Learning Studio (classic) because its runner service will be decommissioned at once. If you are just interested in the latest things, jump to the <a href="https://joouis.com/2019/build-web-e2e-test-system-from-scratch/#Another-E2E-system-built-in-2021">chapter</a> for a quick review.</strong></p>
<span id="more"></span>



<h2 id="Explorations-in-2019"><a href="#Explorations-in-2019" class="headerlink" title="Explorations in 2019"></a>Explorations in 2019</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><blockquote>
<p>“End-to-end testing involves ensuring that the integrated components of an application function as expected. The entire application is tested in a real-world scenario such as communicating with the database, network, hardware and other applications.” Defined by Techopeida. </p>
</blockquote>
<p>This topic is a platitude in web FE domain, especially most of online blogs are talking about testing frameworks out of the real web production. When we were facing the task to build E2E test for the newer version of our web application, these questions came across my mind:</p>
<ul>
<li><p>How did previous version of our production (V1) do E2E testing?</p>
</li>
<li><p>Can we leverage V1’s work?</p>
</li>
<li><p>If the legacy solution doesn’t meet our requirement and we need to build another one from scratch…</p>
<ul>
<li>Which FE test framework is the best for us?</li>
<li>How can we run E2E test as service with stability?</li>
<li>How to associate our test data with internal alerting service?</li>
</ul>
</li>
</ul>
<p>As you can see, there are bunch of questions for us to figure out. It costed two teammates’ and my 2 weeks full-time work and another 2 months part-time work (about 1 day per week) of mine to deliver the first <strong>acceptable</strong> version, though test service had been online after first two weeks work with some workarounds.</p>
<p>The following parts will cover the answers for questions above, several workarounds we made, and an use case to help our team achieve more 😊.</p>
<h3 id="Legacy-solution"><a href="#Legacy-solution" class="headerlink" title="Legacy solution"></a>Legacy solution</h3><p><img data-src="https://cdn.joouis.com/build-web-e2e-test-system-from-scratch-1.png" alt="studio-v1-solution"></p>
<p>Solution for V1 is developed in about 5 years ago. Selenium is chosen as test framework, it’s usually for automating web applications for testing purpose. Test service is based on .Net framework as well as test cases coded in C# which is a very typical Microsoft style. They will manipulate Selenium client to do testing on different browsers for various scenarios by browser drivers. And the service is hosted by Geneva Runner Service, the part of Geneva Monitoring system. This system is a really useful and important internal system, Metrics and Alerting services can help for logging runner data, filing tickets in Incident Management system (IcM) and finally reporting to service owner through phone call , text message and E-mail when high priority ticket issued.</p>
<p>Here are the thoughts why we deprecated this solution:</p>
<ol>
<li>Most of us are web FE developers, it needs efforts to learn C# stuffs and write new E2E tests.</li>
<li>Documents are incomplete, hard to set up and deploy, and we also don’t know the details about how it works with Geneva system.</li>
<li>Tests can’t work for Chrome&#x2F;IE&#x2F;Firefox since 2016 Spring due to browser drivers were out of date, needing effort to fix it.</li>
<li>Checking log on Geneva system is not so friendly.</li>
<li>More technical debts concern for such an old project.</li>
</ol>
<h3 id="Dynatrace"><a href="#Dynatrace" class="headerlink" title="Dynatrace"></a>Dynatrace</h3><p>Since legacy solution had been rejected, one of my teammates Yongliang surveyed another sophisticated solution named Dynatrace and created a basic run experiment test for all regions. Dynatrace is a no-code platform and can create test case easily by recording user operations on the target website after installing its Chrome extension. It’s also easy to integrate with IcM system due to a custom Dynatrace service already exists internally.</p>
<p>Sounds perfect right? But nothing is perfect. The same test in just one region couldn’t pass while in other regions were ok, layout and DOM elements were all the same except different URLs, and of course we could pass the test manually. It took Yongliang and me 2 days to find what’s the matter, and finally we gave up 😭.</p>
<p>Besides the unknown reason above, I also think it’s inconvenient to customize amounts of test cases due to the visual interface, at last the auto generated CSS selectors can be improved :).</p>
<h3 id="Main-goals-of-our-FE-solution"><a href="#Main-goals-of-our-FE-solution" class="headerlink" title="Main goals of our FE solution"></a>Main goals of our FE solution</h3><p>Since we decided to design and implement our own solution, first of all was to make clear our main goals. To build a complete solution at least as good as the legacy one, we need to:</p>
<ul>
<li>Select a popular JavaScript (JS) test framework and write new tests based on it to cover main scenarios of our production.</li>
<li>Set up runners to run tests periodically and save test metrics to database like Geneva Runners Service does.</li>
<li>Associate our test service with IcM System to enable alerting feature, it’s best to leverage Geneva Monitoring system.</li>
</ul>
<h3 id="Test-framework"><a href="#Test-framework" class="headerlink" title="Test framework"></a>Test framework</h3><p>We’re good at JS and web page things, and there are lots of popular JS E2E test frameworks, so it is no doubt to choose a test framework in JS. We would write JS script based on this test framework to automate browser: navigate to our target site, login with our test account, then do what we expect by capturing DOM elements via CSS selectors and trigger DOM events like clicking button.</p>
<p>We already picked Jest as unit test framework for our React components, but another teammate YC chose TestCafe for E2E test at beginning because he had bad experience in E2E stuffs with Jest before. The most fantastic feature of TestCafe is it automates browsers by injecting JS scripts instead of invoking exposed APIs from browsers like Selenium does, so this allows TestCafe to run on any browser, including on mobile devices, and have a full control over the JS execution loop.</p>
<p>Unfortunately, after YC and I wrote some complicated test cases, we both found that tests would fail inexplicable at some steps, elements couldn’t be captured by our scripts. We didn’t have too much time to solve this problem, thus YC had to switch to Jest with Puppeteer plan quickly. Fortunately this plan was not bad, most of steps worked fine and then I wrote more test cases based on it, including common functions like login and full scenarios like run an experiment.</p>
<p><img data-src="https://cdn.joouis.com/build-web-e2e-test-system-from-scratch-2.png" alt="test-framework"></p>
<p>The biggest challenge of this part is robustness of test case scripts, which means test case can’t fail when our web application is healthy, false positive rate should be as low as possible. The unexpected failures may caused by network traffic or browser lag, we need to reorder our actions with reasonable sequence, set enough timeout and try many times to make sure test cases are stable.</p>
<h3 id="Service-framework-Windows-Task-Scheduler"><a href="#Service-framework-Windows-Task-Scheduler" class="headerlink" title="Service framework: Windows Task Scheduler"></a>Service framework: Windows Task Scheduler</h3><p>I don’t have any preference on the OS of platform, there was an idle Windows server virtual machine (VM), so I started work on Windows firstly, meanwhile also applied for another Ubuntu server which I was more familiar with as backup.</p>
<p>Yongliang proposed to use Windows Task Scheduler to run our test cases as runner. It’s easy to set a test runner, just create a new task, add “Start a program” action as trigger with the instruction we used to type in command line to run test cases, that’s it. However, this tool is obviously not design for service, these drawbacks really annoyed me:</p>
<ul>
<li>Tedious configuration: can’t add multiple runner actions in one task, having to create a new task with repetitive settings for a new test case.</li>
<li>Unfriendly log: too simple to see what’s happened to the runner, can’t see any log emitted by console, “History” tab and “Last Run Result” tag are really… useless.</li>
<li>Not stable: sometimes runner just exited for one or two minutes, while sometimes it went well.</li>
</ul>
<p>So we can say that Task Scheduler helped us do proof of concept (POC) quickly without any code, but it’s not design for service, we should find another plan. Before we talk about the new plan, let me introduce the metrics feature I did to make up the drawbacks mentioned above.</p>
<h3 id="Metrics-Flow-connectors"><a href="#Metrics-Flow-connectors" class="headerlink" title="Metrics: Flow connectors"></a>Metrics: Flow connectors</h3><p>Metrics is a very common part in system. It’s the data source for monitoring health status of our E2E test, here we need metrics of runner status like test name, region, test result, duration and so on. Moreover, since we can’t get too much runner information from Task Scheduler, I had to log some metrics of running status to help me debug runner process.</p>
<p>Metrics is usally stored in database. There are two ways to communicate with database, the simple one is using client library provided by database vendor and call database APIs directly, this usually need authorization work in connection stage. For Kusto database which is also used by our production, it’s not easy to write data ingestion function (like data insertion in SQL) in Node.js due to the bad support of SDK and complicated configurations (finally I did it 😂, but we’ll talk about it later). So we had to try another way, using an authored service to forward our requests. Of course .NET framework can do this thing easily, we already did it before for client-side metrics. But I still made a quick survey and found a handy tool called Microsoft Flow.</p>
<p>Flow is a no-code platform that helps customers to leverage plenty of Microsoft services by corresponding connectors, including database connectors for Kusto and SQL. Simply to say, forget about authorization, just add a Kusto query connector into your flow, configure settings and query instruction for your Kusto database, lastly run your flow, then you can get your Kusto data. However Kusto doesn’t support ingestion connector, I had to applied for a new Azure SQL database resource and set a SQL insertion connector.</p>
<p>How to receive data from runner was not a hard thing too, Flow provides a set of HTTP triggers with public links as APIs, our runner will send a HTTP POST request to our trigger after finishing test work, and the trigger will collect HTTP payload which is our metrics and pass it to our SQL insertion connector.</p>
<p>This flow looks like the one in following picture.</p>
<p><img data-src="https://cdn.joouis.com/build-web-e2e-test-system-from-scratch-3.png" alt="flow-example"></p>
<p>One more important thing in this section that you may think about for a while: <strong>our runners are running on a VM instead of cloud service, also Task Scheduler is not stable, how to ensure our test service is always running? Or how to keep stability of our service?</strong> If once the service stopped, how to recognize this disaster as soon as possible? A simple but useful solution is detecting heartbeat. Since we already stored metrics in database, we could query latest row and check its timestamp regularly to see if runners were still working. If time interval between latest record and current time exceeds an hour (one hour is the timeout of run experiment test), our flow will trigger IcM connector to file a ticket named like <code>[E2E][AUE] Runners are missing heartbeat more than 60 minutes!</code>.</p>
<p>We also built several dashboards for service stability which will be introduced later, at present we have simple metrics and alert, let’s take a look at following diagram to see the whole process.</p>
<p><img data-src="https://cdn.joouis.com/build-web-e2e-test-system-from-scratch-4.png" alt="task-scheduler"></p>
<h3 id="Service-framework-Egg-js"><a href="#Service-framework-Egg-js" class="headerlink" title="Service framework: Egg.js"></a>Service framework: Egg.js</h3><p>Although data flow has came from runners continuously and somehow went to the database and IcM system, it’s far from a real service. We would replace Task Scheduler because of its drawbacks, then optimize the rest parts of data flow.</p>
<p>You can’t imagine how fast JS is developing. From Express.js, KOA.js to Egg.js, server-side JS Frameworks now act more and more important role in business world. There are three reasons for me to build our service based on Egg.js:</p>
<ul>
<li><p>Not only I’m familiar with this framework, but it’s also an out of box framework with well documentation. Comparing with Express.js, KOA.js offers a middleware onion model to handle asynchronous operations easily, and Egg.js is based on KOA.js with more key features for building enterprise application, such as clusters and production mode.</p>
<p><img data-src="https://cdn.joouis.com/build-web-e2e-test-system-from-scratch-5.png" alt="koa-onion-model"></p>
</li>
<li><p>High performance with robustness, we already built several productions based on it in Alibaba for 11.11 shopping festival in last few years. Node.js service is good at I&#x2F;O operations, and Egg.js offers a multi-process model to take advantage of modern CPU. We’ll talk about how it applies to our scenario soon.</p>
<p><img data-src="https://cdn.joouis.com/build-web-e2e-test-system-from-scratch-6.png" alt="eggjs-cluster-model"></p>
</li>
<li><p>Featured plugins like logger, scheduler, static server, i18n, session, security, template engine and so on.</p>
</li>
</ul>
<p>For our application, the core requirement is writing several scheduler scripts to spawn child processes for executing our test cases, framework will call schedulers by the intervals we set, and distribute the job to workers due to their workload. Egg.js has a master process as daemon process, then spawns an agent process to do common works like logging, at last creates numbers of workers (usually the number of CPU cores) to handle controller’s and scheduler’s business.</p>
<p>We intend to store metrics to Kusto database, then use Kusto to Geneva Metrics service so we can take advantage of Dashboard and Alerts features of Geneva Monitoring system. In current stage, I could only check results in SQL client tool. We would implement it in next chapter.</p>
<p>Moreover, <strong>there is a gap between runner and E2E test</strong>, only runner finished correctly and then metrics of E2E test can be stored in database, what about run-time status of runner and what if runner goes wrong? So I built a trivial dashboard (time is too precious 😔) to show basic information of runners in running or failed status within a day by React.js and Fabric UI components, hosting all resource on our service.</p>
<h3 id="Metrics-Kusto-Node-js-SDK-Kusto-to-Geneva-Metrics-service"><a href="#Metrics-Kusto-Node-js-SDK-Kusto-to-Geneva-Metrics-service" class="headerlink" title="Metrics: Kusto Node.js SDK, Kusto to Geneva Metrics service"></a>Metrics: Kusto Node.js SDK, Kusto to Geneva Metrics service</h3><p>Based on powerful service framework, now we can migrate data insertion work from test case script to service scheduler. It will bring three benefits:</p>
<ul>
<li>We can leverage Dashboard and Alerts features of Geneva Monitoring system, this is the most important.</li>
<li>More robustness since insertion request will not be sent if test case script exits unexpected.</li>
<li>More efficiency since no more request forward needed.</li>
</ul>
<p>There’s no doubt that it’s the first time to use Node.js with Kusto SDK in my team, but after consulting several senior colleagues, I realized it’s also the first time to use Geneva Metrics via Kusto to Metrics service. Following various documents as well as spending lots of labor work, finally whole data flow could work. It is worth to mention that official data ingestion library named “azure-kusto-ingest” had bug for a long time, I created a issue under their GitHub repo and used inline query way to bypass this problem.</p>
<p>So here is our new system work flow.</p>
<p><img data-src="https://cdn.joouis.com/build-web-e2e-test-system-from-scratch-7.png" alt="eggjs-solution"></p>
<p>Node.js can run across all popular platforms, I put service on Ubuntu server because we need to take full advantage of VM, graphical interface of Windows server is meaningless but also costs some resources. Each runner will cost about 500MB memory space (mostly taken by headless Chromium), when 30 runners work simultaneously I can’t even move the pointer on Windows server but nothing is difference on Ubuntu server through SSH connection.</p>
<p>You may find another “Heartbeat” flow disappeared in above diagram too, Alerting service of Geneva takes this responsibility away. We set several alerting rules for E2E test metrics, if the “real time” (actually 15 minutes delay due to Kusto to Metrics service, it’s also a crucial problem) data can’t meet one or more rules, Geneva system will file ticket automatically with preset configurations such as severity, team&#x2F;owner to assign, trouble shooting guide and so on.</p>
<h3 id="User-case-Supporting-benchmark-test"><a href="#User-case-Supporting-benchmark-test" class="headerlink" title="User case: Supporting benchmark test"></a>User case: Supporting benchmark test</h3><p>While we ramp up E2E test work, a senior teammate led a benchmark test targeting at performance bottleneck of running experiments. This test needs both persistent and appropriate pressure to keep the loading of related backend service, our E2E test service is the perfect choice to trigger new experiments. Here are some highlights during this cooperation:</p>
<ul>
<li>Comparing with no-code solutions like Dynatrace, our test cases can be extended easily for various experiment type, regions and compute targets. Sometimes coding is faster than “clicking”.</li>
<li>As we mentioned above, more than 30 runners worked well simultaneously, limitation comes from the 16GB memory. And we ever triggered more than 1000 experiments per day stably.</li>
<li>Validation showed that our test results came from web page were uniform with backend service.</li>
</ul>
<h3 id="Looking-forward"><a href="#Looking-forward" class="headerlink" title="Looking forward"></a>Looking forward</h3><p>You can take first chapter “TL;DR” as conclusion, in the last chapter is about improvements from several aspects. We’ve said that this is just an “acceptable” version in the introduction, obviously lots of progress can be made, there are some thoughts in my mind:</p>
<ul>
<li>Deploy this system on Azure DevOps and connect to more Azure service like Azure Key Vault.</li>
<li>Support other popular browsers and cover all essential scenarios.</li>
<li>Enhancement of service and runner management. Providing a UI tool to empower other teammates (especially on-call guys) to manipulate E2E test, like restart specific runner, or create new runner based on configurable template.</li>
<li>Better experience to debug failed E2E test. For example, our test framework can generate screenshot of failed moment, but how to management and display these screenshots need well design, and of course these can help us debug more efficient.</li>
<li>Share the service to help other teams which are obsessed with E2E test. For instance they need only write custom test cases then upload to our system, no worry about runner execution, runner management and dashboard service, sounds like another Geneva but designed for E2E test.</li>
<li>Leverage AI technologies to explore new test experience. Write and update test scripts are really heavy loadings, instead of repeating these boring works, can we use reinforcement learning to answer this classification problem with snapshot pictures and test result as inputs? Label snapshots is very easy, all we have to do is train a robust model.</li>
</ul>
<h2 id="Another-E2E-system-built-in-2021"><a href="#Another-E2E-system-built-in-2021" class="headerlink" title="Another E2E system built in 2021"></a>Another E2E system built in 2021</h2><p>Almost 2 years have passed, it’s such a sudden and hurried task to make a new E2E system for our classical product due to its runner service (which hosted on Geneva platform) will be decommissioned at once. Actually we have also built an E2E system based on the previous work for a Kubernetes resources management portal last year and learned a lot from it.</p>
<p>So what’s new in this 2021 version?</p>
<ul>
<li>CI&#x2F;CD pipeline with Docker.</li>
<li>Using Playwright as E2E testing framework.</li>
<li>Saving testing results to Geneva Metrics for instant alerting and other automation actions.</li>
<li>Another testing results backup including screenshots for easy and quick investigation.</li>
</ul>
<p>Here is the architecture of this system.</p>
<p><img data-src="https://cdn.joouis.com/build-web-e2e-test-system-from-scratch-8.png" alt="arch-2021"></p>
<h3 id="Testing-framework"><a href="#Testing-framework" class="headerlink" title="Testing framework"></a>Testing framework</h3><p>We choose <a href="https://playwright.dev/">Playwright</a> as E2E testing framework since 2020, for its capability, reliability, compatibility and open source ecosystem. It’s easy to set up the environment by running few dependency installation commands, and there is no much difference to develop and execute test cases between Windows, macOS or Ubuntu. Though we only do our tests on headless Chromium due to time limit, Playwright can test across all modern browsers (Chromium, Firefox and Webkit) by single API.</p>
<p>Test cases are all written by my colleague Jie since it’s decoupled with infrastructure works. One of the difficult thing is to simulate drag and drop action to put the modules on the canvas and connect them, all based on coordinate position. We also need to pay attention to the timeout settings to improve robustness for unexpected network conditions.</p>
<p><img data-src="https://cdn.joouis.com/build-web-e2e-test-system-from-scratch-9.png" alt="test-case-sample"></p>
<h3 id="CI-CD"><a href="#CI-CD" class="headerlink" title="CI&#x2F;CD"></a>CI&#x2F;CD</h3><p>In Microsoft, we are using Azure DevOps platform to manage our project. I build a new Azure Pipeline with an agent pool to build the Docker image and push it to our ACR (Azure Container Registry) automatically. Then just pull the latest image on an Azure VM to run&#x2F;start several containers for all regions of Studio classic.</p>
<p>The Docker file is based on the image provided by Geneva Metrics so we can communicate with its service easily. In the Docker image build stage, it should install all reusable dependencies (like <code>nodejs</code>, <code>crontab</code>, <code>zip</code>, <code>X11</code>, …), configure the crontab task and handle certificates for Geneva Metrics. At the beginning of the Docker container, we set as entrypoint, it will run the <code>cron</code> deamon service and run Geneva Metrics extension foreground to keep container always running.</p>
<p>The Studio classic is still serving our customers across 6 regions, thus I write a script to start 6 containers at once with correspond environment variables, and the <code>crond</code> service will execute the test cases per 10 minutes. We can validate if they are working well by Geneva Dashboard as well as the Kusto logs from AppInsights (Azure Application Insights).</p>
<p>Another important thing is certificate. We don’t have to deploy our test service to the real production environment (which means you need to request permission before taking any action) right now but can record the test results to the Geneva Metrics due to the publicly trusted certificate. Before this, I used a self-signed certificate to finish the POC on local environment, then applied the trusted certificate signed by Microsoft OneCert platform and finally saved it to the Azure Key Vaulut. Of course no more AAD authentication needed.</p>
<h3 id="Geneva-Monitors"><a href="#Geneva-Monitors" class="headerlink" title="Geneva Monitors"></a>Geneva Monitors</h3><p>The most significant improvement compared to the 2019 system is the alerting latency since incident happened. Kusto has several minutes delay to show the latest result, with extra time consumed by Kusto to Metrics service to digest metrics data for the monitors, there is a real gap for sure! As we are leveraging Geneva Metrics now, we can check the metrics data on its dashboard after few seconds to at most 3 minutes.</p>
<p>Geneva Monitor will create incident ticket on IcM platform when alert conditions meet, for instance there is a heartbeat monitor showed below. We set a computed metric named <code>Runs</code> which is the total run times for web service creation test, the monitor will lookback on the sum of <code>Runs</code> in last 1 hour per 2 minutes, and create a severity 3 ticket if sum of <code>Runs</code> is equal to 0. The IcM platform will do the rest of alerting stuffs responding to different severities.</p>
<p><img data-src="https://cdn.joouis.com/build-web-e2e-test-system-from-scratch-10.png" alt="monitor-sample"></p>
<p>When recreated these monitors (because part of the old ones were not actually working…), I also enabled the “Auto-mitigate Incident” feature with 15 times look back. So after the incident ticket created, if the monitor status turns back to healthy for 30 minutes, it will mitigate the ticket created on IcM before. This is really helpful to the DRI (Directly Response Individual, this role is also known by various other names, such as Google’s “Sheriff” or Facebook’s slightly different “Designated Response Individual”), as I happen to be one of them.</p>
<h3 id="Logs-retrieve"><a href="#Logs-retrieve" class="headerlink" title="Logs retrieve"></a>Logs retrieve</h3><p>It’s a common pain point to investigate an incident of Studio classic, the reason makes it hard for us is incomplete logs. Geneva Metrics only records whether the test result is successful or failed, and the legacy test service deployed to Geneva Runners emits too many verbose logs (like service logs) without any screenshot. In the new system, we save the screenshots of failed test cases, test report as well as the detailed logs file, upload them to the Azure Storage, record the zip link with test results to the Kusto by AppInsights service in the end. The implementation was done by my colleauge Zhongming before, I just reuse it smoothly.</p>
<p>Besides the screenshots can help us investigate the incident more easily and quickly, the test results in Kusto can also help us to double confirm the correctness of metrics data displayed on Geneva dashboards. Yes they already did.</p>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>javascript</tag>
        <tag>ui test</tag>
        <tag>jest</tag>
        <tag>testcafe</tag>
        <tag>puppeteer</tag>
        <tag>e2e test</tag>
        <tag>nodejs</tag>
        <tag>kusto</tag>
        <tag>geneva</tag>
        <tag>playwright</tag>
        <tag>docker</tag>
        <tag>certificate</tag>
        <tag>onecert</tag>
        <tag>dri</tag>
      </tags>
  </entry>
  <entry>
    <title>蔡剑爵士吉他课程二年级笔记</title>
    <url>/2022/cj-jazz-guitar-school-notes-2/</url>
    <content><![CDATA[<p>Here are the notes from the Cai Jian (蔡剑, a well-known jazz guitarist and composer in China, the teacher of Jazz Guitar at the Xinghai Conservatory of Music) jazz guitar school in 2nd grade. The mind map notes are made by teaching assistant Zhichao (<a href="https://mobile.twitter.com/jazz_chao">@Jazz_Chao</a>).</p>
<span id="more"></span>



<h2 id="Lesson-1-Harmony-of-Black-Orpheus"><a href="#Lesson-1-Harmony-of-Black-Orpheus" class="headerlink" title="Lesson 1 - Harmony of Black Orpheus"></a>Lesson 1 - Harmony of Black Orpheus</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-0.avif"></p>
<p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-1.avif"></p>
<h2 id="Lesson-2-Transcription-of-Black-Orpheus"><a href="#Lesson-2-Transcription-of-Black-Orpheus" class="headerlink" title="Lesson 2 - Transcription of Black Orpheus"></a>Lesson 2 - Transcription of Black Orpheus</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-2.avif"></p>
<h2 id="Lesson-3-Bird-blues"><a href="#Lesson-3-Bird-blues" class="headerlink" title="Lesson 3 - Bird blues"></a>Lesson 3 - Bird blues</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-3.avif"></p>
<h2 id="Lesson-4-Transcription-of-Blues-for-Alice"><a href="#Lesson-4-Transcription-of-Blues-for-Alice" class="headerlink" title="Lesson 4 - Transcription of Blues for Alice"></a>Lesson 4 - Transcription of Blues for Alice</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-4.avif"></p>
<h2 id="Lesson-5-Harmony-of-All-the-things-you-are"><a href="#Lesson-5-Harmony-of-All-the-things-you-are" class="headerlink" title="Lesson 5 - Harmony of All the things you are"></a>Lesson 5 - Harmony of All the things you are</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-5.avif"></p>
<h2 id="Lesson-6-Improvisation-practices-of-All-the-things-you-are"><a href="#Lesson-6-Improvisation-practices-of-All-the-things-you-are" class="headerlink" title="Lesson 6 - Improvisation practices of All the things you are"></a>Lesson 6 - Improvisation practices of All the things you are</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-6.avif"></p>
<h2 id="Lesson-7-Transcription-of-All-the-things-you-are"><a href="#Lesson-7-Transcription-of-All-the-things-you-are" class="headerlink" title="Lesson 7 - Transcription of All the things you are"></a>Lesson 7 - Transcription of All the things you are</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-7.avif"></p>
<h2 id="Lesson-8-A613-Blues-Afro-12-8"><a href="#Lesson-8-A613-Blues-Afro-12-8" class="headerlink" title="Lesson 8 - A613 Blues Afro 12&#x2F;8"></a>Lesson 8 - A613 Blues Afro 12&#x2F;8</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-8.avif"></p>
<h2 id="Lesson-9-Transcription-of-A613-Blues"><a href="#Lesson-9-Transcription-of-A613-Blues" class="headerlink" title="Lesson 9 - Transcription of A613 Blues"></a>Lesson 9 - Transcription of A613 Blues</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-9.avif"></p>
<h2 id="Lesson-10-Harmony-of-Softly-as-a-morning-sunrise"><a href="#Lesson-10-Harmony-of-Softly-as-a-morning-sunrise" class="headerlink" title="Lesson 10 - Harmony of Softly as a morning sunrise"></a>Lesson 10 - Harmony of Softly as a morning sunrise</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-10.avif"></p>
<h2 id="Lesson-11-Transcription-of-Softly-as-a-morning-sunrise-Mr-P-C"><a href="#Lesson-11-Transcription-of-Softly-as-a-morning-sunrise-Mr-P-C" class="headerlink" title="Lesson 11 - Transcription of Softly as a morning sunrise &amp; Mr. P.C."></a>Lesson 11 - Transcription of Softly as a morning sunrise &amp; Mr. P.C.</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-11.avif"></p>
<h2 id="Lesson-12-Songs-recommendation-and-review"><a href="#Lesson-12-Songs-recommendation-and-review" class="headerlink" title="Lesson 12 - Songs recommendation and review"></a>Lesson 12 - Songs recommendation and review</h2><p><img data-src="https://cdn.joouis.com/cj-jazz-guitar-school-notes-2-12.avif"></p>
]]></content>
      <categories>
        <category>爱乐之城</category>
      </categories>
      <tags>
        <tag>music</tag>
        <tag>jazz</tag>
        <tag>jazz guitar</tag>
        <tag>lesson</tag>
        <tag>note</tag>
        <tag>bossa nova</tag>
        <tag>black orpheus</tag>
        <tag>bird blues</tag>
        <tag>blues for alice</tag>
        <tag>all the things you are</tag>
        <tag>improvisation</tag>
      </tags>
  </entry>
  <entry>
    <title>五分钟回顾我的硕士论文：嵌入式向量图形系统设计</title>
    <url>/2020/evgui-design-review/</url>
    <content><![CDATA[<p>研究生时期的嵌入式课程笔记整理告一段落，还剩一点硕士论文相关的笔记有待整理。这几篇笔记记录了论文以外的东西，主要是实验过程中的部分源码分析与问题思考，还能保留至今已是幸事（如前文所叙，同样有不少笔记、文章随着 Dropbox 的自动迁移丢失了😭）！</p>
<p>在开始分享笔记之前，先借本文简单介绍一下鄙人的硕士论文，为后续的笔记做个铺垫。</p>
<p>论文主题非常工程化，不过一点一滴都是自己从头搭建起来的，同时完全拥抱开源，甚至像开发环境也是在 Linux 上写 MAKEFILE、LD Script 等去实现过去 Keil IDE 已经帮开发者做好的事情。因此回顾这个项目时，点滴细节不断在脑海里涌现，品味之下令我获得极大的满足感。</p>
<p>希望也能与你分享这份因技术而生的快乐！</p>
<span id="more"></span>



<br />

<p>我的论文旨在为低端嵌入式设备设计一个高性能的向量图形系统，名为 EVGUI（Embedded Vector GUI），其最大价值或者说主要应用场景是在 IoT 设备的产品原型阶段帮助研发团队进行概念验证（Proof of Concept, POC），和工业领域的快速成型（Rapid prototyping）是类似的概念。下面我会用通俗易懂的话来解释这个图形库（希望）解决了什么问题。</p>
<p>在嵌入式电子产品的 GUI 开发流程中，通常设计师先基于产品显示设备的尺寸设计 GUI 界面，接着由嵌入式工程师对照设计稿将一个个像素点码出来，然后大家再评估、修正。由于使用底层语言开发的效率不高（相比客户端 APP、网页应用），因此在项目前期如 POC 阶段怎么提升研发效率便成了关键问题，毕竟一寸光阴一寸金呐。</p>
<p>我的论文思路是找到一个共同的表达层，既可以描述设计师的设计，也可以描述嵌入式设备显示的画面。这个表达层需要使用领域特定语言（Domain-specific Language, DSL）实现描述功能，其实没你想的那么复杂，HTML 就是一种 DSL。我也没搞什么发明创造，选择了 SVG 这种向量语言，它除了是一种图形格式外，更重要的一点特性是矢量图，这意味着它天然适配不同分辨率的屏幕设备，所见即所得在快速成型阶段的价值就体现出来了。因此基于这样一个向量图形库，设计师可以直接将设计稿转成SVG格式给嵌入式工程师，后者可以很方便地在基于 ARM Cortex-M4 微控制器等级的硬件上将设计稿渲染出来。</p>
<p>我们日常用的电脑甚至手机设备性能都非常的强劲，例如今年各家骁龙 865 旗舰手机的高配版本内存竟然达到了 12 GB！而我刚提到的 ARM Cortex-M4 微控制器大概是什么水平呢？以我使用的开发套件 ST32F429IDISCOVERY Kit 举例来说，它使用了一枚 STM32F429ZIT6 MCU，主频 180 MHz、2 Mb of Flash memory、256 KB of RAM，是不是有种瞬间回到“石器时代”的感觉😂。所以实验最大的难度就是在这样性能极度匮乏的硬件上，实现一个能成功解析并正确展示 SVG 图片的向量图形库，每一 KB 内存都需要“锱铢必较”！</p>
<p><img data-src="https://cdn.joouis.com/evgui-design-review-1.jpg" alt="Architecture diagram"></p>
<p>如上图所示，EVGUI 图形库包含三大部分：展示层（Presentation Layer）负责 XML、SVG 的解析；渲染层（Render Layer）负责窗口（Window）、插件（Widget）以及 GUI 的一些核心功能如向量库、基础字体、处理模型等；输出层（Output Layer）主要负责内存管理和驱动管理。图中蓝框说明的是面向快速成型的工作流程，也就是前文提到的直接在设备上渲染出 SVG 图片；红框则想解释这样一个图形库除了能用作快速成型外，也兼容传统开发模式，即基于渲染层提供的 API 编写 GUI 业务代码。</p>
<p>具体的实现、使用到的一些开源库可以参考我的 GitHub <a href="https://github.com/Joouis/EVGUI">仓库</a>，此处不再赘述，在后续（确定会分享）的笔记中会介绍 SVG 的处理、向量图形核心库 TWIN 的渲染流程、简单的触控处理。记得还有一篇把底层驱动库 µGUI 移植到开发套件上的笔记，可惜同样遗失了！在这放个仅存的渲染流程图缅怀一下。</p>
<p><img data-src="https://cdn.joouis.com/evgui-design-review-2.png" alt="µGUI rendering process diagram"></p>
<p>值得一提的是，向量图形库 <a href="https://keithp.com/~keithp/talks/twin-ols2005/twin-ols2005www/">TWIN</a> 是渲染层的核心。作为一个 2005 年还是为 “Sub-PDA” 设计的窗口系统，它只耗费 100KB 左右的内存便可运行起来，代码架构和质量真的非常牛逼。它的作者 Keith Packard 因 X Window 系统而闻名，他在 HP 剑桥研究实验室完成 TWIN 后，又基于 TWIN 研发了 <a href="https://www.cairographics.org/xr_ols2003/">Xr 向量图形库</a>，随后便是现在著名的 Cairo 图形库。这么介绍似乎有点攀亲带故，主要是 TWIN 相关的资料太少，因此多提一嘴。此外 TWIN 诞生的时代还是 WIMP （Windows, Icons, Menus, Pointer）盛行，而现今的交互方式中触控操作逐渐成为主流，因此集成它时也涉及到了人机交互方式的设计与修改。</p>
<p>既然是一篇论文，当然不能只把工程跑起来证明理论设计是可行的，还需要一些定量测试，例如内存的使用分析和测试。为了这么一点点内存绞尽脑汁，现在回想起来，真的很有意思！</p>
<p><img data-src="https://cdn.joouis.com/evgui-design-review-3.jpg" alt="Memory consumptions of layers diagram"></p>
<p>开发板外置的 SDRAM 用来存放 SVG 数据，划分了两个 Layer 1&#x2F;2 实现双重缓冲（Double buffering）。</p>
<p><img data-src="https://cdn.joouis.com/evgui-design-review-4.jpg" alt="Stack heap analysis diagram"></p>
<p>论文套用了当下流行的穿戴式设备话题，因此演示场景也与此相关。至于图二和图四的那个复古时钟，是 TWIN 当年（没错就是 2005 年）的一个演示应用，被我“移花接木”了过来。</p>
<p><img data-src="https://cdn.joouis.com/evgui-design-review-5.jpg"></p>
<p>此处也有演示小视频。</p>

<video width="304" height="540" src="https://cdnhk.blob.core.windows.net/blog/EVGUI Demo.mp4" preload="metadata" controls="" playsinline="" poster="">Sorry, your browser does not support the video tag.</video>



<br />



<p>最后需要说明是这篇论文的思路来自我的指导教授 Jserv，在之前的博文中也曾反复提到过这位大牛。他是“大脑”，而我是执行者。现在偶尔仍能回忆起很多找他调试代码到深夜的日子，嵌入式开发的代码量不大，解决一个问题可能只需要编写或修改几行到数十行代码，但这背后的 know how 往往需要花费数日乃至数周的时间。</p>
<p>同时也要感谢我的一直以来都很开明的直系教授同意我做这样一个与他研究方向毫不相干的题目，以及友情帮助设计这个清爽演示 GUI 的设计系学妹 <a href="https://www.zhihu.com/people/vivianvivi">@Vivian</a> 同学 😊。</p>
<p><img data-src="https://cdn.joouis.com/evgui-design-review-6.png"></p>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system</tag>
        <tag>vector</tag>
        <tag>gui</tag>
        <tag>twin</tag>
        <tag>window system</tag>
        <tag>rapid prototyping</tag>
        <tag>svg</tag>
        <tag>wearable devices</tag>
        <tag>µGUI</tag>
        <tag>stm32</tag>
      </tags>
  </entry>
  <entry>
    <title>SVG Tiny 与 Libsvgtiny</title>
    <url>/2020/evgui-svgtiny/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2020/evgui-design-review/">硕士论文笔记系列</a>第二篇，原文写于 2016 年五月。</p>
<span id="more"></span>



<h2 id="SVG-Tiny-1-2-Spec"><a href="#SVG-Tiny-1-2-Spec" class="headerlink" title="SVG Tiny 1.2 Spec"></a>SVG Tiny 1.2 Spec</h2><ul>
<li>The SVG Working Group <strong>does not</strong> provide a normative DTD for SVG Tiny 1.2 but instead provides a normative <strong>RelaxNG</strong> schema.</li>
<li>How to reference this specification:<br>When referencing this specification as a whole or when referencing a chapter or major section, use the undated URI, <a href="http://www.w3.org/TR/SVGTiny12/">http://www.w3.org/TR/SVGTiny12/</a> , where possible. This allows the reference to always refer to the latest version of this specification.</li>
</ul>
<h3 id="Scriptable"><a href="#Scriptable" class="headerlink" title="Scriptable"></a>Scriptable</h3><p>The combination of scripting and the HTML DOM is often termed “Dynamic HTML” and is widely used for animation, interactivity and presentational effects. Similarly SVG allows the script-based manipulation of the document tree us-ing a subset of the XML DOM and the SVG uDOM.</p>
<h3 id="Rendering-Model"><a href="#Rendering-Model" class="headerlink" title="Rendering Model"></a>Rendering Model</h3><ul>
<li>The painters model</li>
<li>Types of graphics elements<ul>
<li>Shapes: lines, curves</li>
<li>Text</li>
<li>Repalced content<ul>
<li>Raster images</li>
<li>Video</li>
<li>Animation</li>
<li>Foreign Objects</li>
</ul>
</li>
</ul>
</li>
<li>Rendering shapes and text<ul>
<li>fill, stroke: independent, has opacity</li>
<li>paint:<ul>
<li>Solid color</li>
<li>Gradients (linear, radial)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Document-Structure"><a href="#Document-Structure" class="headerlink" title="Document Structure"></a>Document Structure</h3><ul>
<li><code>svg</code> element: <ul>
<li>version, baseProfile, width, height, viewBox, …</li>
<li>This specification corresponds to <strong>baseProfile&#x3D;”tiny”</strong> and <strong>version&#x3D;”1.2”</strong>.</li>
</ul>
</li>
<li><code>g</code> element:<ul>
<li><code>id</code>, <code>xml: id</code></li>
<li>在group中的元素擁有group的屬性</li>
</ul>
</li>
<li><code>defs</code> element</li>
<li><code>discard</code> element</li>
<li><code>title</code> and <code>desc</code> element</li>
<li><code>use</code> element</li>
<li><code>image</code> element: must reference content that is a raster image format</li>
<li><code>switch</code> element: five conditional processing attributes<ul>
<li>requiredExtensions</li>
<li>requiredFeatures</li>
<li>requiredFonts</li>
<li>requiredFormats</li>
<li>systemLanguage</li>
</ul>
</li>
<li><code>prefetch</code> element</li>
<li>Attributes common to all elements: id, class, role, …</li>
</ul>
<h3 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h3><ul>
<li>mpath</li>
</ul>
<h2 id="Libsvgtiny"><a href="#Libsvgtiny" class="headerlink" title="Libsvgtiny"></a>Libsvgtiny</h2><h3 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h3><ul>
<li>Libsvgtiny is an implementation of <a href="http://www.w3.org/TR/SVGMobile/">SVG Tiny</a>, written in C. It is currently in development for use with <a href="http://www.netsurf-browser.org/">NetSurf</a> and is intended to be suitable for use in other projects too.</li>
<li>The overall idea of the library is to take some SVG as input, and return a list of paths and texts which can be rendered easily. The library does not do the actual rendering. For further details, see the <a href="http://source.netsurf-browser.org/libsvgtiny.git/plain/README">readme</a>.</li>
</ul>
<h3 id="支援情況"><a href="#支援情況" class="headerlink" title="支援情況"></a>支援情況</h3><ul>
<li>SVG Tiny elements <strong>supported</strong>: defs, g, svg, circle, line, path, polygon, polyline, rect, text</li>
<li>SVG Tiny elements <strong>not yet supported</strong>: desc, metadata, title, use, a, switch, ellipse, image, font, font-face, font-face-name, font-face-src, glyph, hkern, missing-glyph, animate, animateColor, animateMotion, animateTransform, mpath, set, foreignObject</li>
<li>Additional elements <strong>supported</strong>: linearGradient, stop</li>
<li>Text support is <strong>incomplete.</strong></li>
<li>The style attribute is <strong>supported</strong>.</li>
</ul>
<h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone git://git.netsurf-browser.org/libsvgtiny.git</span><br></pre></td></tr></table></figure>

<ul>
<li>參考<a href="https://listmaster.pepperfish.net/pipermail/netsurf-dev-netsurf-browser.org/2013-November/003228.html">疑問通訊</a></li>
<li>直接編譯Netsurf更快，參考<a href="http://source.netsurf-browser.org/netsurf.git/plain/Docs/QUICK-START">building instruction</a></li>
</ul>
<h3 id="資料結構"><a href="#資料結構" class="headerlink" title="資料結構"></a>資料結構</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">svgtiny_shape</span> &#123;</span></span><br><span class="line">    <span class="type">float</span> *path;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> path_length;</span><br><span class="line">    <span class="type">char</span> *text;</span><br><span class="line">    <span class="type">float</span> text_x, text_y;</span><br><span class="line">    svgtiny_colour fill;</span><br><span class="line">    svgtiny_colour stroke;</span><br><span class="line">    <span class="type">float</span> stroke_width;</span><br><span class="line">    <span class="type">void</span> *_internal_extensions; <span class="comment">// <span class="doctag">TODO:</span> if non-NULL, points to an allocated on the heap extension block. (gradients, fonts)</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">svgtiny_diagram</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> width, height;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">svgtiny_shape</span> *<span class="title">shape</span>;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> shape_count;</span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span> error_line;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *error_message;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="使用-Cairo"><a href="#使用-Cairo" class="headerlink" title="使用 Cairo"></a>使用 Cairo</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Handle an X11 Expose event of the diagram window.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">event_diagram_expose</span><span class="params">(<span class="type">const</span> XExposeEvent *expose_event)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">cairo_surface_t</span> *surface;</span><br><span class="line">    <span class="type">cairo_t</span> *cr;</span><br><span class="line">    <span class="type">cairo_status_t</span> status;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (expose_event-&gt;count != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    surface = cairo_xlib_surface_create(display, diagram_window,</span><br><span class="line">            DefaultVisual(display, DefaultScreen(display)),</span><br><span class="line">            diagram-&gt;width * scale, diagram-&gt;height * scale);</span><br><span class="line">    <span class="keyword">if</span> (!surface) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;cairo_xlib_surface_create failed\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cr = cairo_create(surface);</span><br><span class="line">    status = cairo_status(cr);</span><br><span class="line">    <span class="keyword">if</span> (status != CAIRO_STATUS_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;cairo_create failed: %s\n&quot;</span>,</span><br><span class="line">                cairo_status_to_string(status));</span><br><span class="line">        cairo_destroy(cr);</span><br><span class="line">        cairo_surface_destroy(surface);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cairo_set_source_rgb(cr, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    cairo_paint(cr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i != diagram-&gt;shape_count; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (diagram-&gt;shape[i].path) &#123;</span><br><span class="line">            render_path(cr, scale, &amp;diagram-&gt;shape[i]);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (diagram-&gt;shape[i].text) &#123;</span><br><span class="line">            cairo_set_source_rgb(cr,</span><br><span class="line">                svgtiny_RED(diagram-&gt;shape[i].stroke) / <span class="number">255.0</span>,</span><br><span class="line">                svgtiny_GREEN(diagram-&gt;shape[i].stroke) / <span class="number">255.0</span>,</span><br><span class="line">                svgtiny_BLUE(diagram-&gt;shape[i].stroke) / <span class="number">255.0</span>);</span><br><span class="line">            cairo_move_to(cr,</span><br><span class="line">                    scale * diagram-&gt;shape[i].text_x,</span><br><span class="line">                    scale * diagram-&gt;shape[i].text_y);</span><br><span class="line">            cairo_show_text(cr, diagram-&gt;shape[i].text);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    status = cairo_status(cr);</span><br><span class="line">    <span class="keyword">if</span> (status != CAIRO_STATUS_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;cairo error: %s\n&quot;</span>,</span><br><span class="line">                cairo_status_to_string(status));</span><br><span class="line">        cairo_destroy(cr);</span><br><span class="line">        cairo_surface_destroy(surface);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cairo_destroy(cr);</span><br><span class="line">    cairo_surface_destroy(surface);source</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Render an svgtiny path using cairo.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">render_path</span><span class="params">(<span class="type">cairo_t</span> *cr, <span class="type">float</span> scale, <span class="keyword">struct</span> svgtiny_shape *path)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> j;</span><br><span class="line"></span><br><span class="line">    cairo_new_path(cr);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j != path-&gt;path_length; ) &#123; </span><br><span class="line">        <span class="keyword">switch</span> ((<span class="type">int</span>) path-&gt;path[j]) &#123;</span><br><span class="line">        <span class="keyword">case</span> svgtiny_PATH_MOVE:</span><br><span class="line">            cairo_move_to(cr,</span><br><span class="line">                    scale * path-&gt;path[j + <span class="number">1</span>], </span><br><span class="line">                    scale * path-&gt;path[j + <span class="number">2</span>]);</span><br><span class="line">            j += <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> svgtiny_PATH_CLOSE:</span><br><span class="line">            cairo_close_path(cr);</span><br><span class="line">            j += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> svgtiny_PATH_LINE:</span><br><span class="line">            cairo_line_to(cr,</span><br><span class="line">                    scale * path-&gt;path[j + <span class="number">1</span>], </span><br><span class="line">                    scale * path-&gt;path[j + <span class="number">2</span>]);</span><br><span class="line">            j += <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> svgtiny_PATH_BEZIER:</span><br><span class="line">            cairo_curve_to(cr,</span><br><span class="line">                    scale * path-&gt;path[j + <span class="number">1</span>],</span><br><span class="line">                    scale * path-&gt;path[j + <span class="number">2</span>],</span><br><span class="line">                    scale * path-&gt;path[j + <span class="number">3</span>],</span><br><span class="line">                    scale * path-&gt;path[j + <span class="number">4</span>],</span><br><span class="line">                    scale * path-&gt;path[j + <span class="number">5</span>],</span><br><span class="line">                    scale * path-&gt;path[j + <span class="number">6</span>]);</span><br><span class="line">            j += <span class="number">7</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;error &quot;</span>);</span><br><span class="line">            j += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (path-&gt;fill != svgtiny_TRANSPARENT) &#123;</span><br><span class="line">        cairo_set_source_rgb(cr,</span><br><span class="line">                svgtiny_RED(path-&gt;fill) / <span class="number">255.0</span>,</span><br><span class="line">                svgtiny_GREEN(path-&gt;fill) / <span class="number">255.0</span>,</span><br><span class="line">                svgtiny_BLUE(path-&gt;fill) / <span class="number">255.0</span>);</span><br><span class="line">        cairo_fill_preserve(cr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (path-&gt;stroke != svgtiny_TRANSPARENT) &#123;</span><br><span class="line">        cairo_set_source_rgb(cr,</span><br><span class="line">                svgtiny_RED(path-&gt;stroke) / <span class="number">255.0</span>,</span><br><span class="line">                svgtiny_GREEN(path-&gt;stroke) / <span class="number">255.0</span>,</span><br><span class="line">                svgtiny_BLUE(path-&gt;stroke) / <span class="number">255.0</span>);</span><br><span class="line">        cairo_set_line_width(cr, scale * path-&gt;stroke_width);</span><br><span class="line">        cairo_stroke_preserve(cr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="討論"><a href="#討論" class="headerlink" title="討論"></a>討論</h2><h3 id="Libsvgtiny無法編譯，無論是official還是github版本"><a href="#Libsvgtiny無法編譯，無論是official還是github版本" class="headerlink" title="Libsvgtiny無法編譯，無論是official還是github版本"></a>Libsvgtiny無法編譯，無論是official還是github版本</h3><ul>
<li>改用<a href="https://github.com/DavidPhillipOster/libsvgtiny">https://github.com/DavidPhillipOster/libsvgtiny</a></li>
<li><code>sed -i &#39;s/-lxml2/-lxml2 -lm/g&#39; Makefile &amp;&amp; make</code></li>
</ul>
<h3 id="Libsvgtiny有的可以成功顯示，有的部分顯示，有的則顯示失敗"><a href="#Libsvgtiny有的可以成功顯示，有的部分顯示，有的則顯示失敗" class="headerlink" title="Libsvgtiny有的可以成功顯示，有的部分顯示，有的則顯示失敗"></a>Libsvgtiny有的可以成功顯示，有的部分顯示，有的則顯示失敗</h3><p>（左、中、右圖分別對應 Image Viewer、Libsvgtiny with Cairo、Libsvgtiny with TWIN）</p>
<h4 id="成功顯示"><a href="#成功顯示" class="headerlink" title="成功顯示"></a>成功顯示</h4><p>注意最右邊的圖顯示是正確的，因爲圓形和矩形沒有例如<code>fill: #000000</code>這樣的屬性，至於左邊兩個爲什麼會自動填黑很有趣。</p>
<p><img data-src="https://cdn.joouis.com/evgui-svgtiny-1.png"></p>
<h4 id="部分成功顯示"><a href="#部分成功顯示" class="headerlink" title="部分成功顯示"></a>部分成功顯示</h4><p>都可顯示，但由於Libsvgtiny和TWIN的限制致使顯示有缺陷。中間的圖基本和原圖一樣，不過有條不明顯的黑線，可以修改<code>libsvgtiny.c</code>或刪除這條path多餘的<code>stroke-width</code>屬性即可修正。最右除了Libsvgtiny自身的問題外，和TWIN也有關聯。</p>
<p><img data-src="https://cdn.joouis.com/evgui-svgtiny-2.png"></p>
<p>Cairo可成功顯示但TWIN不行（後已修復）。<br><img data-src="https://cdn.joouis.com/evgui-svgtiny-3.png"></p>
<h4 id="顯示失敗"><a href="#顯示失敗" class="headerlink" title="顯示失敗"></a>顯示失敗</h4><p><img data-src="https://cdn.joouis.com/evgui-svgtiny-4.png"></p>
<p>其實修改Libsvgtiny後使用Cairo是可以大致顯示的，簡單說就是Libsvgtiny的fill邏輯出了問題，要麼都塗黑了如上圖所示，要麼如下圖沒把該塗黑的地方塗黑ORZ</p>
<p><img data-src="https://cdn.joouis.com/evgui-svgtiny-5.png"></p>
<p><img data-src="https://cdn.joouis.com/evgui-svgtiny-6.png"></p>
<p>使用 Netsurf 開啓老虎圖，直接笑出來了…</p>
<p><img data-src="https://cdn.joouis.com/evgui-svgtiny-7.png"></p>
<h3 id="移植到-STM32F429-上的過程中，編譯鏈接又出問題了"><a href="#移植到-STM32F429-上的過程中，編譯鏈接又出問題了" class="headerlink" title="移植到 STM32F429 上的過程中，編譯鏈接又出問題了"></a>移植到 STM32F429 上的過程中，編譯鏈接又出問題了</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">In file included from /usr/include/libxml2/libxml/parser.h:810:0,</span><br><span class="line">                 from /usr/include/libxml2/libxml/globals.h:18,</span><br><span class="line">                 from /usr/include/libxml2/libxml/threads.h:35,</span><br><span class="line">                 from /usr/include/libxml2/libxml/xmlmemory.h:218,</span><br><span class="line">                 from /usr/include/libxml2/libxml/tree.h:1307,</span><br><span class="line">                 from libsvgtiny/src/xml2dom.c:14:</span><br><span class="line">/usr/include/libxml2/libxml/encoding.h:31:26: fatal error: unicode/ucnv.h: No such file or directory</span><br><span class="line"><span class="meta prompt_"> #</span><span class="language-bash">include &lt;unicode/ucnv.h&gt;</span></span><br><span class="line">                          ^</span><br><span class="line">compilation terminated.</span><br><span class="line">Makefile:85: recipe for target &#x27;libsvgtiny/src/xml2dom.o&#x27; failed</span><br><span class="line">make: *** [libsvgtiny/src/xml2dom.o] Error 1</span><br></pre></td></tr></table></figure>

<p>Jserv replied:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> git://git.gnome.org/libxml2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> libxml2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./autogen.sh</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sh configure \</span></span><br><span class="line"><span class="language-bash">  --prefix=/tmp \</span></span><br><span class="line"><span class="language-bash">  --enable-static \</span></span><br><span class="line"><span class="language-bash">  --disable-shared \</span></span><br><span class="line"><span class="language-bash">  --enable-ipv6=no \</span></span><br><span class="line"><span class="language-bash">  --without-c14n \</span></span><br><span class="line"><span class="language-bash">  --without-catalog \</span></span><br><span class="line"><span class="language-bash">  --without-debug \</span></span><br><span class="line"><span class="language-bash">  --without-docbook \</span></span><br><span class="line"><span class="language-bash">  --without-fexceptions \</span></span><br><span class="line"><span class="language-bash">  --without-ftp \</span></span><br><span class="line"><span class="language-bash">  --without-history \</span></span><br><span class="line"><span class="language-bash">  --without-html \</span></span><br><span class="line"><span class="language-bash">  --without-http \</span></span><br><span class="line"><span class="language-bash">  --without-iconv \</span></span><br><span class="line"><span class="language-bash">  --without-icu \</span></span><br><span class="line"><span class="language-bash">  --with-iso8859x \</span></span><br><span class="line"><span class="language-bash">  --without-legacy \</span></span><br><span class="line"><span class="language-bash">  --with-minimum \</span></span><br><span class="line"><span class="language-bash">  --without-output \</span></span><br><span class="line"><span class="language-bash">  --without-pattern \</span></span><br><span class="line"><span class="language-bash">  --without-push \</span></span><br><span class="line"><span class="language-bash">  --without-python \</span></span><br><span class="line"><span class="language-bash">  --without-reader \</span></span><br><span class="line"><span class="language-bash">  --without-regexps \</span></span><br><span class="line"><span class="language-bash">  --without-sax1 \</span></span><br><span class="line"><span class="language-bash">  --with-schemas \</span></span><br><span class="line"><span class="language-bash">  --with-schematron \</span></span><br><span class="line"><span class="language-bash">  --without-threads \</span></span><br><span class="line"><span class="language-bash">  --with-tree \</span></span><br><span class="line"><span class="language-bash">  --with-valid  \</span></span><br><span class="line"><span class="language-bash">  --with-writer \</span></span><br><span class="line"><span class="language-bash">  --with-xinclude \</span></span><br><span class="line"><span class="language-bash">  --with-xpath \</span></span><br><span class="line"><span class="language-bash">  --with-xptr \</span></span><br><span class="line"><span class="language-bash">  --without-modules \</span></span><br><span class="line"><span class="language-bash">  --without-zlib</span></span><br></pre></td></tr></table></figure>

<h3 id="libxml2-太龐大，無法放入-ARM-環境"><a href="#libxml2-太龐大，無法放入-ARM-環境" class="headerlink" title="libxml2 太龐大，無法放入 ARM 環境"></a>libxml2 太龐大，無法放入 ARM 環境</h3><p>替代品:</p>
<ul>
<li><a href="https://dev.yorhel.nl/yxml">YXML</a></li>
<li><a href="https://github.com/lxfontes/ezxml">EZXML</a></li>
</ul>
<h3 id="Updates"><a href="#Updates" class="headerlink" title="Updates"></a>Updates</h3><h4 id="2016-06-08"><a href="#2016-06-08" class="headerlink" title="2016&#x2F;06&#x2F;08"></a>2016&#x2F;06&#x2F;08</h4><p>修復Libsvgtiny問題，顯示tiger黑圖（修改Libsvgtiny的fill、stroke可顯示不完全正確的tiger圖）。</p>
<p><img data-src="https://cdn.joouis.com/evgui-svgtiny-8.png"></p>
<h4 id="2016-06-11"><a href="#2016-06-11" class="headerlink" title="2016&#x2F;06&#x2F;11"></a>2016&#x2F;06&#x2F;11</h4><p>twin接口問題，顯示sonic黑圖（使用cairo可正常顯示）。</p>
<h4 id="2016-06-12"><a href="#2016-06-12" class="headerlink" title="2016&#x2F;06&#x2F;12"></a>2016&#x2F;06&#x2F;12</h4><p>修復Libsvgtiny縮放問題，在STM32F429Discovery上顯示成功。</p>
<p><img data-src="https://cdn.joouis.com/evgui-svgtiny-10.avif"></p>
<p><img data-src="https://cdn.joouis.com/evgui-svgtiny-11.avif"></p>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system</tag>
        <tag>vector</tag>
        <tag>gui</tag>
        <tag>twin</tag>
        <tag>window system</tag>
        <tag>svg</tag>
        <tag>svg tiny</tag>
        <tag>libsvgtiny</tag>
        <tag>cairo</tag>
      </tags>
  </entry>
  <entry>
    <title>EVGUI 触控简单处理笔记</title>
    <url>/2020/evgui-touch-interaction/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2020/evgui-design-review/">硕士论文笔记系列</a>第四篇，原文写于 2016 年六月。</p>
<span id="more"></span>



<h2 id="Touchscreen-driver"><a href="#Touchscreen-driver" class="headerlink" title="Touchscreen driver"></a>Touchscreen driver</h2><ul>
<li>STM32F429 Discovery板載STMPE811觸屏控制器</li>
<li>ST官方提供了驅動程式</li>
</ul>
<h3 id="stm32f429i-discovery-ioe"><a href="#stm32f429i-discovery-ioe" class="headerlink" title="stm32f429i_discovery_ioe"></a>stm32f429i_discovery_ioe</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">  <span class="type">uint16_t</span> TouchDetected;</span><br><span class="line">  <span class="type">uint16_t</span> X;</span><br><span class="line">  <span class="type">uint16_t</span> Y;</span><br><span class="line">  <span class="type">uint16_t</span> Z;</span><br><span class="line">&#125; TP_STATE;</span><br></pre></td></tr></table></figure>

<p>在 uGUI 的範例中，使用方法如下：</p>
<ol>
<li>定義一個結構體：<code>static TP_STATE* TP_State</code>；</li>
<li>初始化觸控晶片：<code>IOE_Config()</code>；</li>
<li>在SysTick的ISR程式中：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TP_State = IOE_TP_GetState();</span><br><span class="line"><span class="keyword">if</span> (TP_State-&gt;TouchDetected) &#123; </span><br><span class="line">  <span class="keyword">if</span> ((TP_State-&gt;X &gt; <span class="number">0</span>) &amp;&amp; (TP_State-&gt;X &lt; <span class="number">239</span> )) </span><br><span class="line">  &#123;  </span><br><span class="line">     <span class="keyword">if</span> ((TP_State-&gt;Y &gt; <span class="number">0</span>) &amp;&amp; (TP_State-&gt;Y &lt; <span class="number">319</span> )) </span><br><span class="line">     &#123;   </span><br><span class="line">        UG_TouchUpdate(TP_State-&gt;X,TP_State-&gt;Y,TOUCH_STATE_PRESSED);</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  UG_TouchUpdate(<span class="number">-1</span>,<span class="number">-1</span>,TOUCH_STATE_RELEASED);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="TWIN"><a href="#TWIN" class="headerlink" title="TWIN"></a>TWIN</h3><ul>
<li>在EVGUI中去掉了TWIN中的cursor.c和file.c兩個文件，第一個是因爲觸控屏不再需要指標，第二個則是我們需要實作的部分，把X11的滑鼠換成觸控屏的輸入</li>
<li>TWIN 中事件類型的定義：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> _<span class="title">twin_event_kind</span> &#123;</span></span><br><span class="line">    <span class="comment">/* Mouse */</span></span><br><span class="line">    TwinEventButtonDown	= <span class="number">0x0001</span>,</span><br><span class="line">    TwinEventButtonUp	= <span class="number">0x0002</span>,</span><br><span class="line">    TwinEventMotion	= <span class="number">0x0003</span>,</span><br><span class="line">    TwinEventEnter	= <span class="number">0x0004</span>,</span><br><span class="line">    TwinEventLeave	= <span class="number">0x0005</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* keyboard */</span></span><br><span class="line">    TwinEventKeyDown	= <span class="number">0x0101</span>,</span><br><span class="line">    TwinEventKeyUp	= <span class="number">0x0102</span>,</span><br><span class="line">    TwinEventUcs4	= <span class="number">0x0103</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Focus */</span></span><br><span class="line">    TwinEventActivate	= <span class="number">0x0201</span>,</span><br><span class="line">    TwinEventDeactivate	= <span class="number">0x0202</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Joystick */</span></span><br><span class="line">    TwinEventJoyButton	= <span class="number">0x0401</span>,</span><br><span class="line">    TwinEventJoyAxis	= <span class="number">0x0402</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Widgets */</span></span><br><span class="line">    TwinEventPaint	= <span class="number">0x1001</span>,</span><br><span class="line">    TwinEventQueryGeometry	= <span class="number">0x1002</span>,</span><br><span class="line">    TwinEventConfigure	= <span class="number">0x1003</span>,</span><br><span class="line">    TwinEventDestroy	= <span class="number">0x1004</span>,</span><br><span class="line">&#125; <span class="type">twin_event_kind_t</span>;</span><br></pre></td></tr></table></figure></li>
<li>TWIN 中事件的定義：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">twin_event</span> &#123;</span></span><br><span class="line">    <span class="type">twin_event_kind_t</span>   kind;</span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">       <span class="type">twin_coord_t</span>    x, y;</span><br><span class="line">       <span class="type">twin_coord_t</span>    screen_x, screen_y;</span><br><span class="line">       <span class="type">twin_count_t</span>    button;</span><br><span class="line">    &#125; pointer;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">       <span class="type">twin_keysym_t</span>   key; </span><br><span class="line">    &#125; key; </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">       <span class="type">twin_js_number_t</span> control;</span><br><span class="line">       <span class="type">twin_js_value_t</span>  value;</span><br><span class="line">    &#125; js;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">       <span class="type">twin_ucs4_t</span>     ucs4;</span><br><span class="line">    &#125; ucs4;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">       <span class="type">twin_rect_t</span>     extents;</span><br><span class="line">    &#125; configure;</span><br><span class="line">    &#125; u;</span><br><span class="line">&#125; <span class="type">twin_event_t</span>;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="添加觸控功能"><a href="#添加觸控功能" class="headerlink" title="添加觸控功能"></a>添加觸控功能</h2><h3 id="開啓事件處理的函式注冊"><a href="#開啓事件處理的函式注冊" class="headerlink" title="開啓事件處理的函式注冊"></a>開啓事件處理的函式注冊</h3><p>要在fbdev的<code>twin_fbdev_create_ext()</code>加入<code>handle_events</code>這個標志（值爲1）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (handle_events) &#123;</span><br><span class="line">		twin_set_file(twin_fbdev_read_events, tf-&gt;vt_fd, TWIN_READ, tf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="實作事件讀取函式"><a href="#實作事件讀取函式" class="headerlink" title="實作事件讀取函式"></a>實作事件讀取函式</h3><ul>
<li>File: <code>backend/system.c</code></li>
<li>關於輸入來源：<ul>
<li>X11通過Xlib的<code>XNextEvent()</code>獲取</li>
<li>Framebuffer實作了一個<code>linux_mouse</code>模塊，讀取<code>/dev/input/mice</code>的資料</li>
<li>關於mice設備的讀取可以參考<a href="http://stackoverflow.com/questions/11451618/how-do-you-read-the-mouse-button-state-from-dev-input-mice">這裡</a></li>
</ul>
</li>
<li>下一節有說明，我們實作一個單向鏈表作爲輸入</li>
</ul>
<h3 id="處理-Raw-Data"><a href="#處理-Raw-Data" class="headerlink" title="處理 Raw Data"></a>處理 Raw Data</h3><ul>
<li>File: <code>backend/system.c</code></li>
<li>回顧，在<code>SysTick_Handler</code>中：<ul>
<li><code>TP_State = IOE_TP_GetState();</code></li>
<li><code>TP_State</code>中有<code>TouchDetected</code> <code>X</code> <code>Y</code> <code>Z</code>四個成員</li>
<li>判斷<code>TouchDetected</code>是否爲真且<code>X</code> <code>Y</code>在合法範圍內</li>
</ul>
</li>
<li>構建<code>twin_event_t</code>參照X11，因爲原生TWIN的framebuffer模式下input本身就有問題，且實作了一個<code>fb</code>的事件讀取和一個滑鼠的事件讀取，這兩個放在一起更合理</li>
<li>由於存在<code>screen-&gt;clicklock</code>（在<code>twin_screen.c</code>中，會判斷<code>screen-&gt;clicklock</code>和<code>event→kind != TwinEventButtonUp</code>同時爲真才進行追蹤），暫時先不實作<code>TwinEventMotion</code>這個類別<ul>
<li>因爲手指移動時一定是<code>ButtonDown</code>的類別也滿足上述判斷式</li>
<li>這樣可能導致的後果是：採用相對坐標，手指下次從其他地方滑動時，坐標還是之前的位置，出現很大的便宜</li>
</ul>
</li>
<li>實作<code>TwinEventMotion</code>類別<ul>
<li>設定一個是否按住的標志（初始值爲1）爲<code>FirstTouch</code></li>
<li>每次<code>TouchDetected</code>爲真時判斷<code>FirstTouch</code>的值<ul>
<li>若<code>FirstTouch</code>爲真則把這次動作的類別記爲<code>TwinEventMotion</code>，然後再補一個<code>TwinEventButtonDown</code>的節點，最後將<code>FirstTouch</code>置爲 0</li>
<li>若<code>FirstTouch</code>爲假則只單純添加<code>TwinEventButtonDown</code>的節點</li>
</ul>
</li>
<li>若<code>TouchDetected</code>爲假時則把<code>FirstTouch</code>置爲1</li>
</ul>
</li>
<li>輸入節點爲一個單向鏈表，有兩個global節點爲<code>TP_Head</code>和<code>TP_Latest</code>：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">FB_event</span> &#123;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">FBEvent</span> *<span class="title">Next</span>;</span></span><br><span class="line">  <span class="type">twin_event_t</span> event;</span><br><span class="line">&#125; FB_event;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><ul>
<li><input checked="" disabled="" type="checkbox"> <del>藍屏 → 無法正常載入圖形</del><ul>
<li>GDB 調試發現在SysTick Hadnler重復呼叫幾次，就直接會跳到通用異常處理的ISR裏</li>
<li>這樣很容易猜測是SySTick中斷頻率太高，一次裏面的事情還沒做完，下一次就發生了，所以掛掉</li>
<li>通過<code>SysTick_Config()</code>把中斷頻率由原來的1000Hz改爲100Hz，果然就好了</li>
</ul>
</li>
<li><input checked="" disabled="" type="checkbox"> <del>時鍾不走，觸屏沒反應</del><ul>
<li><code>timeout_delay()</code>函式有問題</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 自己寫一個簡單的時間調度處理</li>
</ul>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system</tag>
        <tag>vector</tag>
        <tag>gui</tag>
        <tag>twin</tag>
        <tag>window system</tag>
        <tag>svg</tag>
        <tag>µGUI</tag>
        <tag>stm32</tag>
      </tags>
  </entry>
  <entry>
    <title>TWIN API 整理</title>
    <url>/2020/evgui-twin-apis/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2020/evgui-design-review/">硕士论文笔记系列</a>第五篇，原文写于 2016 年四月。</p>
<span id="more"></span>



<h3 id="Box"><a href="#Box" class="headerlink" title="Box"></a>Box</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">twin_box_create(<span class="type">twin_box_t</span> *parent, <span class="type">twin_box_dir_t</span> dir);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_box_init(<span class="type">twin_box_t</span> *box, </span><br><span class="line">                    <span class="type">twin_box_t</span> *parent, </span><br><span class="line">                    <span class="type">twin_window_t</span> *window, </span><br><span class="line">                    <span class="type">twin_box_dir_t</span> dir, </span><br><span class="line">                    <span class="type">twin_dispatch_proc_t</span> dispatch);</span><br><span class="line">                    </span><br><span class="line"><span class="type">static</span> <span class="type">twin_dispatch_result_t</span> _twin_box_query_geometry(<span class="type">twin_box_t</span> *box);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_dispatch_result_t</span> _twin_box_configure(<span class="type">twin_box_t</span> *box)；</span><br><span class="line"></span><br><span class="line"><span class="type">twin_dispatch_result_t</span> _twin_box_dispatch(<span class="type">twin_widget_t</span> *widget, <span class="type">twin_event_t</span> *event)；</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_widget_t</span> * _twin_box_xy_to_widget(<span class="type">twin_box_t</span> *box, <span class="type">twin_coord_t</span> x, <span class="type">twin_coord_t</span> y)；</span><br></pre></td></tr></table></figure>

<h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">twin_button_t</span> * <span class="title function_">twin_button_create</span> <span class="params">(<span class="type">twin_box_t</span>      *parent,</span></span><br><span class="line"><span class="params">                        <span class="type">const</span> <span class="type">char</span>       *value,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_argb32_t</span>    foreground,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_fixed_t</span>     font_size,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_style_t</span>     font_style)</span>;</span><br><span class="line">                        </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_button_paint (<span class="type">twin_button_t</span> *button);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_button_set_label_offset (<span class="type">twin_button_t</span> *button);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_dispatch_result_t</span> _twin_button_dispatch (<span class="type">twin_widget_t</span> *widget, <span class="type">twin_event_t</span> *event);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_button_init (<span class="type">twin_button_t</span>    *button,</span><br><span class="line">                        <span class="type">twin_box_t</span>       *parent,</span><br><span class="line">                        <span class="type">const</span> <span class="type">char</span>       *value,</span><br><span class="line">                        <span class="type">twin_argb32_t</span>    foreground,</span><br><span class="line">                        <span class="type">twin_fixed_t</span>     font_size,</span><br><span class="line">                        <span class="type">twin_style_t</span>     font_style,</span><br><span class="line">                        <span class="type">twin_dispatch_proc_t</span> dispatch);</span><br></pre></td></tr></table></figure>

<h3 id="Convolve"><a href="#Convolve" class="headerlink" title="Convolve"></a>Convolve</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">twin_path_convolve</span> <span class="params">(<span class="type">twin_path_t</span> *path,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_path_t</span> *stroke,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_path_t</span> *pen)</span>;</span><br><span class="line">                        </span><br><span class="line"><span class="type">static</span> <span class="type">int</span> _twin_path_leftpoint (<span class="type">twin_path_t</span>   *path,</span><br><span class="line">                        <span class="type">twin_spoint_t</span> *p1,</span><br><span class="line">                        <span class="type">twin_spoint_t</span> *p2);</span><br><span class="line">                        </span><br><span class="line"><span class="type">static</span> <span class="type">int</span> _around_order (<span class="type">twin_spoint_t</span>    *a1,</span><br><span class="line">                        <span class="type">twin_spoint_t</span>    *a2,</span><br><span class="line">                        <span class="type">twin_spoint_t</span>    *b1,</span><br><span class="line">                        <span class="type">twin_spoint_t</span>    *b2);</span><br><span class="line">                        </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_subpath_convolve (<span class="type">twin_path_t</span> *path,</span><br><span class="line">                        <span class="type">twin_path_t</span> *stroke,</span><br><span class="line">                        <span class="type">twin_path_t</span> *pen);</span><br></pre></td></tr></table></figure>

<h3 id="Cursor"><a href="#Cursor" class="headerlink" title="Cursor"></a>Cursor</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">int</span> twin_def_cursor_image[] = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_pixmap_t</span> *<span class="title function_">twin_get_default_cursor</span><span class="params">(<span class="type">int</span> *hx, <span class="type">int</span> *hy)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">int</span> <span class="title function_">twin_read_header</span><span class="params">(fdtype fd, <span class="type">uint32_t</span> *buf, <span class="type">int</span> size)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_pixmap_t</span> *<span class="title function_">twin_load_X_cursor</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *file, <span class="type">int</span> index, <span class="type">int</span> *hx, <span class="type">int</span> *hy)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Dispatch"><a href="#Dispatch" class="headerlink" title="Dispatch"></a>Dispatch</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">twin_dispatch</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Draw"><a href="#Draw" class="headerlink" title="Draw"></a>Draw</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> twin_src_op  comp2[<span class="number">2</span>][<span class="number">4</span>][<span class="number">3</span>] = &#123;&#125;;</span><br><span class="line"><span class="type">static</span> twin_src_msk_op  comp3[<span class="number">2</span>][<span class="number">4</span>][<span class="number">4</span>][<span class="number">3</span>] = &#123;&#125;;</span><br><span class="line"><span class="type">static</span> twin_src_op  fill[<span class="number">2</span>][<span class="number">3</span>] = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">int</span> <span class="title function_">operand_xindex</span><span class="params">(<span class="type">twin_operand_t</span> *o)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_xform_t</span> *<span class="title function_">twin_pixmap_init_xform</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span> left, <span class="type">twin_coord_t</span> width,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span> src_x, <span class="type">twin_coord_t</span> src_y)</span>;</span><br><span class="line">                          </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">twin_pixmap_free_xform</span> <span class="params">(<span class="type">twin_xform_t</span> *xform)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">twin_pixmap_read_xform_8</span> <span class="params">(<span class="type">twin_xform_t</span> *xform, <span class="type">twin_coord_t</span> line)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">twin_pixmap_read_xform_16</span> <span class="params">(<span class="type">twin_xform_t</span> *xform, <span class="type">twin_coord_t</span> line)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">twin_pixmap_read_xform_32</span> <span class="params">(<span class="type">twin_xform_t</span> *xform, <span class="type">twin_coord_t</span> line)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">twin_pixmap_read_xform</span> <span class="params">(<span class="type">twin_xform_t</span> *xform, <span class="type">twin_coord_t</span> line)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_composite</span> <span class="params">(<span class="type">twin_pixmap_t</span>  *dst,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>    dst_x,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>    dst_y,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_operand_t</span>  *src,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>    src_x,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>    src_y,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_operand_t</span>  *msk,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>    msk_x,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>    msk_y,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_operator_t</span> operator,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>    width,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>    height)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_premultiply_alpha</span><span class="params">(<span class="type">twin_pixmap_t</span> *px)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_fill</span> <span class="params">(<span class="type">twin_pixmap_t</span>    *dst,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_argb32_t</span>    pixel,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_operator_t</span>  operator,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>     left,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>     top,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>     right,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span>     bottom)</span>;</span><br><span class="line">                          </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_composite_simple (<span class="type">twin_pixmap_t</span>   *dst,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    dst_x,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    dst_y,</span><br><span class="line">                          <span class="type">twin_operand_t</span>  *src,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    src_x,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    src_y,</span><br><span class="line">                          <span class="type">twin_operand_t</span>  *msk,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    msk_x,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    msk_y,</span><br><span class="line">                          <span class="type">twin_operator_t</span> operator,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    width,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    height);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_composite_xform (<span class="type">twin_pixmap_t</span>    *dst,</span><br><span class="line">                          <span class="type">twin_coord_t</span>     dst_x,</span><br><span class="line">                          <span class="type">twin_coord_t</span>     dst_y,</span><br><span class="line">                          <span class="type">twin_operand_t</span>   *src,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    src_x,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    src_y,</span><br><span class="line">                          <span class="type">twin_operand_t</span>  *msk,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    msk_x,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    msk_y,</span><br><span class="line">                          <span class="type">twin_operator_t</span> operator,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    width,</span><br><span class="line">                          <span class="type">twin_coord_t</span>    height);</span><br><span class="line">                          </span><br><span class="line"><span class="type">static</span> <span class="type">twin_argb32_t</span> _twin_apply_alpha(<span class="type">twin_argb32_t</span> v);</span><br></pre></td></tr></table></figure>

<h3 id="File"><a href="#File" class="headerlink" title="File"></a>File</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">twin_file_t</span> * <span class="title function_">twin_set_file</span> <span class="params">(<span class="type">twin_file_proc_t</span> file_proc,</span></span><br><span class="line"><span class="params">                          <span class="type">int</span>           fd,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_file_op_t</span>    ops,</span></span><br><span class="line"><span class="params">                          <span class="type">void</span>          *closure)</span>;</span><br><span class="line">                          </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_clear_file</span> <span class="params">(<span class="type">twin_file_t</span> *file)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_order_t</span> _twin_file_order (<span class="type">twin_queue_t</span> *a, <span class="type">twin_queue_t</span> *b);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_run_file (<span class="type">twin_time_t</span> delay);</span><br></pre></td></tr></table></figure>

<h3 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">twin_fixed_t</span> <span class="title function_">twin_fixed_sqrt</span> <span class="params">(<span class="type">twin_fixed_t</span> a)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_sfixed_t</span> _twin_sfixed_sqrt (<span class="type">twin_sfixed_t</span> as);</span><br></pre></td></tr></table></figure>

<h3 id="Font"><a href="#Font" class="headerlink" title="Font"></a>Font</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">twin_text_info</span> &#123;</span> </span><br><span class="line">    <span class="type">twin_point_t</span>    scale;</span><br><span class="line">    <span class="type">twin_point_t</span>    pen;</span><br><span class="line">    <span class="type">twin_point_t</span>    margin;</span><br><span class="line">    <span class="type">twin_point_t</span>    reverse_scale;</span><br><span class="line">    <span class="type">twin_bool_t</span>     snap;</span><br><span class="line">    <span class="type">twin_matrix_t</span>   matrix;</span><br><span class="line">    <span class="type">twin_matrix_t</span>   pen_matrix;</span><br><span class="line">    <span class="type">int</span>         n_snap_x;</span><br><span class="line">    <span class="type">twin_fixed_t</span>    snap_x[TWIN_GLYPH_MAX_SNAP_X];</span><br><span class="line">    <span class="type">int</span>         n_snap_y;</span><br><span class="line">    <span class="type">twin_fixed_t</span>    snap_y[TWIN_GLYPH_MAX_SNAP_Y];</span><br><span class="line">&#125; <span class="type">twin_text_info_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_text_compute_info (<span class="type">twin_path_t</span>    *path,</span><br><span class="line">                            <span class="type">twin_font_t</span>    *font,</span><br><span class="line">                            <span class="type">twin_text_info_t</span>   *info);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_text_compute_snap (<span class="type">twin_text_info_t</span>   *info,</span><br><span class="line">                            <span class="type">const</span> <span class="type">signed</span> <span class="type">char</span>  *b);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_path_t</span> * _twin_text_compute_pen (<span class="type">twin_text_info_t</span> *info);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_fixed_t</span> _twin_snap (<span class="type">twin_fixed_t</span>    v,</span><br><span class="line">                            <span class="type">twin_fixed_t</span>    *snap,</span><br><span class="line">                            <span class="type">int</span>         n);</span><br><span class="line">                            </span><br><span class="line"><span class="type">static</span> <span class="type">twin_bool_t</span> <span class="title function_">twin_find_ucs4_page</span><span class="params">(<span class="type">twin_font_t</span> *font, <span class="type">uint32_t</span> page)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_bool_t</span> <span class="title function_">twin_has_ucs4</span> <span class="params">(<span class="type">twin_font_t</span> *font, <span class="type">twin_ucs4_t</span> ucs4)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">signed</span> <span class="type">char</span> * _twin_g_base (<span class="type">twin_font_t</span> *font, <span class="type">twin_ucs4_t</span> ucs4);</span><br><span class="line"> </span><br><span class="line"><span class="type">static</span> <span class="type">twin_fixed_t</span> _twin_glyph_width (<span class="type">twin_text_info_t</span>  *info,</span><br><span class="line">                              <span class="type">const</span> <span class="type">signed</span> <span class="type">char</span> *b);</span><br><span class="line">                              </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_text_metrics_ucs4</span> <span class="params">(<span class="type">twin_path_t</span>        *path,</span></span><br><span class="line"><span class="params">                              <span class="type">twin_ucs4_t</span>        ucs4,</span></span><br><span class="line"><span class="params">                              <span class="type">twin_text_metrics_t</span>    *m)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">signed</span> <span class="type">char</span> *<span class="title function_">twin_glyph_draw</span><span class="params">(<span class="type">twin_font_t</span>       *font,</span></span><br><span class="line"><span class="params">                              <span class="type">const</span> <span class="type">signed</span> <span class="type">char</span> *b)</span>;</span><br><span class="line">                              </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_ucs4</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_ucs4_t</span> ucs4)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_fixed_t</span> <span class="title function_">twin_width_ucs4</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_ucs4_t</span> ucs4)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> _twin_utf8_to_ucs4 (<span class="type">const</span> <span class="type">char</span>       *src_orig,</span><br><span class="line">                              <span class="type">twin_ucs4_t</span>      *dst);</span><br><span class="line">                              </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_utf8</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">const</span> <span class="type">char</span> *<span class="built_in">string</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_fixed_t</span> <span class="title function_">twin_width_utf8</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">const</span> <span class="type">char</span> *<span class="built_in">string</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_text_metrics_utf8</span> <span class="params">(<span class="type">twin_path_t</span>     *path,</span></span><br><span class="line"><span class="params">                              <span class="type">const</span> <span class="type">char</span>          *<span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">                              <span class="type">twin_text_metrics_t</span> *m)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Geom"><a href="#Geom" class="headerlink" title="Geom"></a>Geom</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">twin_dfixed_t</span> _twin_distance_to_point_squared (<span class="type">twin_spoint_t</span> *a, <span class="type">twin_spoint_t</span> *b);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_dfixed_t</span> _twin_distance_to_line_squared (<span class="type">twin_spoint_t</span> *p, <span class="type">twin_spoint_t</span> *p1, <span class="type">twin_spoint_t</span> *p2);</span><br></pre></td></tr></table></figure>

<h3 id="Hull"><a href="#Hull" class="headerlink" title="Hull"></a>Hull</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">twin_slope</span> &#123;</span></span><br><span class="line">    <span class="type">twin_sfixed_t</span> dx;</span><br><span class="line">    <span class="type">twin_sfixed_t</span> dy;</span><br><span class="line">&#125; <span class="type">twin_slope_t</span>, <span class="type">twin_distance_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">twin_hull</span> &#123;</span></span><br><span class="line">    <span class="type">twin_spoint_t</span> point;</span><br><span class="line">    <span class="type">twin_slope_t</span> slope;</span><br><span class="line">    <span class="type">int</span> discard;</span><br><span class="line">&#125; <span class="type">twin_hull_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_slope_init (<span class="type">twin_slope_t</span> *slope, <span class="type">twin_spoint_t</span> *a, <span class="type">twin_spoint_t</span> *b);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_hull_t</span> * _twin_hull_create (<span class="type">twin_path_t</span> *path, <span class="type">int</span> *nhull);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> _twin_slope_compare (<span class="type">twin_slope_t</span> *a, <span class="type">twin_slope_t</span> *b);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> _twin_hull_vertex_compare (<span class="type">const</span> <span class="type">void</span> *av, <span class="type">const</span> <span class="type">void</span> *bv);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> _twin_hull_prev_valid (<span class="type">twin_hull_t</span> *hull, <span class="type">int</span> maybe_unused num_hull, <span class="type">int</span> index);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> _twin_hull_next_valid (<span class="type">twin_hull_t</span> *hull, <span class="type">int</span> num_hull, <span class="type">int</span> index);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_hull_eliminate_concave (<span class="type">twin_hull_t</span> *hull, <span class="type">int</span> num_hull);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_path_t</span> * _twin_hull_to_path (<span class="type">twin_hull_t</span> *hull, <span class="type">int</span> num_hull);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_path_t</span> * <span class="title function_">twin_path_convex_hull</span> <span class="params">(<span class="type">twin_path_t</span> *path)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Label"><a href="#Label" class="headerlink" title="Label"></a>Label</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_label_query_geometry (<span class="type">twin_label_t</span> *label);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_label_paint (<span class="type">twin_label_t</span> *label);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_dispatch_result_t</span> _twin_label_dispatch (<span class="type">twin_widget_t</span> *widget, <span class="type">twin_event_t</span> *event);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_label_set</span> <span class="params">(<span class="type">twin_label_t</span>    *label,</span></span><br><span class="line"><span class="params">              <span class="type">const</span> <span class="type">char</span>  *value,</span></span><br><span class="line"><span class="params">              <span class="type">twin_argb32_t</span>   foreground,</span></span><br><span class="line"><span class="params">              <span class="type">twin_fixed_t</span>    font_size,</span></span><br><span class="line"><span class="params">              <span class="type">twin_style_t</span>    font_style)</span>;</span><br><span class="line">              </span><br><span class="line"><span class="type">void</span> _twin_label_init (<span class="type">twin_label_t</span>      *label,</span><br><span class="line">              <span class="type">twin_box_t</span>        *parent,</span><br><span class="line">              <span class="type">const</span> <span class="type">char</span>        *value,</span><br><span class="line">              <span class="type">twin_argb32_t</span>     foreground,</span><br><span class="line">              <span class="type">twin_fixed_t</span>      font_size,</span><br><span class="line">              <span class="type">twin_style_t</span>      font_style,</span><br><span class="line">              <span class="type">twin_dispatch_proc_t</span>  dispatch);</span><br><span class="line">              </span><br><span class="line"><span class="type">twin_label_t</span> * <span class="title function_">twin_label_create</span> <span class="params">(<span class="type">twin_box_t</span>       *parent,</span></span><br><span class="line"><span class="params">              <span class="type">const</span> <span class="type">char</span>       *value,</span></span><br><span class="line"><span class="params">              <span class="type">twin_argb32_t</span>    foreground,</span></span><br><span class="line"><span class="params">              <span class="type">twin_fixed_t</span>     font_size,</span></span><br><span class="line"><span class="params">              <span class="type">twin_style_t</span>     font_style)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Matrix"><a href="#Matrix" class="headerlink" title="Matrix"></a>Matrix</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">twin_matrix_multiply</span> <span class="params">(<span class="type">twin_matrix_t</span> *result,</span></span><br><span class="line"><span class="params">              <span class="type">const</span> <span class="type">twin_matrix_t</span>   *a,</span></span><br><span class="line"><span class="params">              <span class="type">const</span> <span class="type">twin_matrix_t</span>   *b)</span>;</span><br><span class="line">              </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_matrix_identity</span> <span class="params">(<span class="type">twin_matrix_t</span> *m)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_bool_t</span> <span class="title function_">twin_matrix_is_identity</span> <span class="params">(<span class="type">twin_matrix_t</span> *m)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_matrix_translate</span> <span class="params">(<span class="type">twin_matrix_t</span> *m, <span class="type">twin_fixed_t</span> tx, <span class="type">twin_fixed_t</span> ty)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_matrix_scale</span> <span class="params">(<span class="type">twin_matrix_t</span> *m, <span class="type">twin_fixed_t</span> sx, <span class="type">twin_fixed_t</span> sy)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_fixed_t</span> _twin_matrix_determinant (<span class="type">twin_matrix_t</span> *matrix);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_point_t</span> _twin_matrix_expand (<span class="type">twin_matrix_t</span> *matrix);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_matrix_rotate</span> <span class="params">(<span class="type">twin_matrix_t</span> *m, <span class="type">twin_angle_t</span> a)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_sfixed_t</span> _twin_matrix_x (<span class="type">twin_matrix_t</span> *m, <span class="type">twin_fixed_t</span> x, <span class="type">twin_fixed_t</span> y);</span><br><span class="line"><span class="type">twin_sfixed_t</span> _twin_matrix_y (<span class="type">twin_matrix_t</span> *m, <span class="type">twin_fixed_t</span> x, <span class="type">twin_fixed_t</span> y);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_fixed_t</span> _twin_matrix_fx (<span class="type">twin_matrix_t</span> *m, <span class="type">twin_fixed_t</span> x, <span class="type">twin_fixed_t</span> y);</span><br><span class="line"><span class="type">twin_fixed_t</span> _twin_matrix_fy (<span class="type">twin_matrix_t</span> *m, <span class="type">twin_fixed_t</span> x, <span class="type">twin_fixed_t</span> y);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_sfixed_t</span> _twin_matrix_dx (<span class="type">twin_matrix_t</span> *m, <span class="type">twin_fixed_t</span> x, <span class="type">twin_fixed_t</span> y);</span><br><span class="line"><span class="type">twin_sfixed_t</span> _twin_matrix_dy (<span class="type">twin_matrix_t</span> *m, <span class="type">twin_fixed_t</span> x, <span class="type">twin_fixed_t</span> y);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_sfixed_t</span> _twin_matrix_len (<span class="type">twin_matrix_t</span> *m, <span class="type">twin_fixed_t</span> dx, <span class="type">twin_fixed_t</span> dy);</span><br></pre></td></tr></table></figure>

<h3 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">int</span> _twin_current_subpath_len (<span class="type">twin_path_t</span> *path);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_spoint_t</span> _twin_path_current_spoint (<span class="type">twin_path_t</span> *path);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_spoint_t</span> _twin_path_subpath_first_spoint (<span class="type">twin_path_t</span> *path);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_path_sfinish (<span class="type">twin_path_t</span> *path);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_path_smove (<span class="type">twin_path_t</span> *path, <span class="type">twin_sfixed_t</span> x, <span class="type">twin_sfixed_t</span> y);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_path_sdraw (<span class="type">twin_path_t</span> *path, <span class="type">twin_sfixed_t</span> x, <span class="type">twin_sfixed_t</span> y);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_move</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_fixed_t</span> x, <span class="type">twin_fixed_t</span> y)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_rmove</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_fixed_t</span> dx, <span class="type">twin_fixed_t</span> dy)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_draw</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_fixed_t</span> x, <span class="type">twin_fixed_t</span> y)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_rdraw</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_fixed_t</span> dx, <span class="type">twin_fixed_t</span> dy)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_close</span> <span class="params">(<span class="type">twin_path_t</span> *path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_circle</span> <span class="params">(<span class="type">twin_path_t</span>   *path,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>  x,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>  y,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> radius)</span>;</span><br><span class="line">                  </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_ellipse</span> <span class="params">(<span class="type">twin_path_t</span> *path,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> x,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> y,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> x_radius,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> y_radius)</span>;</span><br><span class="line">                  </span><br><span class="line"><span class="type">static</span> <span class="type">twin_fixed_t</span> _twin_matrix_max_radius (<span class="type">twin_matrix_t</span> *m);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_arc</span> <span class="params">(<span class="type">twin_path_t</span>  *path,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> x,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> y,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> x_radius,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> y_radius,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_angle_t</span> start,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_angle_t</span> extent)</span>;</span><br><span class="line">                  </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_rectangle</span> <span class="params">(<span class="type">twin_path_t</span>    *path,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   x,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   y,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   w,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   h)</span>;</span><br><span class="line">                  </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_rounded_rectangle</span> <span class="params">(<span class="type">twin_path_t</span>    *path,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   x,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   y,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   w,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   h,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   x_radius,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   y_radius)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_lozenge</span> <span class="params">(<span class="type">twin_path_t</span>  *path,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> x,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> y,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> w,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> h)</span>;</span><br><span class="line">                  </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_tab</span> <span class="params">(<span class="type">twin_path_t</span>  *path,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> x,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> y,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> w,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> h,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> x_radius,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span> y_radius)</span>;</span><br><span class="line">                  </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_set_matrix</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_matrix_t</span> matrix)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_matrix_t</span> <span class="title function_">twin_path_current_matrix</span> <span class="params">(<span class="type">twin_path_t</span> *path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_identity</span> <span class="params">(<span class="type">twin_path_t</span> *path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_translate</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_fixed_t</span> tx, <span class="type">twin_fixed_t</span> ty)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_scale</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_fixed_t</span> sx, <span class="type">twin_fixed_t</span> sy)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_rotate</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_angle_t</span> a)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_set_font_size</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_fixed_t</span> font_size)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_fixed_t</span> <span class="title function_">twin_path_current_font_size</span> <span class="params">(<span class="type">twin_path_t</span> *path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_set_font_style</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_style_t</span> font_style)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_style_t</span> <span class="title function_">twin_path_current_font_style</span> <span class="params">(<span class="type">twin_path_t</span> *path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_set_cap_style</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_cap_t</span> cap_style)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_cap_t</span> <span class="title function_">twin_path_current_cap_style</span> <span class="params">(<span class="type">twin_path_t</span> *path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_empty</span> <span class="params">(<span class="type">twin_path_t</span> *path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_bounds</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_rect_t</span> *rect)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_append</span> <span class="params">(<span class="type">twin_path_t</span> *dst, <span class="type">twin_path_t</span> *src)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_state_t</span> <span class="title function_">twin_path_save</span> <span class="params">(<span class="type">twin_path_t</span> *path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_restore</span> <span class="params">(<span class="type">twin_path_t</span> *path, <span class="type">twin_state_t</span> *state)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_path_t</span> * <span class="title function_">twin_path_create</span> <span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_destroy</span> <span class="params">(<span class="type">twin_path_t</span> *path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_composite_path</span> <span class="params">(<span class="type">twin_pixmap_t</span>  *dst,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_operand_t</span> *src,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span>   src_x,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span>   src_y,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_path_t</span>    *path,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_operator_t</span>    operator)</span>;</span><br><span class="line">                      </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_paint_path</span> <span class="params">(<span class="type">twin_pixmap_t</span>  *dst,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_argb32_t</span>  argb,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_path_t</span>    *path)</span>;</span><br><span class="line">                      </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_composite_stroke</span> <span class="params">(<span class="type">twin_pixmap_t</span>    *dst,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_operand_t</span>   *src,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span> src_x,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span> src_y,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_path_t</span>  *stroke,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_fixed_t</span> pen_width,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_operator_t</span>  operator)</span>;</span><br><span class="line">                      </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_paint_stroke</span> <span class="params">(<span class="type">twin_pixmap_t</span>    *dst,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_argb32_t</span>    argb,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_path_t</span>      *stroke,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_fixed_t</span>     pen_width)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Pattern"><a href="#Pattern" class="headerlink" title="Pattern"></a>Pattern</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span>   width;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span>   height;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span>   bytes_per_pixel; <span class="comment">/* 3:RGB, 4:RGBA */</span></span><br><span class="line">  <span class="type">char</span>          *comment;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span>  pixel_data[<span class="number">8</span> * <span class="number">8</span> * <span class="number">4</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_pixmap_t</span> * <span class="title function_">twin_make_pattern</span> <span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Pixmap"><a href="#Pixmap" class="headerlink" title="Pixmap"></a>Pixmap</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">twin_pixmap_t</span> * <span class="title function_">twin_pixmap_create</span> <span class="params">(<span class="type">twin_format_t</span>   format,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_coord_t</span>    width,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_coord_t</span>    height)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_pixmap_t</span> * <span class="title function_">twin_pixmap_create_const</span> <span class="params">(<span class="type">twin_format_t</span>     format,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_coord_t</span>      width,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_coord_t</span>      height,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_coord_t</span>      stride,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_pointer_t</span>    pixels)</span>;</span><br><span class="line">                        </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_destroy</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_show</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_screen_t</span> *screen,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_pixmap_t</span> *lower)</span>;</span><br><span class="line">                    </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_hide</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_pointer_t</span> <span class="title function_">twin_pixmap_pointer</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap, <span class="type">twin_coord_t</span> x, <span class="type">twin_coord_t</span> y)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_enable_update</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_disable_update</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_set_origin</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span> ox, <span class="type">twin_coord_t</span> oy)</span>;</span><br><span class="line">                          </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_offset</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap,   </span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span> offx, <span class="type">twin_coord_t</span> offy)</span>;</span><br><span class="line">                      </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_get_origin</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap,</span></span><br><span class="line"><span class="params">                          <span class="type">twin_coord_t</span> *ox, <span class="type">twin_coord_t</span> *oy)</span>;</span><br><span class="line">                          </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_origin_to_clip</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_clip</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_coord_t</span>  left,   <span class="type">twin_coord_t</span> top,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_coord_t</span>  right,  <span class="type">twin_coord_t</span> bottom)</span>;</span><br><span class="line">                    </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_set_clip</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap, <span class="type">twin_rect_t</span> clip)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_rect_t</span> <span class="title function_">twin_pixmap_get_clip</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_rect_t</span> <span class="title function_">twin_pixmap_save_clip</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_restore_clip</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap, <span class="type">twin_rect_t</span> rect)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_reset_clip</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_damage</span> <span class="params">(<span class="type">twin_pixmap_t</span>   *pixmap,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_coord_t</span>    left,   <span class="type">twin_coord_t</span> top,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_coord_t</span>    right,  <span class="type">twin_coord_t</span> bottom)</span>;</span><br><span class="line">                    </span><br><span class="line"><span class="type">static</span> <span class="type">twin_argb32_t</span> _twin_pixmap_fetch (<span class="type">twin_pixmap_t</span> *pixmap, <span class="type">twin_coord_t</span> x, <span class="type">twin_coord_t</span> y);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_bool_t</span> <span class="title function_">twin_pixmap_transparent</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap, <span class="type">twin_coord_t</span> x, <span class="type">twin_coord_t</span> y)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_pixmap_move</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap, <span class="type">twin_coord_t</span> x, <span class="type">twin_coord_t</span> y)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_bool_t</span> <span class="title function_">twin_pixmap_dispatch</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap, <span class="type">twin_event_t</span> *event)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Poly"><a href="#Poly" class="headerlink" title="Poly"></a>Poly</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">twin_edge</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">twin_edge</span>   *<span class="title">next</span>;</span></span><br><span class="line">    <span class="type">twin_sfixed_t</span>   top, bot;</span><br><span class="line">    <span class="type">twin_sfixed_t</span>   x;</span><br><span class="line">    <span class="type">twin_sfixed_t</span>   e;</span><br><span class="line">    <span class="type">twin_sfixed_t</span>   dx, dy;</span><br><span class="line">    <span class="type">twin_sfixed_t</span>   inc_x;</span><br><span class="line">    <span class="type">twin_sfixed_t</span>   step_x;</span><br><span class="line">    <span class="type">int</span>         winding;</span><br><span class="line">&#125; <span class="type">twin_edge_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> _edge_compare_y (<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _edge_step_by (<span class="type">twin_edge_t</span>  *edge, <span class="type">twin_sfixed_t</span> dy);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_sfixed_t</span> _twin_sfixed_grid_ceil (<span class="type">twin_sfixed_t</span> f);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> _twin_edge_build (<span class="type">twin_spoint_t</span> *vertices, <span class="type">int</span> nvertices, <span class="type">twin_edge_t</span> *edges, <span class="type">twin_sfixed_t</span> dx, <span class="type">twin_sfixed_t</span> dy, <span class="type">twin_sfixed_t</span> top_y);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _span_fill (<span class="type">twin_pixmap_t</span>   *pixmap,</span><br><span class="line">                  <span class="type">twin_sfixed_t</span>    y,</span><br><span class="line">                  <span class="type">twin_sfixed_t</span>    left,</span><br><span class="line">                  <span class="type">twin_sfixed_t</span>    right);</span><br><span class="line">                  </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_edge_fill (<span class="type">twin_pixmap_t</span> *pixmap, <span class="type">twin_edge_t</span> *edges, <span class="type">int</span> nedges);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_fill_path</span> <span class="params">(<span class="type">twin_pixmap_t</span> *pixmap, <span class="type">twin_path_t</span> *path,</span></span><br><span class="line"><span class="params">                <span class="type">twin_coord_t</span> dx, <span class="type">twin_coord_t</span> dy)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Primitive"><a href="#Primitive" class="headerlink" title="Primitive"></a>Primitive</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">twin_argb32_t</span> __inline <span class="title function_">in_over</span> <span class="params">(<span class="type">twin_argb32_t</span>  dst,</span></span><br><span class="line"><span class="params">                            <span class="type">twin_argb32_t</span>  src,</span></span><br><span class="line"><span class="params">                            <span class="type">twin_a8_t</span>  msk)</span>;</span><br><span class="line">                            </span><br><span class="line"><span class="type">static</span> <span class="type">twin_argb32_t</span> __inline <span class="title function_">in</span> <span class="params">(<span class="type">twin_argb32_t</span>   src, <span class="type">twin_a8_t</span>       msk)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_argb32_t</span> __inline <span class="title function_">over</span> <span class="params">(<span class="type">twin_argb32_t</span> dst, <span class="type">twin_argb32_t</span> src)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_argb32_t</span> __inline <span class="title function_">rgb16_to_argb32</span> <span class="params">(<span class="type">twin_rgb16_t</span> v)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_argb32_t</span> __inline <span class="title function_">a8_to_argb32</span> <span class="params">(<span class="type">twin_a8_t</span> v)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_rgb16_t</span> __inline <span class="title function_">argb32_to_rgb16</span> <span class="params">(<span class="type">twin_argb32_t</span> v)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_a8_t</span> __inline <span class="title function_">argb32_to_a8</span> <span class="params">(<span class="type">twin_argb32_t</span> v)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="built_in">vector</span> <span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">over_v</span> <span class="params">(<span class="built_in">vector</span> <span class="type">unsigned</span> <span class="type">char</span> dst,</span></span><br><span class="line"><span class="params">                                    <span class="built_in">vector</span> <span class="type">unsigned</span> <span class="type">char</span> src)</span>;</span><br><span class="line">                                    </span><br><span class="line"><span class="type">void</span> _twin_vec_argb32_over_argb32 (<span class="type">twin_pointer_t</span>   dst,</span><br><span class="line">                              twin_source_u    src,</span><br><span class="line">                              <span class="type">int</span>          width);</span><br><span class="line">                              </span><br><span class="line"><span class="type">void</span> _twin_vec_argb32_source_argb32 (<span class="type">twin_pointer_t</span> dst,</span><br><span class="line">                              twin_source_u  src,</span><br><span class="line">                              <span class="type">int</span>            width);</span><br></pre></td></tr></table></figure>

<h3 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> _twin_queue_insert (<span class="type">twin_queue_t</span>    **head,</span><br><span class="line">                    <span class="type">twin_queue_proc_t</span>   proc,</span><br><span class="line">                    <span class="type">twin_queue_t</span>    *new);</span><br><span class="line">                    </span><br><span class="line"><span class="type">void</span> _twin_queue_remove (<span class="type">twin_queue_t</span>    **head, <span class="type">twin_queue_t</span>    *old);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_queue_reorder (<span class="type">twin_queue_t</span>   **head,</span><br><span class="line">                    <span class="type">twin_queue_proc_t</span>   proc,</span><br><span class="line">                    <span class="type">twin_queue_t</span>   *elem);</span><br><span class="line">                    </span><br><span class="line"><span class="type">void</span> _twin_queue_delete (<span class="type">twin_queue_t</span>    **head,</span><br><span class="line">                    <span class="type">twin_queue_t</span>    *old);</span><br><span class="line">                    </span><br><span class="line"><span class="type">twin_queue_t</span> * _twin_queue_set_order (<span class="type">twin_queue_t</span> **head);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_queue_review_order (<span class="type">twin_queue_t</span>  *first);</span><br></pre></td></tr></table></figure>

<h3 id="Screen"><a href="#Screen" class="headerlink" title="Screen"></a>Screen</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">twin_screen_t</span> * <span class="title function_">twin_screen_create</span> <span class="params">(<span class="type">twin_coord_t</span>    width,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_coord_t</span>    height,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_put_begin_t</span>    put_begin,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_put_span_t</span> put_span,</span></span><br><span class="line"><span class="params">                    <span class="type">void</span>        *closure)</span>;</span><br><span class="line">                    </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_screen_destroy</span> <span class="params">(<span class="type">twin_screen_t</span> *screen)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_screen_register_damaged</span> <span class="params">(<span class="type">twin_screen_t</span> *screen,</span></span><br><span class="line"><span class="params">                    <span class="type">void</span> (*damaged) (<span class="type">void</span> *),</span></span><br><span class="line"><span class="params">                    <span class="type">void</span> *closure)</span>;</span><br><span class="line">                    </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_screen_enable_update</span> <span class="params">(<span class="type">twin_screen_t</span> *screen)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_screen_disable_update</span> <span class="params">(<span class="type">twin_screen_t</span> *screen)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_screen_damage</span> <span class="params">(<span class="type">twin_screen_t</span> *screen,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_coord_t</span> left, <span class="type">twin_coord_t</span> top,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_coord_t</span> right, <span class="type">twin_coord_t</span> bottom)</span>;</span><br><span class="line">                    </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_screen_resize</span> <span class="params">(<span class="type">twin_screen_t</span> *screen,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_coord_t</span> width, <span class="type">twin_coord_t</span> height)</span>;</span><br><span class="line">                    </span><br><span class="line"><span class="type">twin_bool_t</span> <span class="title function_">twin_screen_damaged</span> <span class="params">(<span class="type">twin_screen_t</span> *screen)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">twin_screen_span_pixmap</span><span class="params">(<span class="type">twin_screen_t</span> maybe_unused *screen,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_argb32_t</span> *span,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_pixmap_t</span> *p, <span class="type">twin_coord_t</span> y,</span></span><br><span class="line"><span class="params">                    <span class="type">twin_coord_t</span> left, <span class="type">twin_coord_t</span> right,</span></span><br><span class="line"><span class="params">                    twin_src_op op16, twin_src_op op32)</span>;</span><br><span class="line">                    </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_screen_update</span> <span class="params">(<span class="type">twin_screen_t</span> *screen)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_screen_set_active</span> <span class="params">(<span class="type">twin_screen_t</span> *screen, <span class="type">twin_pixmap_t</span> *pixmap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_pixmap_t</span> * <span class="title function_">twin_screen_get_active</span> <span class="params">(<span class="type">twin_screen_t</span> *screen)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_screen_set_background</span> <span class="params">(<span class="type">twin_screen_t</span> *screen, <span class="type">twin_pixmap_t</span> *pixmap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_pixmap_t</span> * <span class="title function_">twin_screen_get_background</span> <span class="params">(<span class="type">twin_screen_t</span> *screen)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">twin_screen_damage_cursor</span><span class="params">(<span class="type">twin_screen_t</span> *screen)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_screen_set_cursor</span> <span class="params">(<span class="type">twin_screen_t</span> *screen, <span class="type">twin_pixmap_t</span> *pixmap,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_fixed_t</span> hotspot_x, <span class="type">twin_fixed_t</span> hotspot_y)</span>;</span><br><span class="line">                      </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">twin_screen_update_cursor</span><span class="params">(<span class="type">twin_screen_t</span> *screen,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span> x, <span class="type">twin_coord_t</span> y)</span>;</span><br><span class="line">                      </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_adj_mouse_evt(<span class="type">twin_event_t</span> *event, <span class="type">twin_pixmap_t</span> *pixmap);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_bool_t</span> <span class="title function_">twin_screen_dispatch</span> <span class="params">(<span class="type">twin_screen_t</span> *screen, <span class="type">twin_event_t</span>  *event)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Spline"><a href="#Spline" class="headerlink" title="Spline"></a>Spline</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">twin_spline</span> &#123;</span></span><br><span class="line">    <span class="type">twin_spoint_t</span>    a, b, c, d;</span><br><span class="line">&#125; <span class="type">twin_spline_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _lerp_half (<span class="type">twin_spoint_t</span> *a, <span class="type">twin_spoint_t</span> *b, <span class="type">twin_spoint_t</span> *result);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _de_casteljau (<span class="type">twin_spline_t</span> *spline, <span class="type">twin_spline_t</span> *s1, <span class="type">twin_spline_t</span> *s2);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_dfixed_t</span> _twin_spline_error_squared (<span class="type">twin_spline_t</span> *spline);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_spline_decompose (<span class="type">twin_path_t</span> *path,</span><br><span class="line">                          <span class="type">twin_spline_t</span>   *spline,</span><br><span class="line">                          <span class="type">twin_dfixed_t</span>   tolerance_squared);</span><br><span class="line">                          </span><br><span class="line"><span class="type">void</span> _twin_path_scurve (<span class="type">twin_path_t</span>      *path,</span><br><span class="line">                  <span class="type">twin_sfixed_t</span>    x1, <span class="type">twin_sfixed_t</span> y1,</span><br><span class="line">                  <span class="type">twin_sfixed_t</span>    x2, <span class="type">twin_sfixed_t</span> y2,</span><br><span class="line">                  <span class="type">twin_sfixed_t</span>    x3, <span class="type">twin_sfixed_t</span> y3);</span><br><span class="line">                  </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_path_curve</span> <span class="params">(<span class="type">twin_path_t</span>    *path,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   x1, <span class="type">twin_fixed_t</span> y1,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   x2, <span class="type">twin_fixed_t</span> y2,</span></span><br><span class="line"><span class="params">                  <span class="type">twin_fixed_t</span>   x3, <span class="type">twin_fixed_t</span> y3)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Timeout"><a href="#Timeout" class="headerlink" title="Timeout"></a>Timeout</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">twin_order_t</span> _twin_timeout_order (<span class="type">twin_queue_t</span> *a, <span class="type">twin_queue_t</span> *b);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_queue_timeout (<span class="type">twin_timeout_t</span>   *timeout, <span class="type">twin_time_t</span> time);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_run_timeout (<span class="type">void</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_timeout_t</span> * <span class="title function_">twin_set_timeout</span> <span class="params">(<span class="type">twin_timeout_proc_t</span>   timeout_proc,</span></span><br><span class="line"><span class="params">                            <span class="type">twin_time_t</span>       delay,</span></span><br><span class="line"><span class="params">                            <span class="type">void</span>          *closure)</span>;</span><br><span class="line">                            </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_clear_timeout</span> <span class="params">(<span class="type">twin_timeout_t</span> *timeout)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_time_t</span> _twin_timeout_delay (<span class="type">void</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_time_t</span> <span class="title function_">twin_now</span> <span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Toplevel"><a href="#Toplevel" class="headerlink" title="Toplevel"></a>Toplevel</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">twin_dispatch_result_t</span> _twin_toplevel_dispatch (<span class="type">twin_widget_t</span> *widget, </span><br><span class="line">                                          <span class="type">twin_event_t</span> *event);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">twin_bool_t</span> _twin_toplevel_event (<span class="type">twin_window_t</span>   *window, </span><br><span class="line">                                    <span class="type">twin_event_t</span>    *event);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_toplevel_draw (<span class="type">twin_window_t</span>    *window);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_toplevel_destroy (<span class="type">twin_window_t</span> *window);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_toplevel_init (<span class="type">twin_toplevel_t</span>        *toplevel,</span><br><span class="line">                      <span class="type">twin_dispatch_proc_t</span>   dispatch,</span><br><span class="line">                      <span class="type">twin_window_t</span>      *window,</span><br><span class="line">                      <span class="type">const</span> <span class="type">char</span>         *name);</span><br><span class="line">                      </span><br><span class="line"><span class="type">twin_toplevel_t</span> * <span class="title function_">twin_toplevel_create</span> <span class="params">(<span class="type">twin_screen_t</span>     *screen,</span></span><br><span class="line"><span class="params">                                    <span class="type">twin_format_t</span>     format,</span></span><br><span class="line"><span class="params">                                    <span class="type">twin_window_style_t</span>   style,</span></span><br><span class="line"><span class="params">                                    <span class="type">twin_coord_t</span>      x,</span></span><br><span class="line"><span class="params">                                    <span class="type">twin_coord_t</span>      y,</span></span><br><span class="line"><span class="params">                                    <span class="type">twin_coord_t</span>      width,</span></span><br><span class="line"><span class="params">                                    <span class="type">twin_coord_t</span>      height,</span></span><br><span class="line"><span class="params">                                    <span class="type">const</span> <span class="type">char</span>        *name)</span>;</span><br><span class="line">                                    </span><br><span class="line"> <span class="type">static</span> <span class="type">twin_bool_t</span> _twin_toplevel_paint (<span class="type">void</span> *closure);</span><br><span class="line"> </span><br><span class="line"> <span class="type">void</span> _twin_toplevel_queue_paint (<span class="type">twin_widget_t</span> *widget);</span><br><span class="line"> </span><br><span class="line"> <span class="type">static</span> <span class="type">twin_bool_t</span> _twin_toplevel_layout (<span class="type">void</span> *closure);</span><br><span class="line"> </span><br><span class="line"> <span class="type">void</span> _twin_toplevel_queue_layout (<span class="type">twin_widget_t</span> *widget);</span><br><span class="line"> </span><br><span class="line"> <span class="type">void</span> <span class="title function_">twin_toplevel_show</span> <span class="params">(<span class="type">twin_toplevel_t</span> *toplevel)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Trig"><a href="#Trig" class="headerlink" title="Trig"></a>Trig</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint16_t</span> _twin_sin_table[<span class="number">1</span> &lt;&lt; TWIN_LOG2_SIN] = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_fixed_t</span> <span class="title function_">twin_sin</span> <span class="params">(<span class="type">twin_angle_t</span> a)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_fixed_t</span> <span class="title function_">twin_cos</span> <span class="params">(<span class="type">twin_angle_t</span> a)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_fixed_t</span> <span class="title function_">twin_tan</span> <span class="params">(<span class="type">twin_angle_t</span> a)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Widget"><a href="#Widget" class="headerlink" title="Widget"></a>Widget</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">twin_path_t</span> * _twin_path_shape (<span class="type">twin_shape_t</span>  shape,</span><br><span class="line">                                  <span class="type">twin_coord_t</span>  left,</span><br><span class="line">                                  <span class="type">twin_coord_t</span>  top,</span><br><span class="line">                                  <span class="type">twin_coord_t</span>  right,</span><br><span class="line">                                  <span class="type">twin_coord_t</span>  bottom,</span><br><span class="line">                                  <span class="type">twin_fixed_t</span>  radius);</span><br><span class="line">                                  </span><br><span class="line"><span class="type">void</span> _twin_widget_paint_shape (<span class="type">twin_widget_t</span> *widget,</span><br><span class="line">                          <span class="type">twin_shape_t</span>  shape,</span><br><span class="line">                          <span class="type">twin_coord_t</span>  left,</span><br><span class="line">                          <span class="type">twin_coord_t</span>  top,</span><br><span class="line">                          <span class="type">twin_coord_t</span>  right,</span><br><span class="line">                          <span class="type">twin_coord_t</span>  bottom,</span><br><span class="line">                          <span class="type">twin_fixed_t</span>  radius);</span><br><span class="line">                          </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_widget_paint (<span class="type">twin_widget_t</span> *widget);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_dispatch_result_t</span> _twin_widget_dispatch (<span class="type">twin_widget_t</span> *widget, </span><br><span class="line">                                        <span class="type">twin_event_t</span> *event);</span><br><span class="line">                                        </span><br><span class="line"><span class="type">void</span> _twin_widget_init (<span class="type">twin_widget_t</span>    *widget,</span><br><span class="line">                    <span class="type">twin_box_t</span>       *parent,</span><br><span class="line">                    <span class="type">twin_window_t</span>    *window,</span><br><span class="line">                    <span class="type">twin_widget_layout_t</span> preferred,</span><br><span class="line">                    <span class="type">twin_dispatch_proc_t</span> dispatch);</span><br><span class="line">                    </span><br><span class="line"><span class="type">void</span> _twin_widget_queue_paint (<span class="type">twin_widget_t</span>   *widget);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_widget_queue_layout (<span class="type">twin_widget_t</span>   *widget);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_bool_t</span> _twin_widget_contains (<span class="type">twin_widget_t</span>    *widget,</span><br><span class="line">                              <span class="type">twin_coord_t</span> x, <span class="type">twin_coord_t</span> y);</span><br><span class="line">                              </span><br><span class="line"><span class="type">void</span> _twin_widget_bevel (<span class="type">twin_widget_t</span>   *widget,</span><br><span class="line">                    <span class="type">twin_fixed_t</span>    b,</span><br><span class="line">                    <span class="type">twin_bool_t</span>     down);</span><br><span class="line">                    </span><br><span class="line"><span class="type">twin_widget_t</span> * <span class="title function_">twin_widget_create</span> <span class="params">(<span class="type">twin_box_t</span>      *parent,</span></span><br><span class="line"><span class="params">                                <span class="type">twin_argb32_t</span>   background,</span></span><br><span class="line"><span class="params">                                <span class="type">twin_coord_t</span>    width,</span></span><br><span class="line"><span class="params">                                <span class="type">twin_coord_t</span>    height,</span></span><br><span class="line"><span class="params">                                <span class="type">twin_stretch_t</span>  stretch_width,</span></span><br><span class="line"><span class="params">                                <span class="type">twin_stretch_t</span>  stretch_height)</span>;</span><br><span class="line">                                </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_widget_set</span> <span class="params">(<span class="type">twin_widget_t</span> *widget, <span class="type">twin_argb32_t</span> background)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Window"><a href="#Window" class="headerlink" title="Window"></a>Window</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">twin_window_t</span> * <span class="title function_">twin_window_create</span> <span class="params">(<span class="type">twin_screen_t</span>   *screen,</span></span><br><span class="line"><span class="params">                              <span class="type">twin_format_t</span>   format,</span></span><br><span class="line"><span class="params">                              <span class="type">twin_window_style_t</span> style,</span></span><br><span class="line"><span class="params">                              <span class="type">twin_coord_t</span>    x,</span></span><br><span class="line"><span class="params">                              <span class="type">twin_coord_t</span>    y,</span></span><br><span class="line"><span class="params">                              <span class="type">twin_coord_t</span>    width,</span></span><br><span class="line"><span class="params">                              <span class="type">twin_coord_t</span>    height)</span>;</span><br><span class="line">                              </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_window_destroy</span> <span class="params">(<span class="type">twin_window_t</span> *window)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_window_show</span> <span class="params">(<span class="type">twin_window_t</span> *window)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_window_hide</span> <span class="params">(<span class="type">twin_window_t</span> *window)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_window_configure</span> <span class="params">(<span class="type">twin_window_t</span>        *window,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_window_style_t</span>  style,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span>     x,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span>     y,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span>     width,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span>     height)</span>;</span><br><span class="line">                      </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_window_style_size</span> <span class="params">(<span class="type">twin_window_style_t</span> style,</span></span><br><span class="line"><span class="params">                        <span class="type">twin_rect_t</span>     *size)</span>;</span><br><span class="line">                        </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_window_set_name</span> <span class="params">(<span class="type">twin_window_t</span> *window, <span class="type">const</span> <span class="type">char</span>    *name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">twin_window_frame</span> <span class="params">(<span class="type">twin_window_t</span> *window)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_window_draw</span> <span class="params">(<span class="type">twin_window_t</span> *window)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_window_damage</span> <span class="params">(<span class="type">twin_window_t</span> *window,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span> left, <span class="type">twin_coord_t</span> top,</span></span><br><span class="line"><span class="params">                      <span class="type">twin_coord_t</span> right, <span class="type">twin_coord_t</span> bottom)</span>;</span><br><span class="line">                      </span><br><span class="line"><span class="type">static</span> <span class="type">twin_bool_t</span> _twin_window_repaint (<span class="type">void</span> *closure);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_window_queue_paint</span> <span class="params">(<span class="type">twin_window_t</span> *window)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">twin_bool_t</span> <span class="title function_">twin_window_dispatch</span> <span class="params">(<span class="type">twin_window_t</span> *window, <span class="type">twin_event_t</span> *event)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Work"><a href="#Work" class="headerlink" title="Work"></a>Work</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">twin_order_t</span> _twin_work_order (<span class="type">twin_queue_t</span> *a, <span class="type">twin_queue_t</span> *b);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_queue_work (<span class="type">twin_work_t</span>   *work);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_run_work (<span class="type">void</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">twin_work_t</span> * <span class="title function_">twin_set_work</span> <span class="params">(<span class="type">twin_work_proc_t</span> work_proc,</span></span><br><span class="line"><span class="params">                        <span class="type">int</span>           priority,</span></span><br><span class="line"><span class="params">                        <span class="type">void</span>          *closure)</span>;</span><br><span class="line">                        </span><br><span class="line"><span class="type">void</span> <span class="title function_">twin_clear_work</span> <span class="params">(<span class="type">twin_work_t</span> *work)</span>;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system</tag>
        <tag>vector</tag>
        <tag>gui</tag>
        <tag>twin</tag>
        <tag>window system</tag>
        <tag>svg</tag>
        <tag>api</tag>
      </tags>
  </entry>
  <entry>
    <title>以 Clock 应用为例追踪 TWIN 的运作流程</title>
    <url>/2020/evgui-twin-workflow-review/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2020/evgui-design-review/">硕士论文笔记系列</a>第六篇同时也是完结篇，原文写于2016年7月。</p>
<span id="more"></span>


<h2 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h2><p><img data-src="https://cdn.joouis.com/evgui-twin-workflow-review-1.png"></p>
<h2 id="APP-創建過程"><a href="#APP-創建過程" class="headerlink" title="APP 創建過程"></a>APP 創建過程</h2><ul>
<li>在<code>main()</code>函式中執行<code>twin_clock_start()</code>即完成創建過程，下面會介紹該函數的內部運作原理<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">twin_clock_start (tf-&gt;screen, <span class="string">&quot;Clock&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">240</span>, <span class="number">320</span>);</span><br></pre></td></tr></table></figure></li>
<li>在<code>twin_clock_start()</code>函式代碼：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">twin_clock_start</span> <span class="params">(<span class="type">twin_screen_t</span> *screen, <span class="type">const</span> <span class="type">char</span> *name, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> w, <span class="type">int</span> h)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">twin_toplevel_t</span> *toplevel = twin_toplevel_create (screen, TWIN_ARGB32,</span><br><span class="line">                                                      TwinWindowApplication,</span><br><span class="line">                                                      x, y, w, h, name);</span><br><span class="line">    <span class="type">twin_clock_t</span>    *clock = twin_clock_create (&amp;toplevel-&gt;box);</span><br><span class="line">    (<span class="type">void</span>) clock;</span><br><span class="line">    twin_toplevel_show (toplevel);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>這裏的<code>twin_toplevel_t</code>結構體中只包含了一個名爲<code>box</code>的結構體，其定義如下：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">twin_box</span> &#123;</span>                                                             </span><br><span class="line">    <span class="type">twin_widget_t</span>   widget;</span><br><span class="line">    <span class="type">twin_box_dir_t</span>  dir; </span><br><span class="line">    <span class="type">twin_widget_t</span>   *children;</span><br><span class="line">    <span class="type">twin_widget_t</span>   *button_down;</span><br><span class="line">    <span class="type">twin_widget_t</span>   *focus;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">twin_widget</span> &#123;</span></span><br><span class="line">    <span class="type">twin_window_t</span>       *window;</span><br><span class="line">    <span class="type">twin_widget_t</span>       *next;</span><br><span class="line">    <span class="type">twin_box_t</span>          *parent;</span><br><span class="line">    <span class="type">twin_dispatch_proc_t</span>    dispatch;</span><br><span class="line">    <span class="type">twin_rect_t</span>         extents;    <span class="comment">/* current geometry */</span></span><br><span class="line">    <span class="type">twin_widget_t</span>       *copy_geom;</span><br><span class="line">    <span class="type">twin_bool_t</span>         paint;</span><br><span class="line">    <span class="type">twin_bool_t</span>         layout;</span><br><span class="line">    <span class="type">twin_bool_t</span>         want_focus;</span><br><span class="line">    <span class="type">twin_argb32_t</span>       background;</span><br><span class="line">    <span class="type">twin_widget_layout_t</span>    preferred;</span><br><span class="line">    <span class="type">twin_shape_t</span>        shape;</span><br><span class="line">    <span class="type">twin_fixed_t</span>        radius;                                                </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> _<span class="title">twin_box_dir</span> &#123;</span></span><br><span class="line">    TwinBoxHorz, TwinBoxVert</span><br><span class="line">&#125; <span class="type">twin_box_dir_t</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>創建toplevel後呼叫<code>twin_clock_create()</code>函式創建<code>toplevel-&gt;box</code>的內容；</li>
<li>最後呼叫<code>twin_toplevel_show()</code>函式，後面會分析。</li>
</ul>
</li>
</ul>
<h3 id="創建-Toplevel"><a href="#創建-Toplevel" class="headerlink" title="創建 Toplevel"></a>創建 Toplevel</h3><ul>
<li>呼叫<code>twin_window_create()</code>創建一個<code>window</code>結構如下：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*  </span></span><br><span class="line"><span class="comment"> * twin_window_t   *window = twin_window_create (screen, format, style, x, y, width, height); </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">twin_window</span> &#123;</span></span><br><span class="line">    <span class="type">twin_screen_t</span>   *screen;</span><br><span class="line">    <span class="type">twin_pixmap_t</span>   *pixmap;</span><br><span class="line">    <span class="type">twin_window_style_t</span> style;</span><br><span class="line">    <span class="type">twin_rect_t</span>     client;</span><br><span class="line">    <span class="type">twin_rect_t</span>     damage;</span><br><span class="line">    <span class="type">twin_bool_t</span>     client_grab;</span><br><span class="line">    <span class="type">twin_bool_t</span>     want_focus;</span><br><span class="line">    <span class="type">twin_bool_t</span>     draw_queued;</span><br><span class="line">    <span class="type">void</span>        *client_data;</span><br><span class="line">    <span class="type">char</span>        *name;</span><br><span class="line">    </span><br><span class="line">    <span class="type">twin_draw_func_t</span>    draw;</span><br><span class="line">    <span class="type">twin_event_func_t</span>   event;</span><br><span class="line">    <span class="type">twin_destroy_func_t</span> destroy;</span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * A rectangular array of pixels</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">twin_pixmap</span> &#123;</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ¦* Screen showing these pixels</span></span><br><span class="line"><span class="comment">    ¦*/</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">twin_screen</span>     *<span class="title">screen</span>;</span></span><br><span class="line">    <span class="type">twin_count_t</span>        disable;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ¦* List of displayed pixmaps</span></span><br><span class="line"><span class="comment">    ¦*/</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">twin_pixmap</span>     *<span class="title">down</span>, *<span class="title">up</span>;</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ¦* Screen position</span></span><br><span class="line"><span class="comment">    ¦*/</span></span><br><span class="line">    <span class="type">twin_coord_t</span>        x, y;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ¦* Pixmap layout</span></span><br><span class="line"><span class="comment">    ¦*/</span></span><br><span class="line">    <span class="type">twin_format_t</span>       format;</span><br><span class="line">    <span class="type">twin_coord_t</span>        width;      <span class="comment">/* pixels */</span></span><br><span class="line">    <span class="type">twin_coord_t</span>        height;     <span class="comment">/* pixels */</span></span><br><span class="line">    <span class="type">twin_coord_t</span>        stride;     <span class="comment">/* bytes */</span></span><br><span class="line">    <span class="type">twin_matrix_t</span>       transform;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ¦* Clipping - a single rectangle in pixmap coordinates.</span></span><br><span class="line"><span class="comment">    ¦* Drawing is done clipped by this rectangle and relative</span></span><br><span class="line"><span class="comment">    ¦* to origin_x, origin_y</span></span><br><span class="line"><span class="comment">    ¦*/</span></span><br><span class="line">    <span class="type">twin_rect_t</span>         clip;</span><br><span class="line">    <span class="type">twin_coord_t</span>        origin_x;</span><br><span class="line">    <span class="type">twin_coord_t</span>        origin_y;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ¦* Pixels</span></span><br><span class="line"><span class="comment">    ¦*/</span></span><br><span class="line">    <span class="type">twin_pointer_t</span>      p;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ¦* When representing a window, this point</span></span><br><span class="line"><span class="comment">    ¦* refers to the window object</span></span><br><span class="line"><span class="comment">    ¦*/</span></span><br><span class="line">    <span class="type">twin_window_t</span>       *window;</span><br><span class="line">&#125; <span class="type">twin_pixmap_t</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>其中<code>client</code>的上下左右算的都是相對位置。</li>
<li><code>pixmap</code>則是呼叫<code>twin_pixmap_create()</code>函式創建，包含：<ul>
<li>幾何操作的矩陣初始化爲單位矩陣；</li>
<li>clip region設爲時鐘整個大小；</li>
<li>呼叫<code>malloc()</code>分配<code>window</code>對應大小的記憶體空間並初始化爲0；</li>
</ul>
</li>
<li>創建完<code>pixmap</code>後進行clip region的計算（使用<code>client</code>座標）、<code>pixmap</code>的重定位（以<code>window</code>的起始座位爲開始）等操作。</li>
</ul>
</li>
<li>創建了window，接着就是初始化toplevel。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* _twin_toplevel_init (toplevel, _twin_toplevel_dispatch, window, name); */</span></span><br><span class="line"><span class="type">void</span></span><br><span class="line">_twin_toplevel_init (<span class="type">twin_toplevel_t</span>        *toplevel,</span><br><span class="line">           <span class="type">twin_dispatch_proc_t</span>   dispatch,</span><br><span class="line">           <span class="type">twin_window_t</span>      *window,</span><br><span class="line">           <span class="type">const</span> <span class="type">char</span>         *name)</span><br><span class="line">&#123;</span><br><span class="line">    twin_window_set_name (window, name);                                                                                                                      </span><br><span class="line">    window-&gt;draw = _twin_toplevel_draw;</span><br><span class="line">    window-&gt;destroy = _twin_toplevel_destroy;</span><br><span class="line">    window-&gt;event = _twin_toplevel_event;</span><br><span class="line">    window-&gt;client_data = toplevel;</span><br><span class="line">    _twin_box_init (&amp;toplevel-&gt;box, <span class="number">0</span>, window, TwinBoxVert, dispatch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><code>twin_window_set_name()</code>函式除了設定名字外，還呼叫了一次<code>twin_window_draw()</code>函式將<code>window</code>的上方標題畫了出來（數據計算了出來）。</li>
<li>接下來給<code>window</code>指派對應的函式，分別是<code>draw</code> <code>destroy</code> <code>event</code>。</li>
<li><code>_twin_toplevel_draw()</code>函式主要做了以下幾件事：<ul>
<li>禁止<code>screen</code>更新；</li>
<li><code>event</code>種類設爲<code>TwinEventPaint</code>；</li>
<li>呼叫<code>dispatch</code>函式；</li>
<li>打開<code>screen</code>更新。</li>
</ul>
</li>
<li>此時的<code>dispatch</code>函式如下：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">(*toplevel-&gt;box.widget.dispatch) (&amp;toplevel-&gt;box.widget, &amp;event);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">twin_dispatch_result_t</span></span><br><span class="line">_twin_clock_dispatch (<span class="type">twin_widget_t</span> *widget, <span class="type">twin_event_t</span> *event)                                                                                             </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">twin_clock_t</span>    *clock = (<span class="type">twin_clock_t</span> *) widget;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_twin_widget_dispatch (widget, event) == TwinDispatchDone)</span><br><span class="line">    <span class="keyword">return</span> TwinDispatchDone;</span><br><span class="line">    <span class="keyword">switch</span> (event-&gt;kind) &#123;</span><br><span class="line">    <span class="keyword">case</span> TwinEventPaint:</span><br><span class="line">    _twin_clock_paint (clock);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">return</span> TwinDispatchContinue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>有兩個重點，分別是<code>_twin_widget_dispatch()</code>和<code>_twin_clock_paint()</code>。後者無需多言，來看一下前者：<ul>
<li>如果是<code>TwinEventQueryGeometry</code>，即目前<code>event</code>中還沒有幾何座標，則先不要佈局<code>widget</code>，檢查<code>widget</code>中是否存在備份的<code>widget</code>，若有則使用它進行派遣工作，然後直接返回派遣結束；</li>
<li>如果是<code>TwinEventConfigure</code>，則把<code>widget</code>的幾何座標設定爲<code>event</code>中的幾何座標然後返回派遣繼續值；</li>
<li>如果是<code>TwinEventPaint</code>，則呼叫<code>_twin_widget_paint()</code>（實際呼叫的是<code>_twin_widget_paint_shape()</code>，即畫出<code>widget</code>的形狀） 然後返回派遣繼續值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">twin_dispatch_result_t</span></span><br><span class="line">_twin_widget_dispatch (<span class="type">twin_widget_t</span> *widget, <span class="type">twin_event_t</span> *event)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">switch</span> (event-&gt;kind) &#123;</span><br><span class="line">    <span class="keyword">case</span> TwinEventQueryGeometry:</span><br><span class="line">      widget-&gt;layout = TWIN_FALSE;</span><br><span class="line">      <span class="keyword">if</span> (widget-&gt;copy_geom)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="type">twin_widget_t</span>   *copy = widget-&gt;copy_geom;</span><br><span class="line">          <span class="keyword">if</span> (copy-&gt;layout)</span><br><span class="line">          	(*copy-&gt;dispatch) (copy, event);</span><br><span class="line">          widget-&gt;preferred = copy-&gt;preferred;</span><br><span class="line">          <span class="keyword">return</span> TwinDispatchDone;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> TwinEventConfigure:</span><br><span class="line">      widget-&gt;extents = event-&gt;u.configure.extents;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> TwinEventPaint:</span><br><span class="line">      _twin_widget_paint (widget);</span><br><span class="line">      widget-&gt;paint = TWIN_FALSE;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> TwinDispatchContinue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><code>_twin_toplevel_event()</code>會呼叫一次派遣函式，並會判斷是否完成派遣工作，若完成則返回1。</li>
<li>最後<code>_twin_box_init()</code>中會呼叫<code>_twin_widget_init()</code>。</li>
</ul>
<h3 id="創建-Clock"><a href="#創建-Clock" class="headerlink" title="創建 Clock"></a>創建 Clock</h3><ul>
<li>實際呼叫的是<code>_twin_clock_init()</code>函式：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span></span><br><span class="line">_twin_clock_init (<span class="type">twin_clock_t</span>      *clock, </span><br><span class="line">         <span class="type">twin_box_t</span>        *parent,</span><br><span class="line">         <span class="type">twin_dispatch_proc_t</span>  dispatch)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">twin_widget_layout_t</span>   preferred = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span> &#125;;</span><br><span class="line">    <span class="comment">// preferred: width, height, stretch_width, stretch_height</span></span><br><span class="line">    _twin_widget_init (&amp;clock-&gt;widget, parent, <span class="number">0</span>, preferred, dispatch);                                                                                       </span><br><span class="line">    clock-&gt;timeout = twin_set_timeout (_twin_clock_timeout,</span><br><span class="line">                     _twin_clock_interval(),</span><br><span class="line">                     clock);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">twin_widget_layout</span> &#123;</span></span><br><span class="line">    <span class="type">twin_coord_t</span>        width;</span><br><span class="line">    <span class="type">twin_coord_t</span>        height;</span><br><span class="line">    <span class="type">twin_stretch_t</span>      stretch_width;</span><br><span class="line">    <span class="type">twin_stretch_t</span>      stretch_height;</span><br><span class="line">&#125; <span class="type">twin_widget_layout_t</span>;</span><br></pre></td></tr></table></figure></li>
<li>參數中：<ul>
<li><code>clock</code>指針指向一塊<code>twin_clock_dispatch</code>大小的記憶體位置</li>
<li><code>parent</code>指針即<code>&amp;toplevel→box</code></li>
<li><code>dispatch</code>即<code>_twin_clock_dispatch</code>，之前有介紹其功能</li>
</ul>
</li>
<li><code>twin_clock_t</code>結構體中有兩個成員<code>widget</code>和<code>*timeout</code>，前者呼叫<code>_twin_widget_init()</code>進行了初始化；而後者則是呼叫<code>twin_set_timeout()</code>，具體代碼如下：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">twin_timeout_t</span> *</span><br><span class="line"><span class="title function_">twin_set_timeout</span> <span class="params">(<span class="type">twin_timeout_proc_t</span>   timeout_proc,</span></span><br><span class="line"><span class="params">        <span class="type">twin_time_t</span>       delay,</span></span><br><span class="line"><span class="params">        <span class="type">void</span>          *closure)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">twin_timeout_t</span>  *timeout = <span class="built_in">malloc</span> (<span class="keyword">sizeof</span> (<span class="type">twin_timeout_t</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!timeout)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!start)</span><br><span class="line">    start = twin_now (); </span><br><span class="line">    timeout-&gt;delay = delay;</span><br><span class="line">    timeout-&gt;proc = timeout_proc;</span><br><span class="line">    timeout-&gt;closure = closure;</span><br><span class="line">    _twin_queue_timeout (timeout, twin_now() + delay);</span><br><span class="line">    <span class="keyword">return</span> timeout;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>參數<code>timeout_proc</code>爲：<ul>
<li><code>_twin_widget_queue_paint()</code>函式會接着呼叫<code>_twin_toplevel_queue_paint()</code> → <code>twin_set_work()</code> → <code>_twin_queue_work()</code> → <code>_twin_queue_insert()</code>，即把<code>widget</code>畫好後把畫<code>toplevel</code>的任務按照優先權插入到工作隊列中；</li>
<li>最後返回一個<code>twin_time_t(int32_t)</code>的時間間隔，設定爲一秒（1000 ms），<code>_twin_clock_interval()</code>函式：<ul>
<li>原版實作是獲取Linux當前的微秒時間<code>tv_usec</code>，用<code>1000 - (tv_usec / 1000)</code>做倒數；</li>
<li>我們的版本使用STM32F429自帶的Systick計時器進行計時，每1ms發生一次中斷，設定變數<code>tv_msec</code>加一，然後一樣的 <code>1000 - tv_msec</code>；<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">twin_time_t</span> _twin_clock_timeout (<span class="type">twin_time_t</span> maybe_unused now, <span class="type">void</span> *closure)   &#123;</span><br><span class="line">    <span class="type">twin_clock_t</span>   *clock = closure;</span><br><span class="line">    _twin_widget_queue_paint (&amp;clock-&gt;widget);</span><br><span class="line">    <span class="keyword">return</span> _twin_clock_interval ();                                                   &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
<li>參數<code>delay</code>即<code>_twin_clock_interval()</code>函式返回值；</li>
<li><code>start</code>爲全局變數，單位爲毫秒，只會在此函數中初始化，無用；</li>
<li><code>_twin_queue_timeout()</code>函式的功能是更新<code>clock→timeout</code>的時間，其中的<code>head</code>指針是一個全局變數，這裏會有序地插入到<code>head</code>指向的超時隊列中（相當於做了一個排序動作）。後面在<code>dispatch</code>時會呼叫<code>_twin_run_timeout()</code>函式來對超時隊列進行操作。<ul>
<li>插入是遍歷整個隊列，依次比較需要插入的超時成員與隊列中的超時成員的時間順序；</li>
<li>在遍歷的迴圈中，<code>proc</code>指針指向的是<code>_twin_timeout_order()</code>函式，比較兩個任務的時間順序，返回<code>TWIN_BEFORE(-1)</code>、<code>TWIN_AFTER(1)</code>或<code>TWIN_AT(0)</code>；<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span> _twin_queue_timeout (<span class="type">twin_timeout_t</span>   *timeout, <span class="type">twin_time_t</span> time)</span><br><span class="line">&#123;</span><br><span class="line">    timeout-&gt;time = time;</span><br><span class="line">    _twin_queue_remove (&amp;head, &amp;timeout-&gt;<span class="built_in">queue</span>);</span><br><span class="line">    _twin_queue_insert (&amp;head, _twin_timeout_order, &amp;timeout-&gt;<span class="built_in">queue</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> _twin_queue_insert (<span class="type">twin_queue_t</span>    **head, <span class="type">twin_queue_proc_t</span>   proc, <span class="type">twin_queue_t</span>    *new)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">twin_queue_t</span> **prev, *q;</span><br><span class="line">    <span class="keyword">for</span> (prev = head; (q = *prev); prev = &amp;q-&gt;next)</span><br><span class="line">    <span class="keyword">if</span> ((*proc) (new, q) == TWIN_AFTER)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    new-&gt;next = *prev;</span><br><span class="line">    new-&gt;order = <span class="number">0</span>;</span><br><span class="line">    new-&gt;walking = TWIN_FALSE;</span><br><span class="line">    new-&gt;deleted = TWIN_FALSE;</span><br><span class="line">    *prev = new;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
<li>總結創建<code>clock</code>做了以下工作：<ul>
<li>初始化<code>clock→widget</code>；</li>
<li>初始化<code>clock→timeout</code>，並將其插入到超時隊列中。</li>
</ul>
</li>
</ul>
<h3 id="畫出-Toplevel"><a href="#畫出-Toplevel" class="headerlink" title="畫出 Toplevel"></a>畫出 Toplevel</h3><ul>
<li>首先呼叫了<code>_twin_toplevel_layout()</code>函式，將<code>event</code>分別設置爲<code>TwinEventQueryGeometry</code>和<code>TwinEventConfigure</code>,然後呼叫<code>*toplevel-&gt;box.widget.dispatch</code>（此處爲之前有介紹的<code>_twin_clock_dispatch</code>函式）進行配置；</li>
<li>接着執行<code>_twin_toplevel_paint()</code>函式，實際就是將<code>event</code>設爲<code>TwinEventPaint</code>然後呼叫<code>_twin_clock_paint()</code>函式畫圖；</li>
<li>最後執行<code>twin_window_show()</code>函式，判斷此<code>toplevel→box.widget.window</code>是否已經顯示（在上則顯示在不則顯示），若沒有則呼叫<code>twin_pixmap_show()</code>函式進行重新設定。</li>
</ul>
<h2 id="調度執行過程"><a href="#調度執行過程" class="headerlink" title="調度執行過程"></a>調度執行過程</h2><ul>
<li><code>twin_dispatch()</code>函式中只有一個包含三個函式的迴圈：<ul>
<li><code>_twin_run_timeout()</code></li>
<li><code>_time_run_work()</code></li>
<li><code>_twin_run_file()</code>：用於監測外部滑鼠等活動，尚未實作；</li>
</ul>
</li>
</ul>
<h3 id="twin-run-timeout"><a href="#twin-run-timeout" class="headerlink" title="_twin_run_timeout()"></a>_twin_run_timeout()</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> _twin_run_timeout (<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">twin_time_t</span> now = twin_now ();                                                                                                                            </span><br><span class="line">    <span class="type">twin_timeout_t</span>   *timeout;</span><br><span class="line">    <span class="type">twin_timeout_t</span>   *first;</span><br><span class="line">    <span class="type">twin_time_t</span> delay;</span><br><span class="line"></span><br><span class="line">    first = (<span class="type">twin_timeout_t</span> *) _twin_queue_set_order (&amp;head);</span><br><span class="line">    <span class="keyword">for</span> (timeout = first; </span><br><span class="line">     timeout &amp;&amp; twin_time_compare (now, &gt;=, timeout-&gt;time);</span><br><span class="line">     timeout = (<span class="type">twin_timeout_t</span> *) timeout-&gt;<span class="built_in">queue</span>.order)</span><br><span class="line">    &#123;</span><br><span class="line">    delay = (*timeout-&gt;proc) (now, timeout-&gt;closure);</span><br><span class="line">    <span class="keyword">if</span> (delay &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        timeout-&gt;time = twin_now() + delay;</span><br><span class="line">        _twin_queue_reorder (&amp;head,</span><br><span class="line">                 _twin_timeout_order, &amp;timeout-&gt;<span class="built_in">queue</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        _twin_queue_delete (&amp;head, &amp;timeout-&gt;<span class="built_in">queue</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    _twin_queue_review_order (&amp;first-&gt;<span class="built_in">queue</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>首先呼叫<code>_twin_queue_set_order()</code>函式將整個隊列的walking狀態置爲TRUE。這裏有必要詳細介紹一下twin使用的鏈表結構：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">twin_queue</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">twin_queue</span>  *<span class="title">next</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">twin_queue</span>  *<span class="title">order</span>;</span></span><br><span class="line">    <span class="type">twin_bool_t</span>     walking;</span><br><span class="line">    <span class="type">twin_bool_t</span>     deleted;</span><br><span class="line">&#125; <span class="type">twin_queue_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">twin_timeout</span> &#123;</span></span><br><span class="line">    <span class="type">twin_queue_t</span>    <span class="built_in">queue</span>;</span><br><span class="line">    <span class="type">twin_time_t</span>     time;</span><br><span class="line">    <span class="type">twin_time_t</span>     delay;</span><br><span class="line">    <span class="type">twin_timeout_proc_t</span> proc;</span><br><span class="line">    <span class="type">void</span>        *closure;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">twin_work</span> &#123;</span>                                                                                                                                           </span><br><span class="line">    <span class="type">twin_queue_t</span>    <span class="built_in">queue</span>;</span><br><span class="line">    <span class="type">int</span>         priority;</span><br><span class="line">    <span class="type">twin_work_proc_t</span>    proc;</span><br><span class="line">    <span class="type">void</span>        *closure;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<ul>
<li>這裏隊列的實作和Linux kernel中雙循環鏈表的實作很類似。首先定義一個只包含前後指針的結構體<code>_twin_queue</code>，然後內嵌到一個含有數據資源的結構體<code>_twin_timeout</code>中。這樣的將指針從具體的數據結構中提取出來的做法，構成了一種通用的雙向鏈表實現。其優點是未來只需要編寫通用鏈表函式，即可構造和操作不同對象的鏈表，而無需爲每類對象的每種列表編寫專用函式，實現了代碼的重用。</li>
<li>目前用到了兩個隊列（第三個<code>_twin_file</code>暫時未使用），分別是<code>_twin_timeout</code>超時隊列和<code>_twin_work</code>工作隊列，均嵌套了<code>_twin_queue</code>結構。<ul>
<li>對隊列的各項操作，例如刪除、移除等均相同；</li>
<li>而像插入、重新排序因爲隊列的性質不同，排序的標準也不同（超時隊列會使用時間排序，而工作隊列會使用優先級），這樣就引入一個額外的參數——隊列的程式指針（<code>_twin_timeout_order</code>和<code>_twin_work_order</code>）。</li>
</ul>
</li>
<li>相比Linux kernel中爲了訪問到宿主結構體的巨集定義<code>offset</code> <code>typeof</code> <code>containerof</code>，這裏要簡單很多。在宿主結構體<code>_twin_timeout</code>的第一項成員即包含節點指針的<code>twin_queue_t</code>結構體， <code>queue</code>的起始地址即<code>timeout</code>的起始地址。因此在<code>_twin_queue_set_order()</code>函式返回<code>head</code>這個<code>queue</code>的結構體地址後，強行轉換爲<code>twin_timeout_t</code>類型就可以得到<code>head</code>的宿主結構體了。</li>
<li>這裏也就是<code>clock</code>的<code>timeout</code>指向<code>head</code>，因此<code>first</code>得到了<code>clock</code>的<code>timeout</code>結構體地址。</li>
</ul>
</li>
<li>後面這個迴圈的執行流程爲判斷超時隊列中成員的時間標籤，如果已經是過去式，則重新執行成員自帶的程式（這裏是呼叫<code>_twin_clock_timeout</code>，會重畫<code>clock</code>的<code>toplevel</code>並加入到超時隊列中）。執行完畢後檢查是否還未到執行時間，若是則更新該成員的時間並重新對隊列進行排序，否則從隊列中刪除該成員。這樣做的目的就是不斷找出時間戳爲過去的成員，執行他們的任務並更新他們的時間。</li>
</ul>
<h3 id="twin-run-work"><a href="#twin-run-work" class="headerlink" title="_twin_run_work()"></a>_twin_run_work()</h3><ul>
<li>介紹過了超時隊列，工作隊列的機制也是類似的。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> _twin_run_work (<span class="type">void</span>)          </span><br><span class="line">&#123;   </span><br><span class="line">    <span class="type">twin_work_t</span> *work;         </span><br><span class="line">    <span class="type">twin_work_t</span> *first;        </span><br><span class="line">    </span><br><span class="line">    first = (<span class="type">twin_work_t</span> *) _twin_queue_set_order (&amp;head);</span><br><span class="line">    <span class="keyword">for</span> (work = first; work; work = (<span class="type">twin_work_t</span> *) work-&gt;<span class="built_in">queue</span>.order)</span><br><span class="line">    <span class="keyword">if</span> (!(*work-&gt;proc) (work-&gt;closure))</span><br><span class="line">        _twin_queue_delete (&amp;head, &amp;work-&gt;<span class="built_in">queue</span>);</span><br><span class="line">    _twin_queue_review_order (&amp;first-&gt;<span class="built_in">queue</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>拿到工作隊列的第一個宿主成員後，開始遍歷整個列表，依工作優先級次執行他們的任務。</li>
<li>工作列表中實際上就兩個工作：<ul>
<li>第一個是<code>_twin_toplevel_paint</code>，用來計算出新的<code>toplevel</code>圖像</li>
<li>第二個是<code>_twin_fbdev_work</code>，如果用的X Window則是<code>_twin_x11_work</code>，用來呼叫底層接口來實際更新熒幕畫面</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system</tag>
        <tag>vector</tag>
        <tag>gui</tag>
        <tag>twin</tag>
        <tag>window system</tag>
        <tag>svg</tag>
        <tag>workflow</tag>
        <tag>uml</tag>
        <tag>scheduler</tag>
      </tags>
  </entry>
  <entry>
    <title>XML Parser for Libsvgtiny</title>
    <url>/2020/evgui-xml-parser/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2020/evgui-design-review/">硕士论文笔记系列</a>第三篇，原文写于 2016 年五月。</p>
<span id="more"></span>



<h2 id="Libxml2"><a href="#Libxml2" class="headerlink" title="Libxml2"></a>Libxml2</h2><h3 id="Libxml2資料結構"><a href="#Libxml2資料結構" class="headerlink" title="Libxml2資料結構"></a>Libxml2資料結構</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * xmlNode:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * A node in an XML tree.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> <span class="title">xmlNode</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> xmlNode *xmlNodePtr;                                                                                                                      </span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> &#123;</span></span><br><span class="line">    <span class="type">void</span>           *_private;	<span class="comment">/* application data */</span></span><br><span class="line">    xmlElementType   type;	<span class="comment">/* type number, must be second ! */</span></span><br><span class="line">    <span class="type">const</span> xmlChar   *name;      <span class="comment">/* the name of the node, or the entity */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> *<span class="title">children</span>;</span>  <span class="comment">/* parent-&gt;childs link */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> *<span class="title">last</span>;</span>	<span class="comment">/* last child link */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> *<span class="title">parent</span>;</span>	<span class="comment">/* child-&gt;parent link */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> *<span class="title">next</span>;</span>	<span class="comment">/* next sibling link  */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> *<span class="title">prev</span>;</span>	<span class="comment">/* previous sibling link  */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlDoc</span>  *<span class="title">doc</span>;</span>	<span class="comment">/* the containing document */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* End of common part */</span></span><br><span class="line">    xmlNs           *ns;	<span class="comment">/* pointer to the associated namespace */</span></span><br><span class="line">    xmlChar         *content;	<span class="comment">/* the content */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlAttr</span> *<span class="title">properties</span>;</span><span class="comment">/* properties list */</span></span><br><span class="line">    xmlNs           *nsDef;	<span class="comment">/* namespace definitions on this node */</span></span><br><span class="line">    <span class="type">void</span>            *psvi;	<span class="comment">/* for type/PSVI informations */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span>   line;	<span class="comment">/* line number */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span>   extra;	<span class="comment">/* extra data for XPath/XSLT */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * xmlDoc:</span></span><br><span class="line"><span class="comment"> *                                                                                                                                                </span></span><br><span class="line"><span class="comment"> * An XML document.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">xmlDoc</span> <span class="title">xmlDoc</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> xmlDoc *xmlDocPtr;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">xmlDoc</span> &#123;</span></span><br><span class="line">    <span class="type">void</span>           *_private;	<span class="comment">/* application data */</span></span><br><span class="line">    xmlElementType  type;	<span class="comment">/* XML_DOCUMENT_NODE, must be second ! */</span></span><br><span class="line">    <span class="type">char</span>           *name;	<span class="comment">/* name/filename/URI of the document */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> *<span class="title">children</span>;</span>	<span class="comment">/* the document tree */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> *<span class="title">last</span>;</span>	<span class="comment">/* last child link */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> *<span class="title">parent</span>;</span>	<span class="comment">/* child-&gt;parent link */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> *<span class="title">next</span>;</span>	<span class="comment">/* next sibling link  */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span> *<span class="title">prev</span>;</span>	<span class="comment">/* previous sibling link  */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlDoc</span>  *<span class="title">doc</span>;</span>	<span class="comment">/* autoreference to itself */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* End of common part */</span></span><br><span class="line">    <span class="type">int</span> compression;		<span class="comment">/* level of zlib compression */</span></span><br><span class="line">    <span class="type">int</span> standalone;		<span class="comment">/* standalone document (no external refs)</span></span><br><span class="line"><span class="comment">                		¦ 1 if standalone=&quot;yes&quot;</span></span><br><span class="line"><span class="comment">                		¦ 0 if standalone=&quot;no&quot;</span></span><br><span class="line"><span class="comment">                		¦ -1 if there is no XML declaration</span></span><br><span class="line"><span class="comment">                		¦ -2 if there is an XML declaration, but no</span></span><br><span class="line"><span class="comment">                    			standalone attribute was specified */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlDtd</span>  *<span class="title">intSubset</span>;</span> <span class="comment">/* the document internal subset */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlDtd</span>  *<span class="title">extSubset</span>;</span> <span class="comment">/* the document external subset */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNs</span>   *<span class="title">oldNs</span>;</span>	<span class="comment">/* Global namespace, the old way */</span></span><br><span class="line">    <span class="type">const</span> xmlChar  *version;	<span class="comment">/* the XML version string */</span></span><br><span class="line">    <span class="type">const</span> xmlChar  *encoding;	<span class="comment">/* external initial encoding, if any */</span></span><br><span class="line">    <span class="type">void</span>           *ids;	<span class="comment">/* Hash table for ID attributes if any */</span></span><br><span class="line">    <span class="type">void</span>           *refs;	<span class="comment">/* Hash table for IDREFs attributes if any */</span></span><br><span class="line">    <span class="type">const</span> xmlChar  *URL;	<span class="comment">/* The URI for that document */</span></span><br><span class="line">    <span class="type">int</span>             charset;	<span class="comment">/* encoding of the in-memory contentactually an xmlCharEncoding */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlDict</span> *<span class="title">dict</span>;</span>	<span class="comment">/* dict used to allocate names or NULL */</span></span><br><span class="line">    <span class="type">void</span>           *psvi;	<span class="comment">/* for type/PSVI informations */</span></span><br><span class="line">    <span class="type">int</span>             parseFlags;	<span class="comment">/* set of xmlParserOption used to parse the document */</span></span><br><span class="line">    <span class="type">int</span>             properties; <span class="comment">/* set of xmlDocProperties for this document set at the end of parsing */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * xmlAttribute:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * An Attribute declaration in a DTD.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">xmlAttribute</span> <span class="title">xmlAttribute</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> xmlAttribute *xmlAttributePtr;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">xmlAttribute</span> &#123;</span></span><br><span class="line">    <span class="type">void</span>		*_private;	<span class="comment">/* application data */</span></span><br><span class="line">    xmlElementType	type;	<span class="comment">/* XML_ATTRIBUTE_DECL, must be second ! */</span></span><br><span class="line">    <span class="type">const</span> xmlChar	*name;	<span class="comment">/* Attribute name */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span>	*<span class="title">children</span>;</span>	<span class="comment">/* NULL */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span>	*<span class="title">last</span>;</span>	<span class="comment">/* NULL */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlDtd</span>	*<span class="title">parent</span>;</span>	<span class="comment">/* -&gt; DTD */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span>	*<span class="title">next</span>;</span>	<span class="comment">/* next sibling link  */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlNode</span>	*<span class="title">prev</span>;</span>	<span class="comment">/* previous sibling link  */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlDoc</span>	*<span class="title">doc</span>;</span>	<span class="comment">/* the containing document */</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">xmlAttribute</span>	*<span class="title">nexth</span>;</span>	<span class="comment">/* next in hash table */</span></span><br><span class="line">    xmlAttributeType		atype;	<span class="comment">/* The attribute type */</span></span><br><span class="line">    xmlAttributeDefault		def;	<span class="comment">/* the default */</span></span><br><span class="line">    <span class="type">const</span> xmlChar		*defaultValue;	<span class="comment">/* or the default value */</span></span><br><span class="line">    xmlEnumerationPtr		tree;	<span class="comment">/* or the enumeration tree if any */</span></span><br><span class="line">    <span class="type">const</span> xmlChar		*prefix;	<span class="comment">/* the namespace prefix if any */</span></span><br><span class="line">    <span class="type">const</span> xmlChar		*elem;	<span class="comment">/* Element holding the attribute */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="Libxml2構建API"><a href="#Libxml2構建API" class="headerlink" title="Libxml2構建API"></a>Libxml2構建API</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dom_xml_parser *<span class="title function_">dom_xml_parser_create</span><span class="params">(<span class="type">void</span> *dontCare1, <span class="type">void</span> *dontCare2, MesgFuncPtr mesgFunc, <span class="type">void</span> *dontCare3, dom_document **outDocument)</span>;</span><br></pre></td></tr></table></figure>

<p>呼叫<code>xmlInitParser()</code>初始化parser，然後使用<code>calloc</code>定義了<code>dom_document</code>和<code>dom_xml_parser</code>的指針各一個。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dom_xml_error <span class="title function_">dom_xml_parser_parse_chunk</span><span class="params">(dom_xml_parser *parser, <span class="type">const</span> <span class="type">uint8_t</span> *data, <span class="type">size_t</span> len)</span>;</span><br></pre></td></tr></table></figure>

<p>呼叫<code>xmlReadMemory()</code>函式解析。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dom_exception <span class="title function_">dom_document_get_document_element</span><span class="params">(dom_document *document, dom_element **outNode)</span>;</span><br></pre></td></tr></table></figure>

<p>用來尋找根<code>&lt;svg&gt;</code>，實作直接呼叫<code>xmlDocGetRootElement()</code>函式得到<code>document→node</code>，相當於默認是SVG檔案。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dom_exception <span class="title function_">dom_node_get_node_name</span><span class="params">(dom_node *node, dom_string **outString)</span>;</span><br></pre></td></tr></table></figure>

<p>自幹一個<code>dom_string_create_interned()</code>函式：</p>
<ul>
<li>如果<code>svg→node→ns</code>和<code>svg→node→ns→prefix</code>存在，呼叫<code>asprintf(&amp;qname, &quot;%s:%s&quot;, n-&gt;ns-&gt;prefix, n-&gt;name)</code>先把字串寫進<code>qname</code>，然後再通過自幹的函式把<code>qname</code>給<code>outString</code>；</li>
<li>若不存在就直接呼叫自幹函式把<code>svg→node→name</code>的值給<code>outString</code>。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dom_exception <span class="title function_">dom_document_get_element_by_id</span><span class="params">(dom_node *node, dom_string *<span class="built_in">string</span>, dom_element **outNode)</span>;</span><br></pre></td></tr></table></figure>

<p>被<code>svgtiny_gradient.c</code>使用，先呼叫<code>xmlHasProp()</code>函式檢查<code>document→node</code>是否存在<code>id</code>這個屬性：</p>
<ul>
<li>若<code>id</code>屬性存在则檢查裏面是否存在需要的ID字串，把<code>gradient</code>的指標指向這個document；</li>
<li>內部還實作了一個<code>getElementById()</code>函式，供這個API調用，也是類似呼叫<code>xmlHasProp()</code>和做<code>strcasecmp()</code>。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dom_exception <span class="title function_">dom_element_get_attribute</span><span class="params">(dom_node *node, dom_string *<span class="built_in">string</span>, dom_string **outAttribute)</span>;</span><br></pre></td></tr></table></figure>

<p>呼叫<code>xmlHasProp()</code>得到指定的屬性，例如讀<code>svg</code>的<code>d</code>屬性，也就是path。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dom_exception <span class="title function_">dom_element_get_elements_by_tag_name</span><span class="params">(dom_element *element, dom_string *<span class="built_in">string</span>, dom_nodelist **outNodeList)</span>;</span><br></pre></td></tr></table></figure>

<p>被<code>svgtiny_gradient.c</code>使用。遍歷<code>element→node→children</code>鏈表，只要節點的名字和tag名相同，就把其加入<code>nodeList</code>裏。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dom_exception <span class="title function_">dom_node_get_node_type</span><span class="params">(dom_node *node, dom_node_type *outType)</span>;</span><br></pre></td></tr></table></figure>

<p>需要注意node type的種類要滿足。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dom_xml_error <span class="title function_">dom_xml_parser_completed</span><span class="params">(dom_xml_parser *parser)</span>;</span><br><span class="line">dom_xml_error <span class="title function_">dom_xml_parser_destroy</span><span class="params">(dom_xml_parser *parser)</span>;</span><br><span class="line">dom_exception <span class="title function_">dom_nodelist_get_length</span><span class="params">(dom_nodelist *nodeList, <span class="type">uint32_t</span> *outLen)</span>;</span><br><span class="line">dom_exception <span class="title function_">dom_nodelist_item</span><span class="params">(dom_nodelist *nodeList, <span class="type">uint32_t</span> index, dom_node **outItemp)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">dom_node_unref</span><span class="params">(dom_node *node)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">dom_nodelist_unref</span><span class="params">(dom_nodelist *nodeList)</span>;</span><br><span class="line">dom_exception <span class="title function_">dom_node_get_first_child</span><span class="params">(dom_element *element, dom_element **outChild)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">dom_string_caseless_isequal</span><span class="params">(dom_string *a, dom_string *b)</span>;</span><br><span class="line">dom_exception <span class="title function_">dom_node_get_next_sibling</span><span class="params">(dom_element *element, dom_element **outChild)</span>;</span><br><span class="line">dom_exception <span class="title function_">dom_text_get_whole_text</span><span class="params">(dom_element *element, dom_string **outString)</span>;</span><br><span class="line">lwc_error <span class="title function_">lwc_intern_string</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *data, <span class="type">size_t</span> len, lwc_string **outString)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">dom_string_caseless_lwc_isequal</span><span class="params">(dom_string *str, lwc_string *lwcString)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">lwc_string_unref</span><span class="params">(lwc_string *lwcString)</span>;</span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">dom_string_byte_length</span><span class="params">(dom_string *str)</span>;                        </span><br><span class="line">dom_exception <span class="title function_">dom_string_create_interned</span><span class="params">(<span class="type">const</span> <span class="type">uint8_t</span> *data, <span class="type">size_t</span> len, dom_string **outString)</span>;</span><br><span class="line"><span class="type">char</span> *<span class="title function_">dom_string_data</span><span class="params">(dom_string *str)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">dom_string_isequal</span><span class="params">(dom_string *a, dom_string *b)</span>;                    </span><br><span class="line">dom_string *<span class="title function_">dom_string_ref</span><span class="params">(dom_string *str)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">dom_string_unref</span><span class="params">(dom_string *str)</span>;</span><br></pre></td></tr></table></figure>

<p>實作簡單或未實作。</p>
<h2 id="DOM-Parser-Choices"><a href="#DOM-Parser-Choices" class="headerlink" title="DOM Parser Choices"></a>DOM Parser Choices</h2><h3 id="YXML"><a href="#YXML" class="headerlink" title="YXML"></a><a href="https://dev.yorhel.nl/yxml"><del>YXML</del></a></h3><ul>
<li>提供的接口函式太少</li>
<li>使用stack替代malloc</li>
</ul>
<h3 id="EZXML"><a href="#EZXML" class="headerlink" title="EZXML"></a><a href="https://github.com/lxfontes/ezxml">EZXML</a></h3><ul>
<li>資料結構比較合理，包含基本常用之node</li>
<li>提供的API還算全面</li>
</ul>
<p>嘗試可成功解析SVG檔：</p>
<ul>
<li>使用<code>strcasecmp</code>修復<code>attr</code>的大小寫問題，例如”viewbox”, “viewBox”；</li>
<li>node的<code>type</code>類型未初始化，除一開始parse到的node是<code>DOM</code>類型外，其餘node一律初始化爲<code>ELEMENT</code>類型。</li>
</ul>
<p><img data-src="https://cdn.joouis.com/evgui-xml-parser-1.png"></p>
<p>以下是使用libxml2（左）和ezxml（右）的渲染對比。</p>
<p><img data-src="https://cdn.joouis.com/evgui-xml-parser-2.png"></p>
<p><img data-src="https://cdn.joouis.com/evgui-xml-parser-3.png"></p>
<p><img data-src="https://cdn.joouis.com/evgui-xml-parser-4.png"></p>
<p><img data-src="https://cdn.joouis.com/evgui-xml-parser-5.png">
  </p>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system</tag>
        <tag>vector</tag>
        <tag>gui</tag>
        <tag>twin</tag>
        <tag>window system</tag>
        <tag>svg</tag>
        <tag>svg tiny</tag>
        <tag>libsvgtiny</tag>
        <tag>cairo</tag>
        <tag>xml</tag>
        <tag>parser</tag>
        <tag>libxml2</tag>
        <tag>dom</tag>
        <tag>ezxml</tag>
      </tags>
  </entry>
  <entry>
    <title>简易计数器——年轻人的第一个Flutter应用</title>
    <url>/2018/first-flutter-app-review/</url>
    <content><![CDATA[<h2 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h2><p>站在负责 UI 层的 Web 前端视角看无线端框架，评判的第一个标准无非是文档够不够全、Demo 能不能很容易在手机上跑起来。近来的热门框架 Flutter 就上手而言给出了漂亮的答案。</p>
<span id="more"></span>

<h2 id="Prolog"><a href="#Prolog" class="headerlink" title="Prolog"></a>Prolog</h2><p>- 我是谁：曾是 Embedded C 开发的 Web 前端攻城狮，完全没有 <code>dart</code> 或是 <code>flutter</code> 开发经验<br>- 开发环境：MacBook Pro，XCode with iOS simulator<br>- 学习初心：2018 年的 Weex 开发体验依然不好，不如拥抱下一个技术红利（假笑.jpg<br>- 种草文：什么你还没听过 Flutter，简单介绍一下吧《<a href="https://mp.weixin.qq.com/s/xV-FGR9o2ODLFJFq4YwnKg">Release Flutter的最后一公里</a>》<br>- 最后一句话：以下”学习笔记”中，若有错误&#x2F;模糊概念请友好指正，么么哒</p>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Flutter 最近真的是大热，可能笔者身处阿里的缘故，自从咸鱼在他们的商品详情页成功使用后，集团内无论是 ATA 技术论坛还是周报都能看到有人学习研究这门技术。</p>
<p>笔者一直都想尝试原生的无线端开发，在错过 React Native、受够 Weex 之后，身处这个时间点刚好趁热学习一下 Flutter，说不定这次真的跟过往的轮子不一样。</p>
<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><p>照着<a href="https://flutter.io/get-started/install/">官方文档</a>来，一切还算顺利：装好 Flutter SDK，<code>flutter doctor</code> 把相关依赖都装好，插上 iPhone 手机，VS Code 新建一个 <code>Flutter Demo</code> 工程，调试…</p>
<p>在真机调试时，出现了第一个与苹果应用验证相关的问题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Failed to create provisioning profile.</span><br><span class="line">The app ID &quot;com.example.flutterFlutterDemo&quot; cannot be registered to your development team. Change your bundle identifier to a unique string to try again.</span><br></pre></td></tr></table></figure>

<p>解决方法有两种：</p>
<p>1. 使用自己的 Apple ID，详见<a href="http://bbs.sightp.com/thread-1241-1-1.html">这里</a>；（好吧我也没试过）<br>2. 使用模拟器。</p>
<p>命令行输入 <code>open ios/Runner.xcworkspace</code> 打开 Runner 工程，选择模拟器即可跑起来默认的 Demo 工程。</p>
<h2 id="Code-Review-for-Official-Counter"><a href="#Code-Review-for-Official-Counter" class="headerlink" title="Code Review for Official Counter"></a>Code Review for Official Counter</h2><h3 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h3><p>官方默认的 Demo 工程是一个简易计数器。先看眼效果，真的非常简单，右下角点击加号，中间的数字对应增长，就酱~</p>
<p><img data-src="https://cdn.joouis.com/first-flutter-app-review-1.png"></p>
<p>外行看热闹，内行看门道。应用层代码总共就六十多行，反正也不会 Dart，就边看边学习一下。</p>
<h3 id="Import"><a href="#Import" class="headerlink" title="Import"></a>Import</h3><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>首先是 Dart 依赖的导入。Dart 使用 <code>pubspec.yaml</code> 文件定义工程和依赖，类似 Node 世界里的 <code>package.json</code>；<code>pub</code> 则是对应 <code>npm</code> 的存在，<code>pub get</code> 一下即可安装相关的依赖包；安装完成后，会在项目根目录生成一个 <code>.packages</code> 文件，记录了所有依赖包在系统中对应的缓存地址，大概长这样：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> Generated by pub on 2018-07-18 20:28:35.360131.</span></span><br><span class="line">analyzer:file:///Users/joou/workspace/flutter/.pub-cache/hosted/pub.dartlang.org/analyzer-0.31.2-alpha.2/lib/</span><br></pre></td></tr></table></figure>

<p>再来说说最上方的引用语句。除了引用相对路径的 dart 文件外，引用包需加上 <code>package:</code> 前缀，Dart 运行时会自动去查询包文件。那这里引用的 <code>flutter/material.dart</code> 在哪呢？笔者的第一反应是在 Flutter SDK 工程中，果不其然在此：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">joou 2018-07-19 Thu 11:36:~/workspace/flutter/packages/flutter/lib(beta 50d8h)</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"> <span class="built_in">ls</span></span></span><br><span class="line">analysis_options_user.yaml foundation.dart            painting.dart              scheduler.dart             src</span><br><span class="line">animation.dart             gestures.dart              physics.dart               semantics.dart             widgets.dart</span><br><span class="line">cupertino.dart             material.dart              rendering.dart             services.dart</span><br></pre></td></tr></table></figure>

<p>SDK 中已经内置了不少包，让我们看看 <code>material.dart</code> 这个物料包里有些啥：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="string">&#x27;src/material/about.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="string">&#x27;src/material/animated_icons.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="string">&#x27;src/material/app.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="string">&#x27;src/material/app_bar.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="string">&#x27;src/material/arc.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="string">&#x27;src/material/back_button.dart&#x27;</span>;</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure>

<p>所以说 <code>flutter/lib</code> 下的包文件类似一个入口，类似 C 语言里的 header file，暴露给外界 <code>flutter/lib/src</code> 中的各种组件，想要深入了解某个包的具体实现去对应目录下即可找到真相。</p>
<p>当然，除了自己 xjb 探索外，也别忘了阅读<a href="https://docs.flutter.io/flutter/material/material-library.html">官方文档</a>，因为接下来的代码基本都要靠文档救命。</p>
<h3 id="App-Entry"><a href="#App-Entry" class="headerlink" title="App Entry"></a>App Entry</h3><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> main() =&gt; runApp(<span class="keyword">new</span> MyApp());</span><br></pre></td></tr></table></figure>

<p>Dart 的每一个程序应用最顶层都要有一个 <code>main()</code> 函数作为入口，这和 C 语言是一致的。此外还有 <code>void</code> 类型，代表返回值可以是任意类型。Dart 是 OO 范式的语言，函数、方法都是对象，存在一个对应的类型，因此在定义函数时最好申明其返回值类型。<code>=&gt;</code> 语法是 <code>&#123; return expr; &#125;</code> 的简写，注意里面不允许出现 statement (Eg. <code>if</code> )。上述代码一样可改写为：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">return</span> runApp(<span class="keyword">new</span> MyApp());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>runApp()</code> 是 Flutter 提供的<a href="https://docs.flutter.io/flutter/widgets/runApp.html">函数</a>，其作用是将一个 <code>Widget</code> 类的实例（作为其入参）挂载（attach）到屏幕上，逻辑大概如下：</p>
<p>1. 检查 <code>WidgetsFlutterBinding</code> 是否初始化；<br>2. 将控件（widget）实例挂载到 <code>renderViewElement</code> 上，这个元素是渲染层级的根节点实例；<br>3. 调用 <code>scheduleWarmUpFrame()</code> 方法，开始渲染。</p>
<h3 id="Stateless-Widget"><a href="#Stateless-Widget" class="headerlink" title="Stateless Widget"></a>Stateless Widget</h3><p>接下来让我们看看 <code>MyApp</code> 类。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MaterialApp(</span><br><span class="line">      title: <span class="string">&#x27;Flutter Counter&#x27;</span>,</span><br><span class="line">      theme: <span class="keyword">new</span> ThemeData(</span><br><span class="line">        primarySwatch: Colors.orange,</span><br><span class="line">      ),</span><br><span class="line">      home: <span class="keyword">new</span> MyHomePage(title: <span class="string">&#x27;Flutter Trivial Counter 🙃&#x27;</span>),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此控件是应用的根节点。首先它作为子类继承了 <code>StatelessWidget</code> ，无状态是指它不需要可变状态，而是通过构建其他的控件来更具体地描述 UI，构建过程以递归方式执行，直到 UI 被完全具象化。可能这么说比较抽象，不过先别急，后面的代码会解释什么叫具象化。在 <code>MyApp</code> 中，重载了 <code>build</code> 方法，实例化了一个 <code>MaterialApp</code> 对象。</p>
<p>如果你写过 React 框架，那么我想换个方法解释可能更好理解。<code>StatelessWidget</code> 好比 React 中的 <code>PureComponent</code> ，而 <code>Widget</code> 类的 <code>build</code> 方法好比 React 中的 <code>render</code>。<code>build</code> 方法负责描述控件代表的 UI ，入参是构造的上下文，内容则是使用 <code>MaterialApp</code> 对象的实例描述 UI。实例化的过程中进行了一些配置，例如命名为 “Flutter Counter”，使用橙色主题，主页标题栏的文字设为 “Flutter Trivial Counter 🙃”。即便完全不知道 <code>MaterialApp</code> 类的内部实现，也很容易猜到它更具体地定义了一些 UI 内容。</p>
<p>React 是具备生命周期的，当 <code>componentWillUpdate</code> 钩子触发后将执行 <code>render</code> 方法，重新渲染组件。而 <code>PureComponent</code> 则是通过在渲染前（例如在 <code>shouldComponentUpdate</code> 钩子中）浅对比新旧 props 和 state 判断是否需要重新渲染，从而实现性能优化。同理，控件的 <code>build</code> 方法将会在其 lifetime 的以下时刻被调用：</p>
<p>- 调用 <a href="https://docs.flutter.io/flutter/widgets/State/initState.html">iniState</a> 之后。<br>- 调用 <a href="https://docs.flutter.io/flutter/widgets/State/didUpdateWidget.html">didUpdateWidget</a> 之后。<br>- 收到 <a href="https://docs.flutter.io/flutter/widgets/State/setState.html">setState</a> 的请求后。<br>- 在 <a href="https://docs.flutter.io/flutter/widgets/State-class.html">State</a> 对象的依赖之一改变（例如被之前的 <a href="https://docs.flutter.io/flutter/widgets/State/build.html">build</a> 方法引用的某个 <a href="https://docs.flutter.io/flutter/widgets/InheritedWidget-class.html">InheritedWidget</a> 发生了改变）后。<br>- 调用 <a href="https://docs.flutter.io/flutter/widgets/State/deactivate.html">deactivate</a> 后重新在挂件树的另一个位置注入 <a href="https://docs.flutter.io/flutter/widgets/State-class.html">State</a> 类。</p>
<p>而 <code>StatelessWidget</code> 中的 <code>build</code> 方法仅在三种情况中被调用：</p>
<p>- 控件第一次被插入挂件树中，也就是初始化时。<br>- 控件的父亲改变了自身配置。<br>- 控件依赖的继承控件类改变。</p>
<p>这和 React 是何等的相似（此处感慨 3 秒…）！因此减少无状态控件的重新构建也是一门优化技巧，在此不延伸了，有兴趣请看<a href="https://docs.flutter.io/flutter/widgets/StatelessWidget-class.html">文档</a>。至于 <code>MaterialApp</code> 类的内部配置在此也不深入，有机会再研究、分享一下这些官方组件。让我们看看配置中描述主页的 <code>MyHomePage</code> 挂件吧，这是在应用代码中实现的。</p>
<h3 id="Stateful-Widget"><a href="#Stateful-Widget" class="headerlink" title="Stateful Widget"></a>Stateful Widget</h3><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  MyHomePage(&#123;Key key, <span class="keyword">this</span>.title&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> title;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _MyHomePageState createState() =&gt; <span class="keyword">new</span> _MyHomePageState();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>MyHomePage</code> 是一个有状态的挂件，最底部重载了 <code>createState</code> 方法定义其状态，用来描述 UI，这个稍后再细看。通常如果父类（superclass）没有默认的构造函数，dart 则要求子类在代码块的初始位置使用 <code>:</code> 指定父类的构造函数。而 <code>Key key</code> 用来申明可选参数（optional parameter），此处申明了 <code>title</code> 变量（field）。<code>title</code> 变量的值由父类赋予，被其 <code>State</code> 类的 <code>build</code> 方法使用渲染，像这种子类挂件的变量通常定义为 <code>final</code> 类型，意味着变量只能被赋值一次。与 <code>const</code> 不同的是 <code>final</code> 变量在程序运行时才赋值，而非编译时期就定义好的常量。</p>
<h3 id="State"><a href="#State" class="headerlink" title="State"></a>State</h3><p>让我们最后瞅瞅首页挂件的状态类。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MyHomePage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> _counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> _incrementCounter() &#123;</span><br><span class="line">    setState(() &#123;</span><br><span class="line">      _counter++;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Scaffold(</span><br><span class="line">      appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">        title: <span class="keyword">new</span> Text(widget.title),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="keyword">new</span> Center(</span><br><span class="line">        child: <span class="keyword">new</span> Column(</span><br><span class="line">          mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">new</span> Text(</span><br><span class="line">              <span class="string">&#x27;老铁没毛病，双击:&#x27;</span>,</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">new</span> Text(</span><br><span class="line">              <span class="string">&#x27;<span class="subst">$_counter</span>&#x27;</span>,</span><br><span class="line">              style: Theme.of(context).textTheme.display1,</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">      floatingActionButton: <span class="keyword">new</span> FloatingActionButton(</span><br><span class="line">        onPressed: _incrementCounter,</span><br><span class="line">        tooltip: <span class="string">&#x27;Increment&#x27;</span>,</span><br><span class="line">        child: <span class="keyword">new</span> Icon(Icons.add),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>好吧这也是笔者第一次接触泛型，看过<a href="https://www.dartlang.org/guides/language/language-tour#generics">官方文档</a>的例子后觉得还是比较好理解。<code>MyHomePage</code> 继承了拥有可变状态的 <code>StatefulWidget</code> 类，当其第一次被插入控件树中时，Flutter 框架会调用 <code>createState</code> 函数创建一个全新的 <code>_MyHomePageState</code> 实例与树中的位置相关联。当挂件的父组件重新构建（rebuild）时，父组件会重新创建一个 <code>MyHomePage</code> 实例，但是将复用已有的 <code>_MyHomePageState</code> 对象。</p>
<p><code>_MyHomePageState</code> 定义了一个数字类型的 <code>_counter</code> ，另外自定义了一个 <code>_incrementCounter</code> 方法每次对 <code>_counter</code> 值加一。加一语句写在 <code>setState</code> 方法中，当被执行完后，会触发 Flutter 框架重新运行下方的 <code>build</code> 方法，以达到最终更新界面的目的。虽然推荐将状态变更的代码写在 <code>setState</code> 的回调函数中，但这么改写也是可以正常工作的…</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> _incrementCounter() &#123;</span><br><span class="line">  _counter++;</span><br><span class="line">  setState(() &#123;&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最后的最后，在 <code>_MyHomePageState</code> 的 <code>build</code> 方法里，初始化并返回了一个 <code>Scaffold</code> 实例，源自 Material 组件。每当 <code>setState</code> 被触发后，就将执行一次 <code>build</code> 方法。不过 Flutter 框架号称优化过重跑 <code>build</code> 方法的性能，无需担心重新构建的成本。</p>
<p><code>Scaffold</code> 类配置了三处地方：</p>
<ul>
<li>新建一个 <code>appBar</code> 实例。这里通过 <code>widget</code> 属性获取到了 <code>MyHomePage</code> 挂件中的属性，此外还可以通过 <a href="https://docs.flutter.io/flutter/widgets/State-class.html#didUpdateWidget"><code>didUpdateWidget</code></a> 钩子在 <code>widget</code> 发生改变时进行操作。</li>
<li><code>body</code> 属性被赋予了 <code>Center</code> 实例，无论是 <code>Center</code> 还是 <code>Column</code> 都是布局（layout）挂件。前者可以定位到父组件的中心位置，而后者将会水平排列其子组件。<code>Column</code> 挂件有多种属性控制样式，这里使用了 <code>mainAxisAlignment</code> 将其子组件垂直居中（别糊涂，列的主轴是垂直方向）。</li>
<li>屏幕右下角的按钮由 <code>FloatingActionButton</code> 描述，使用了加号图标，绑定之前定义好的 <code>_incrementCounter</code> 函数作为 <code>onPressed</code> 事件的处理者。</li>
</ul>
<p>好了说了这么多组件，让我们使用 Flutter tool 的 <code>Toggle Debug Paint</code> 指令直观感受一把。</p>
<p><img data-src="https://cdn.joouis.com/first-flutter-app-review-2.png"></p>
<h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>笔者去年写了篇 Weex 从入门到放弃的上手文，说实话这次 Flutter 上手体验要比 Weex 好非常多——详实的文档，齐全的基础脚手架，轻松在手机&#x2F;模拟器上运行应用。</p>
<p>对于没有客户端开发经验的笔者来说，能看着文档打通流程（实际编译出一个安装包并在对应平台上安装、执行）是一件非常关键的事情，它意味着小白也能使用这项技术栈独立开发简单的应用，能给学习者十足的信心。过去接触 Weex，只能使用 Playground App 扫码跑 demo，非常的“半成品”，而 Flutter 轻松几个指令，就在你的设备上跑起了你的工程，赞！</p>
<p>至于 Flutter 相关的信息，如学习 Dart 语言、Flutter 入门教程、代码范例、官方库接口等资料已经颇为丰富，Stack Overflow 上也有一些讨论的话题，对于一个处于 Beta 阶段的框架来很成熟了。</p>
<p>接下来就期待国内外有更多关于 Flutter 的线上生产实践经验，笔者有空也会接着研究并分享 Flutter 的知识。</p>
<p>如果你看了这篇文章感到意犹未尽，那么再提供一点延伸阅读：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=UUfXWzp0-DU">Flutter’s Rendering Pipeline</a></li>
<li><a href="https://flutter.io/widgets-intro/">A Tour of the Flutter Widget Framework</a></li>
</ul>
<p>相信你能从上述两个方向发现更多一手、可靠、丰富的信息！</p>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>flutter</tag>
        <tag>app</tag>
        <tag>dart</tag>
        <tag>mobile</tag>
      </tags>
  </entry>
  <entry>
    <title>From Research to Product: Customer Insights on Prompt flow</title>
    <url>/2024/from-research-to-product-customer-insights-on-prompt-flow/</url>
    <content><![CDATA[<h2 id="Time-to-navigate-the-frontier"><a href="#Time-to-navigate-the-frontier" class="headerlink" title="Time to navigate the frontier"></a>Time to navigate the frontier</h2><p>In the dynamic landscape of Large Language Models (LLM), our team is once again at the cutting edge, pioneering a new venture called <a href="https://github.com/microsoft/promptflow">Prompt flow</a> (PF). My role transcends the rapid and high-quality delivery of products. I need to contemplate the features that can deliver real values to our customers and the user experience that resonates with the essence of those features. This new challenge is substantial for a web front-end engineer and has been a focal point of my professional contemplation.</p>
<p>As 2023 drew to a close, a fortuitous invitation from a university peer led me to explore the synergy between LLMs and conventional ML models. This exploration transformed me into an amateur researcher, granting me the privilege to scrutinize the research process through our customers’ lens, with the aim of pinpointing their pain points to better inform our product design.</p>
<h2 id="Recent-academic-work-I-learned-from"><a href="#Recent-academic-work-I-learned-from" class="headerlink" title="Recent academic work I learned from"></a>Recent academic work I learned from</h2><p><a href="https://arxiv.org/abs/2402.13414">This paper</a> has been accepted by ACL 2024 Findings few days ago, a great encouragement for us. <strong>Please read the full paper if you’re interested in details, which will not be interpreted here</strong>.</p>
<h4 id="Harnessing-LLMs-as-post-hoc-correctors"><a href="#Harnessing-LLMs-as-post-hoc-correctors" class="headerlink" title="Harnessing LLMs as post-hoc correctors"></a>Harnessing LLMs as post-hoc correctors</h4><p>A fixed LLM is leveraged to propose corrections to an arbitrary ML model’s predictions without additional training or the need for additional datasets.</p>
<p><img data-src="https://cdn.joouis.com/from-research-to-product-customer-insights-on-prompt-flow-1-concept.png" alt="Figure 1: Harnessing LLMs as post-hoc correctors. A fixed LLM is leveraged to propose corrections to an arbitrary ML model&#39;s predictions without additional training or the need for additional datasets."></p>
<h4 id="A-high-level-overview-of-LLMCORR"><a href="#A-high-level-overview-of-LLMCORR" class="headerlink" title="A high-level overview of LLMCORR"></a>A high-level overview of LLMCORR</h4><p>Harnessing Large Language Models (LLMs) as post-hoc correctors to refine predictions made by an arbitrary Machine Learning (ML) model.</p>
<p><img data-src="https://cdn.joouis.com/from-research-to-product-customer-insights-on-prompt-flow-2-pipeline.png" alt="Figure 2: A high-level overview of LLMCORR, harnessing Large Language Models (LLMs) as post-hoc correctors to refine predictions made by an arbitrary Machine Learning (ML) model."></p>
<h4 id="LLMCORR-prompt-template"><a href="#LLMCORR-prompt-template" class="headerlink" title="LLMCORR prompt template"></a>LLMCORR prompt template</h4><p>Multiple contextual knowledge from training and validation datasets can be included by expanding the template.</p>
<p><img data-src="https://cdn.joouis.com/from-research-to-product-customer-insights-on-prompt-flow-3-prompt.png" alt="Figure 3: LLMCORR prompt template. Multiple contextual knowledge from training and validation datasets can be included by expanding the template."></p>
<h2 id="Reflections-on-Prompt-flow"><a href="#Reflections-on-Prompt-flow" class="headerlink" title="Reflections on Prompt flow"></a>Reflections on Prompt flow</h2><p>I have been deeply involved in PF since the inception of this project. Naturally, I endeavored to integrate it into our research, yet reality diverged from my original intentions. Hence, let’s see these few reflections on PF throughout the research journey. Please note that most of our works were done before early February of 2024, so I don’t mean to be a monday morning quarterback for some points.</p>
<h3 id="1-Support-and-optimization-of-local-inference-experience-will-gain-more-customer-favor"><a href="#1-Support-and-optimization-of-local-inference-experience-will-gain-more-customer-favor" class="headerlink" title="1. Support and optimization of local inference experience will gain more customer favor"></a>1. Support and optimization of local inference experience will gain more customer favor</h3><p>Most researchers and engineers have certain computational resources, and from the perspective of cost control, they are likely to choose open-source large language models (LLMs) for local inference work, which PF does not support. We have similar story that opted for LLMs like Llama at the beginning of the experiment, which meant giving up on PF.</p>
<h3 id="2-Flex-mode-is-crucial-for-the-use-of-flow"><a href="#2-Flex-mode-is-crucial-for-the-use-of-flow" class="headerlink" title="2. Flex mode is crucial for the use of flow"></a>2. Flex mode is crucial for the use of flow</h3><p>Despite transitioning to OpenAI’s GPT3.5&#x2F;4 models, our repository was already rich with Python utilities and Jupyter notebooks, complemented by a wealth of projects from previous research endeavors. The core competitive edge of PF aside, the availability of flex mode at that juncture would have allowed for an exploratory integration with our established GNN workflow, potentially igniting a synergistic spark.</p>
<h3 id="3-Is-Prompt-engineering-really-that-important"><a href="#3-Is-Prompt-engineering-really-that-important" class="headerlink" title="3. Is Prompt engineering really that important?"></a>3. Is Prompt engineering really that important?</h3><p>The value of our work lies in placing LLM to an interesting position with right work in the system to maximize its value. The prompts designed and used are relatively common today: simple structure, essential knowledge and few-shots. Therefore prompt engineering have not played the key role in this work.</p>
<p>It is worth mentioning that PF recently launched the Prompty feature, which provides quick access and focuses on the value of tuning prompts. This may be practical in large engineering applications, where the content of a single prompt can range from hundreds to thousands of lines. If the scenario holds, then support complex Jinja Template Designer features and preview the final prompt content will be of great help (just like Overleaf does).</p>
<h3 id="4-What-PF-did-right"><a href="#4-What-PF-did-right" class="headerlink" title="4. What PF did right?"></a>4. What PF did right?</h3><p>When we began to learn and try to implement RAG App, we naturally looked at some LangChain samples first, then… went from beginner to giving up. My teammate chose the OpenAI Playground to use the GPT4 Assistants feature, meanwhile Azure OpenAI had not supported Assistants yet, so I chose to build a RAG flow following the PF sample. In this scenario, there are a few advantages to note:</p>
<ul>
<li>Low-code is always easy to build PoC.</li>
<li>Orchestration to do batch run.</li>
<li>Tracing (Not implemented yet at that time, but definitely a keeper feature).</li>
</ul>
<p>Of course, there are also points worth discussing, such as whether you still need to write some code that will affect the ease of use assessment if it is not clear in the sample that embeddings are generated using the same model set and stored in the vector database; or the data input and output in the batch run scenario, which also involves a lot of manual work.</p>
<p>Another aside, the performance of File retrieval of OpenAI (OAI) Assistants was not satisfactory at that time. I wonder if there has been a significant improvement after it was renamed to File Search now.</p>
<h3 id="5-What-should-PF-focus-on-if-it-conducts-Experiments"><a href="#5-What-should-PF-focus-on-if-it-conducts-Experiments" class="headerlink" title="5. What should PF focus on if it conducts Experiments?"></a>5. What should PF focus on if it conducts Experiments?</h3><p>Firstly, there are some old topics, such as experiment status display and refresh, CRUD operations and viewing logs at each step, which are essential features of various products.</p>
<p>When the amount of experimental data is huge, limitations on metrics like RPM and TPM will start to trouble users. Thus, how to estimate the number of tokens and requests for experiments under these constraints by services like OAI and Azure OpenAI (AOAI) to achieve automated high-concurrency scheduling, and even support multi-endpoints concurrency, will be a great value to customer. In previous experiments, we implemented very basic token calculation and request interval logic, and I believe we are not the only ones with such needs.</p>
<h2 id="Last-few-words"><a href="#Last-few-words" class="headerlink" title="Last few words"></a>Last few words</h2><p>It’s not commonly encouraged for engineers to delve into academic pursuits, since not everyone possesses the passion, foundation, or even time. However, in the era of Generative AI, immersing oneself in scholarly articles is always a wise move!</p>
<p>Whether in practical application or academic experimentation, only through in-depth engagement can one truly understand and unearth the pain points of users. I believe this embodies the spirit of our current discussion.</p>
]]></content>
      <tags>
        <tag>TechTalk</tag>
        <tag>machine learning</tag>
        <tag>large language model</tag>
        <tag>llm</tag>
        <tag>gpt</tag>
        <tag>research</tag>
        <tag>product mindset</tag>
        <tag>reflection</tag>
        <tag>prompt flow</tag>
        <tag>acl</tag>
      </tags>
  </entry>
  <entry>
    <title>Getting started with AAD integration in JavaScript</title>
    <url>/2021/getting-started-with-aad-integration-in-javascript/</url>
    <content><![CDATA[<h2 id="Relationship-between-OAuth2-0-AAD-and-MSAL"><a href="#Relationship-between-OAuth2-0-AAD-and-MSAL" class="headerlink" title="Relationship between OAuth2.0, AAD and MSAL"></a>Relationship between OAuth2.0, AAD and MSAL</h2><h3 id="Definitions"><a href="#Definitions" class="headerlink" title="Definitions"></a>Definitions</h3><h4 id="OAuth-2-0"><a href="#OAuth-2-0" class="headerlink" title="OAuth 2.0"></a>OAuth 2.0</h4><p>OAuth 2.0 is the industry-standard <strong>protocol</strong> for authorization. OAuth 2.0 focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices.</p>
<h4 id="Azure-Authentication-Directory"><a href="#Azure-Authentication-Directory" class="headerlink" title="Azure Authentication Directory"></a>Azure Authentication Directory</h4><p>One of OAuth 2.0 and OpenID Connect standard-compliant authentication <strong>service</strong> enabling developers to authenticate work or school accounts. It’s the implementation which supports OAuth 2.0. It’s the component of Microsoft Identity platform.</p>
<h4 id="Microsoft-Authentication-Libraries"><a href="#Microsoft-Authentication-Libraries" class="headerlink" title="Microsoft Authentication Libraries"></a>Microsoft Authentication Libraries</h4><p>Open source <strong>libraries</strong> for <strong>several clients</strong> to authenticate users using AAD, Microsoft personal accounts (MSA), and social identity providers like Facebook, Google, LinkedIn, Microsoft accounts, etc.</p>
<h3 id="Usage-scenario"><a href="#Usage-scenario" class="headerlink" title="Usage scenario"></a>Usage scenario</h3><p><img data-src="https://cdn.joouis.com/getting-started-with-aad-integration-in-javascript-1.png" alt="oauth-scenario"></p>
<h2 id="Workflow-and-implementation"><a href="#Workflow-and-implementation" class="headerlink" title="Workflow and implementation"></a>Workflow and implementation</h2><h3 id="Authentication-flow"><a href="#Authentication-flow" class="headerlink" title="Authentication flow"></a>Authentication flow</h3><p><img data-src="https://cdn.joouis.com/getting-started-with-aad-integration-in-javascript-2.png" alt="auth-flow"></p>
<h4 id="Two-APIs"><a href="#Two-APIs" class="headerlink" title="Two APIs"></a>Two APIs</h4><p>Only two APIs requested from client-side, very simple. Notice that <code>/oauth2/v2.0/authorize</code> is <code>document</code> type.</p>
<p><img data-src="https://cdn.joouis.com/getting-started-with-aad-integration-in-javascript-3.png" alt="auth-document"></p>
<h4 id="Redirect-URI-setup"><a href="#Redirect-URI-setup" class="headerlink" title="Redirect URI setup"></a>Redirect URI setup</h4><p>For CORS and redirect target from sign-in page usage, should configure it on both Azure Portal and codebase.</p>
<h4 id="Configuration-on-Azure-Portal"><a href="#Configuration-on-Azure-Portal" class="headerlink" title="Configuration on Azure Portal"></a>Configuration on Azure Portal</h4><p><img data-src="https://cdn.joouis.com/getting-started-with-aad-integration-in-javascript-4.png" alt="reply-uris-config"></p>
<h4 id="oauth-html"><a href="#oauth-html" class="headerlink" title="oauth.html"></a>oauth.html</h4><p>Usually we will set two reply URIs, one is probably the homepage as redirect target after signed in, another is used for requesting token silently. The silent token refresh loads an iframe using that empty <code>oauth.html</code> file, and that same <code>oauth.html</code> file needs to receive the response back, so the acquire token silent flow provides the <code>/oauth.html</code> endpoint as the redirect URI. This is different from the user-facing flow because there is no iframe that the middleware loads into the page, redirecting back to <code>oauth.html</code> will not hook into React or MSAL and auth would halt – it must redirect back to your react app in the user-facing flow.</p>
<h4 id="Code-configuration"><a href="#Code-configuration" class="headerlink" title="Code configuration"></a>Code configuration</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">    <span class="attr">auth</span>: &#123;</span><br><span class="line">        <span class="comment">// The application ID of your AAD application</span></span><br><span class="line">        <span class="attr">clientId</span>: <span class="string">&quot;11111111-1111-1111-111111111111&quot;</span>,</span><br><span class="line">        <span class="comment">// The authority URL for your application</span></span><br><span class="line">        <span class="attr">authority</span>: <span class="string">&quot;https://login.microsoftonline.com/common&quot;</span>,</span><br><span class="line">        <span class="comment">// Defaults to application start page</span></span><br><span class="line">        <span class="attr">redirectUri</span>: <span class="string">&quot;https://localhost:3000&quot;</span>,</span><br><span class="line">        <span class="attr">postLogoutRedirectUri</span>: <span class="string">&quot;https://localhost:3000/logout&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> loginRequest = &#123;</span><br><span class="line">    <span class="attr">scopes</span>: [<span class="string">`<span class="subst">$&#123;resourceEndpoint&#125;</span>/.default`</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Authority"><a href="#Authority" class="headerlink" title="Authority"></a>Authority</h4><p>The authority is a URL that indicates a directory that MSAL can request tokens from, for more details check the <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-client-application-configuration">MSAL Application configuration options</a>.</p>
<h4 id="Scopes-and-permissions"><a href="#Scopes-and-permissions" class="headerlink" title="Scopes and permissions"></a>Scopes and permissions</h4><p>Applications that integrate with the Microsoft identity platform follow an authorization model that gives users and administrators control over how data can be accessed. <code>/.default</code> represents OpenID Connect scopes, for more details check the <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent">Permissions and consent in the Microsoft identity platform</a>.</p>
<h3 id="Sign-in-with-redirect"><a href="#Sign-in-with-redirect" class="headerlink" title="Sign-in with redirect"></a>Sign-in with redirect</h3><p>It’s no need to redirect to sign-in page every time if auth is not expired, just go ahead. You can also <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/scenario-spa-sign-in?tabs=javascript2#sign-in-with-a-pop-up-window">sign-in with a pop-up window</a>.</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> username = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> msalInstance = <span class="keyword">new</span> <span class="title class_">PublicClientApplication</span>(config);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleResponse</span>(<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="comment">//handle redirect response</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// In case multiple accounts exist, you can select</span></span><br><span class="line">    <span class="keyword">const</span> currentAccounts = msalInstance.<span class="title function_">getAllAccounts</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (currentAccounts === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// No accounts detected, need to login</span></span><br><span class="line">        msalInstance.<span class="title function_">loginRedirect</span>(loginRequest);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (currentAccounts.<span class="property">length</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// Add choose account code here</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (currentAccounts.<span class="property">length</span> === <span class="number">1</span>) &#123;</span><br><span class="line">        username = currentAccounts[<span class="number">0</span>].<span class="property">username</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">msalInstance.<span class="title function_">handleRedirectPromise</span>().<span class="title function_">then</span>(handleResponse);</span><br></pre></td></tr></table></figure>

<h4 id="Authorization-code"><a href="#Authorization-code" class="headerlink" title="Authorization code"></a>Authorization code</h4><p>After signed in successfully, page will redirect to the redirect URI we set before with the authorization code. MSAL.js library will handle it automatically, we can observe the code on the navigation bar.</p>
<p><img data-src="https://cdn.joouis.com/getting-started-with-aad-integration-in-javascript-5.png" alt="hash-code"></p>
<p>Then the library will parse the authorization code and send the request to get token back directly, all logics encapsulated. Here is the structure of the decoded code.</p>
<p><img data-src="https://cdn.joouis.com/getting-started-with-aad-integration-in-javascript-6.png" alt="auth-code-deserialized"></p>
<h3 id="Acquire-a-token-with-a-redirect"><a href="#Acquire-a-token-with-a-redirect" class="headerlink" title="Acquire a token with a redirect"></a>Acquire a token with a redirect</h3><p>The pattern for acquiring tokens for APIs with MSAL.js is to first attempt a silent token request by using the <code>acquireTokenSilent</code> method. When this method is called, the library first checks the cache in browser storage to see if a valid token exists and returns it. When no valid token is in the cache, it sends a silent token request to AAD from a hidden iframe.</p>
<p>The silent token requests to AAD might fail for reasons like an expired Azure AD session or a password change. In that case, we need to redirect or using a pop-up window to acquire tokens.</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">accessTokenRequest</span>: <span class="title class_">AuthenticationParameters</span> = &#123;</span><br><span class="line">    <span class="attr">scopes</span>: [<span class="string">`<span class="subst">$&#123;resourceEndpoint&#125;</span>/.default`</span>],</span><br><span class="line">    <span class="attr">authority</span>: <span class="variable language_">this</span>.<span class="property">authority</span>,</span><br><span class="line">    <span class="attr">redirectUri</span>: <span class="string">&quot;https://localhost:3000/oauth.html&quot;</span>,</span><br><span class="line">    <span class="attr">account</span>: <span class="variable language_">this</span>.<span class="property">account</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">msalInstance.<span class="title function_">acquireTokenSilent</span>(accessTokenRequest).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">accessTokenResponse</span>) &#123;</span><br><span class="line">    <span class="comment">// Acquire token silent success</span></span><br><span class="line">    <span class="comment">// Call API with token</span></span><br><span class="line">    <span class="keyword">let</span> accessToken = accessTokenResponse.<span class="property">accessToken</span>;</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="comment">//Acquire token silent failure, and send an interactive request</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">    <span class="keyword">if</span> (error.<span class="property">errorMessage</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;interaction_required&quot;</span>) !== -<span class="number">1</span>) &#123;</span><br><span class="line">        msalInstance.<span class="title function_">acquireTokenRedirect</span>(accessTokenRequest);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="Why-use-redirect-way"><a href="#Why-use-redirect-way" class="headerlink" title="Why use redirect way?"></a>Why use redirect way?</h4><p>If users have browser constraints or policies where pop-ups windows are disabled, you can use the redirect method. Use the redirect method with the Internet Explorer browser, because there are <a href="https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/Known-issues-on-IE-and-Edge-Browser">known issues with pop-up windows on Internet Explorer</a>.</p>
<h3 id="Choice-of-MSAL-js"><a href="#Choice-of-MSAL-js" class="headerlink" title="Choice of MSAL.js"></a>Choice of MSAL.js</h3><p>You will find so many packages when you visit MSAL.js repository, APIs used above should be compatible across the packages, then question comes: how to make a choice?</p>
<p>Besides node package using in the server-side, I recommend <code>msal-browser</code> (<a href="https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser">Microsoft Authentication Library for JavaScript v2.x</a>) or other UI framework wrappers based on it, for its implementation of OAuth 2.0 Authorization Code Flow with PCKE as well as it’s OpenID-compliant.</p>
<p><img data-src="https://cdn.joouis.com/getting-started-with-aad-integration-in-javascript-7.png" alt="msal-package-structure"></p>
<p>These packages are just official engineering implementations, not so well-documented yet, I had to read the source code for debugging before. Anyway as long as you master the workflow of authentication, it would not be too complicated.</p>
<h2 id="Migration-from-AdalJS-to-MSAL-js"><a href="#Migration-from-AdalJS-to-MSAL-js" class="headerlink" title="Migration from AdalJS to MSAL.js"></a>Migration from AdalJS to MSAL.js</h2><p>AdalJS is the legacy library for AAD authentication used by so many dated products. If you don’t have any idea about this section, the official document explains <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-migration#why-switch-to-msal">Why switch to MSAL</a> clearly.</p>
<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ul>
<li>You may need to change the reply URL type from <code>Web</code> to <code>SPA</code> as MSAL.js required. AdalJS supports both two types, so this change will not block online client services.</li>
<li>Need to specify the <code>accessTokenAcceptedVersion</code> to <code>2</code> and <code>signInAudience</code> to <code>AzureADandPersonalMicrosoftAccount</code> in the manifest if you want to support both AAD account and MSA account. These settings will not break online client services as well.</li>
<li>You can just import the MSAL.js distribution script to your app then test if the current AAD configurations are satisfying both SDKs.</li>
<li>If there is an auth service for the app, you can just do <a href="https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/login-user.md#silent-login-with-ssosilent">silent login with <code>ssoSlient()</code></a>.</li>
<li>Remember to test all kinds of audiences of the customers and all provided resouce endpoints with access token.</li>
</ul>
<h3 id="Quick-login-verification-on-you-app-page"><a href="#Quick-login-verification-on-you-app-page" class="headerlink" title="Quick login verification on you app page"></a>Quick login verification on you app page</h3><p>PoC (Proof of concept) or verfication always needs quick moves. For the migration scenario, we have to make sure the AAD configurations are correct as well as compatible to make both AdalJS clients and MSAL.js clients login successfully at first stage. To do the quick login verification, the authentication client class need to be exposed to <code>Window</code> global no matter AdalJS or MSAL.js, then we can do experiment on the console of browser.</p>
<h4 id="For-MSAL-js"><a href="#For-MSAL-js" class="headerlink" title="For MSAL.js"></a>For MSAL.js</h4><p>Please refer to the <a href="https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/initialization.md">document</a>, it’s similar to the codes demonstrated above.</p>
<h4 id="For-AdalJS"><a href="#For-AdalJS" class="headerlink" title="For AdalJS"></a>For AdalJS</h4><p>The docs for AdalJS are much fewer than MSAL.js probably becasue it has been deprecated. And different versions of AdalJS seems to have few subtle API as well as behavior changes, so you may need to update the code below to make it work. My test code is based on AdalJS v1.0.8.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> authContext = <span class="keyword">new</span> <span class="title class_">AuthenticationContext</span>(&#123;</span><br><span class="line">            <span class="attr">instance</span>: <span class="string">&quot;https://login.microsoftonline.com/&quot;</span>,</span><br><span class="line">            <span class="attr">clientId</span>: <span class="string">&quot;Client ID of AAD app&quot;</span>,</span><br><span class="line">            <span class="attr">redirectUri</span>: <span class="string">&quot;Reply URL of AAD app&quot;</span>,</span><br><span class="line">            <span class="attr">postLogoutRedirectUri</span>: <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>,</span><br><span class="line">            <span class="attr">cacheLocation</span>: <span class="string">&#x27;localStorage&#x27;</span>,</span><br><span class="line">            <span class="attr">endpoints</span>: &#123; <span class="attr">graphApiResourceEndpoint</span>: <span class="string">&quot;https://graph.microsoft.com/&quot;</span> &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Implement the pop-up login flow</span></span><br><span class="line">authContext.<span class="property">config</span>.<span class="property">displayCall</span> = <span class="keyword">function</span> (<span class="params">url</span>) &#123;</span><br><span class="line">      authContext.<span class="property">config</span>.<span class="property">displayCall</span> = <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">var</span> popup = <span class="variable language_">window</span>.<span class="title function_">open</span>(url, <span class="string">&#x27;auth-popup&#x27;</span>, <span class="string">&#x27;width=800,height=500&#x27;</span>);</span><br><span class="line">      <span class="keyword">var</span> intervalId = <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">// Assume your reply URL contains &quot;/signin&quot;</span></span><br><span class="line">          <span class="keyword">if</span> (popup.<span class="property">location</span>.<span class="property">pathname</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;/signin&#x27;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="built_in">clearInterval</span>(intervalId);</span><br><span class="line">            <span class="comment">// Pass the ID token for AdalJS to parse</span></span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hash</span> = popup.<span class="property">location</span>.<span class="property">hash</span>;</span><br><span class="line">            <span class="comment">// But AdalJS will not clean the &quot;#&quot; tag in url, so it will redirect in the handleWindowCallback().</span></span><br><span class="line">            <span class="comment">// I&#x27;d like to add a breakpoint inside to update the value of &quot;adal.login.request&quot; key to stop redirection.</span></span><br><span class="line">            <span class="comment">// Just read the source code if you don&#x27;t know what I mean.</span></span><br><span class="line">            authContext.<span class="title function_">handleWindowCallback</span>();</span><br><span class="line">            popup.<span class="title function_">close</span>();</span><br><span class="line">            <span class="keyword">var</span> user = authContext.<span class="title function_">getCachedUser</span>();</span><br><span class="line">            <span class="keyword">if</span> (user) &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user))</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">error</span>(authContext.<span class="title function_">getLoginError</span>());</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (whatever) &#123;</span><br><span class="line">          <span class="keyword">if</span> (popup.<span class="property">closed</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(whatever)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, <span class="number">100</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Login via a pop-up window</span></span><br><span class="line">authContext.<span class="title function_">login</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Inspect the access token after logining</span></span><br><span class="line">authContext.<span class="title function_">acquireToken</span>(<span class="string">&quot;https://graph.microsoft.com/&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>); <span class="keyword">debugger</span> &#125;)</span><br></pre></td></tr></table></figure>



<h2 id="Frequently-asked-issues"><a href="#Frequently-asked-issues" class="headerlink" title="Frequently asked issues"></a>Frequently asked issues</h2><h3 id="Debugging-and-verification-approach"><a href="#Debugging-and-verification-approach" class="headerlink" title="Debugging and verification approach"></a>Debugging and verification approach</h3><p>You can’t verify your change until the production release, also the change for the production environment can’t be verified on other staging environment since they are using different hosts. So the question is how to debug or do verification?</p>
<p>Basically you can run a local server to host your application with adding a host record which points the production host to your local IP address like <code>127.0.0.1</code> to make it. Remember to enable HTTPS protocol for your local server.</p>
<p>And it’s better to verify your change on both common window and incognito window after the release.</p>
<h3 id="Difference-between-access-token-ID-token-and-refresh-token"><a href="#Difference-between-access-token-ID-token-and-refresh-token" class="headerlink" title="Difference between access token, ID token, and refresh token"></a>Difference between access token, ID token, and refresh token</h3><p>We observed that <code>/oauth2/v2.0/token</code> return 3 tokens: <code>access_token</code>,  <code>id_token</code> and <code>refresh_token</code>.</p>
<p><code>access_token</code> enables clients to securely call protected web APIs, and are used by web APIs to perform authentication and authorization. For more details please check <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens">Microsoft identity platform access tokens</a>.</p>
<p><code>id_token</code> should be used to validate that a user is who they claim to be and get additional useful information about them, it can be sent alongside or instead of an access token. We have not used it. For more details please check <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/id-tokens">Microsoft identity platform ID tokens</a>.</p>
<p><code>access_token</code> and <code>id_token</code> are both JWT which consists of a header, payload, and signature portion, that’s why they look so similiar though these two strings are base64 encoded. We mainly use access token for the application, it contains more information than ID token, and we can get user info like name, E-mail from it.</p>
<p>Because access tokens are valid for only a short period of time, authorization servers will sometimes issue a refresh token at the same time the access token is issued. MSAL.js will exchange the <code>refresh_token</code> while request token silently for a new access token when needed.</p>
<h3 id="How-to-change-token-expiration-time"><a href="#How-to-change-token-expiration-time" class="headerlink" title="How to change token expiration time?"></a>How to change token expiration time?</h3><p>Please check this <a href="https://stackoverflow.com/questions/31162257/azure-oauth-how-to-change-token-expiration-time">answer from StackOverflow</a>.</p>
<h3 id="InteractionRequiredAuthError-AADSTS50058-A-silent-sign-in-request-was-sent-but-no-user-is-signed-in"><a href="#InteractionRequiredAuthError-AADSTS50058-A-silent-sign-in-request-was-sent-but-no-user-is-signed-in" class="headerlink" title="InteractionRequiredAuthError: AADSTS50058: A silent sign-in request was sent but no user is signed in."></a>InteractionRequiredAuthError: AADSTS50058: A silent sign-in request was sent but no user is signed in.</h3><p>This error need interaction sign in, thus catch the error and call <code>acquireTokenRedirect</code> method to sign in.</p>
<p>If the error message contains like this “The cookies used to represent the user’s session were not sent in the request to Azure AD. This could happen if the user is using Internet Explorer or Edge, and the web app sending the silent sign-in request is in different IE security zone than the Azure AD endpoint (login.microsoftonline.com).”, upgrade your MSAL.js v1.x to v2.x. Check more details <a href="https://github.com/AzureAD/microsoft-authentication-library-for-js/issues/1765">here</a>.</p>
<h3 id="The-frame-attempting-navigation-of-the-top-level-window-is-sandboxed-but-the-flag-of-‘allow-top-navigation’-or-‘allow-top-navigation-by-user-activation’-is-not-set"><a href="#The-frame-attempting-navigation-of-the-top-level-window-is-sandboxed-but-the-flag-of-‘allow-top-navigation’-or-‘allow-top-navigation-by-user-activation’-is-not-set" class="headerlink" title="The frame attempting navigation of the top-level window is sandboxed, but the flag of ‘allow-top-navigation’ or ‘allow-top-navigation-by-user-activation’ is not set."></a>The frame attempting navigation of the top-level window is sandboxed, but the flag of ‘allow-top-navigation’ or ‘allow-top-navigation-by-user-activation’ is not set.</h3><p>This error usually occurred while requesting token, mostly it’s caused by wrong reply URL which iframe could not load it to request token silently. So make sure your reply URL pointing to the blank static HTML resource is right. Additional, this error message is somehow confusing cause it does not tell the root cause directly, check more details <a href="https://github.com/AzureAD/microsoft-authentication-library-for-js/issues/1199">here</a>.</p>
<h3 id="BrowserAuthError-pcke-not-created-The-PCKE-code-challenge-and-verifier-could-not-be-generated"><a href="#BrowserAuthError-pcke-not-created-The-PCKE-code-challenge-and-verifier-could-not-be-generated" class="headerlink" title="BrowserAuthError: pcke_not_created: The PCKE code challenge and verifier could not be generated."></a>BrowserAuthError: pcke_not_created: The PCKE code challenge and verifier could not be generated.</h3><p>Check the protocol and be sure it’s HTTPS.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow">Microsoft identity platform and OAuth 2.0 authorization code flow</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-overview">What is the Microsoft identity platform?</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/auth-oauth2">OAuth 2.0 authentication with Azure Active Directory</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/scenario-spa-sign-in">Single-page application: Sign-in and Sign-out</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/scenario-spa-acquire-token">Single-page application: Acquire a token to call an API</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-client-application-configuration">MSAL Application configuration options</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent">Permissions and consent in the Microsoft identity platform</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-configurable-token-lifetimes">Configurable token lifetimes in the Microsoft identity platform</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/id-tokens">Microsoft identity platform ID tokens</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens">Microsoft identity platform access tokens</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app">Quickstart: Register an application with the Microsoft identity platform</a></li>
</ul>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>oauth</tag>
        <tag>azure</tag>
        <tag>aad</tag>
        <tag>auth</tag>
        <tag>msal</tag>
        <tag>microsoft-identity</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里，江湖再见</title>
    <url>/2018/goodbye-alibaba/</url>
    <content><![CDATA[<p>还记得刚来阿里听到“一年香，三年陈，五年醇”的说法时，内心想着一定要至少待满五年再走；也还记得在争取转岗时，感到前途一片迷茫，每天都不想来上班，但也没想过要离开阿里。然而此时，精神上非常享受现在工作的我，身体扛不住了，不得不先离开这片江湖。</p>
<p>于是，感恩在阿里的这八百余天，如同老人们一样，写下这篇离职帖作为告别吧。</p>
<span id="more"></span>


<p>我于 16 年作为应届生加入阿里，那会在台湾读硕士，为毕业论文挣扎，错过了国内的秋招。16 年春的时候，经若远师兄内推加入了阿里。<a href="https://joouis.com/2018/interviews-for-the-offer-of-alibaba/">过程其实很曲折，技术面面了 7 轮，全是电话和视频面，差点就挂了</a>，感谢最后峰哥和珈夜给我机会，把我带进了阿里的大门，也让我进入了互联网行业。</p>
<p>我此前一直从事嵌入式相关的开发，来阿里前以为做 ARM Trustzone 相关的东西，结果没想到入职第一天便“拥抱变化”转行做了 Web 前端开发（还不是特别互联网的那种），所在小组的主要产品是基于 Atom (Electron) 二次开发的 YunOS IDE。那段日子过得比较苦，没有产品、设计资源，除了技术开发，需求梳理、外观设计包括后面的客服答疑都得自己来，同时我之前一直是 Terminal + VIM 党，IDE 相关的业务背景为 0，加上前端储备几乎为 0…这里必须要感谢第一任主管晓璐给了我很长一段时间适应和学习，至少在着陆时没有脑袋直接着地，连滚带爬还能往前苟活。</p>
<p>那会我个人的状态不好，YunOS 部门状态更差：看不清方向，看不到未来，项目说做就做、说停就停，CEO 发给全员的邮件里自己打 3.25，接着整个 BU 3.25。更可怕的是，YunOS 给人一种强烈的国企氛围，都烂成这样了，各个群里都还是随缘点赞的祥和氛围，除了开始有人陆续离开。作为一名 Web 前端开发，我当时危机感特别强，也在犹豫要不要继续干前端。大家都说你很聪明，技术功底不错，但你没法拿出事实证明自己！开发吃的是技术饭，而小组那会情况很不理想：UI 框架在 2017 年上半年才玩了半年 Vue，之前是 Backbone，React 在后来才被少数模块使用；Node 服务莫名采用了针对淘系业务产出的 Midway.js 框架，diamond 是啥不知道，就看日志里打了一堆东西；没人搞明白 SSR 和 VM，乱用模板引擎；没有文件版本号维度管理；没人关注性能优化；缺少自动化代码打包、构建、发布 CDN 等一整套完整的流程；没有自适应和无线端开发的业务和经验；等等。</p>
<p>这里并非指责任何人和事，毕竟时间过去那么久，已然成为一段经历。只想说明当时的我意识到太多问题，慌了！想了很久，决定在入职不满一年的情况下尝试转岗，去业务第一线，继续做前端。</p>
<p>转岗给了我很大的信心，聊过的几个团队都愿意接受我，这让我很感动。但卡住我的最大问题是入职未满两年，以及 YunOS 那会“号称”冻结转岗（因为大家没见到集团的通知，都是口口相传）。最终在珈夜的沟通与帮助下，“抗争”了几个月，我在 17 年底终于加入 Lazada 卖家团队。</p>
<p>Lazada 的工作量非常大在加入前就早有耳闻，那会打听的时候就有好几个人劝不要来，但我就想好好体验一把“地狱模式”，弥补过去一年成长的缓慢。而给我这个机会的是现任主管 Tank 和大老板 Gary。Gary 作为男神级人物，老阿里人，82 年的 P9，业务思考、团队管理、沟通能力都让人十分佩服。而 Tank 则是让我义无反顾愿意加入的理由。试想今天有一位候选人与你联系想主动转岗，但受限于集团政策，你会怎么办？大多数 TL 都是友好而简洁地表示以后有机会再联系，这合情合理。但 Tank 和我说了不少关于工作上的建议，即便我不能过去，但依然非常诚恳、希望能帮助我。当然除了有情有义，他也年轻有为，28 岁加入阿里时就是 P7，带过团队。事实证明这个选择没有错，卖家团队配置齐全、高手如云、比较团结。在与产品、设计、后端以及客户端同学的配合切磋中，在各种业务场景和技术方案的高压下，我被虐得很爽，感受到了成长的滋味。此外对内与多个部门合作、对外响应多国的业务同学甚至用户，着实打开了我的眼界。可以这么说，在 Lazada 的这段时光，才让我有种真正进入阿里的感觉。</p>
<p>然而在精神非常享受的时候，我的身体却有点跟不上节奏了。颈椎问题以往晚上才会开始冰凉刺痛，现在刚到下午就开始提醒我要活动一下。此外由于免疫力下降，最近几个月皮肤出了一些问题，目前还好，但看了网上一些病情严重的案例，有点被吓到。再加上之前赤铁去世的事，让我很震惊，他是我进阿里的面试官之一，一位正值壮年的前辈就这么走了，这件事又令我想了很久。</p>
<p>我决定离开，去外企，多一点个人时间休养身心。</p>
<p>离开的第一个原因上面已经说了，第二个原因是我不喜欢余杭。虽说很多同事在周边买了房，但我始终认为余杭配不上阿里。环境，素质，基建，房价，哪一个拿得出手？但这种地域黑的观点说出来难免被喷，就到此为止。</p>
<p>得益于在 Lazada 扎实的工作经历和技术打磨，我在裸面的情况下把想拿的 Offer 基本上都拿到了，最终选择去微软亚洲工程院做机器学习相关的事。选微软其实很简单，一是即使现在中国互联网盛行、外企的人才竞争力下降，但王坚博士等一票优秀的前辈都是从那里出来（不过不少是从 MSRA 来的）滋润了阿里，我想去看看；二是刚好有个机会可以从工程角度再次接触人工智能方面的东西，我也想往这个方向看看，同时不会和互联网行业太脱节。</p>
<p>两年的时光过得太快，经历了许多。现在回头想想，纵使是出了非常多幺蛾子、见识了不少奇葩，也都是满满的人生收获。除了专业和心智上的成长外，最珍贵的就是认识了一帮优秀的同学，有前面提过的一些前辈，也有许多同龄人。珈夜、瀚雷、卖家团队的前端小伙伴们、YunOS 相互取暖的基友们、畅谈技术的三哥、给我抛过橄榄枝的剑翘、羽括等等等等，是你们让我感受到了“一群有情有义的人，在一起做有价值的事情”。</p>
<p>阿里这个大平台使我们相识相聚，就让我们江湖再见吧。</p>
]]></content>
      <categories>
        <category>技术人生谈</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>leave</tag>
      </tags>
  </entry>
  <entry>
    <title>吉他保养简记</title>
    <url>/2021/guitar-maintenance-note/</url>
    <content><![CDATA[<h2 id="电吉他指板与漆面"><a href="#电吉他指板与漆面" class="headerlink" title="电吉他指板与漆面"></a>电吉他指板与漆面</h2><h3 id="品丝"><a href="#品丝" class="headerlink" title="品丝"></a>品丝</h3><p>品丝如果有锈迹可使用 MusicNomad MN104 品丝抛光剂打磨，注意使用品丝护理片或在打磨前贴上胶带以保护指板。如果观察品丝缝隙有较多污渍，可用小勾刀轻轻刮掉。</p>
<h3 id="指板"><a href="#指板" class="headerlink" title="指板"></a>指板</h3><ul>
<li>玫瑰木：使用 Dunlop 6524 指板清洁剂和 Dunlop 6532 深层护理，预算有限也可使用 Dunlop 6554 柠檬油。</li>
<li>枫木：<ul>
<li>上过油漆，用布擦拭。</li>
<li>无漆，用沾水的布擦拭，不要使用任何护理品。</li>
</ul>
</li>
<li>石墨、碳纤维：用布擦拭即可。</li>
<li>TBD：烤枫木、乌木。</li>
</ul>
<h3 id="琴体"><a href="#琴体" class="headerlink" title="琴体"></a>琴体</h3><ul>
<li>聚酯漆：如墨芬和日芬，用沾水的布擦拭即可。</li>
<li>聚氨酯漆：现代琴居多，使用 Dunlop 654 上光清洁剂和 Dunlop 6574 抛光巴西棕榈乳液。抛光先将乳液抹匀，然后使用电磨机配抛光棉抛光。</li>
<li>硝基漆：复古琴居多，用布擦干后使用 Prefox AC201 蜂蜡抛光。</li>
<li>哑光漆：如 James Tyler，使用 Zippo 油擦拭。</li>
</ul>
<h2 id="电吉他状态调节"><a href="#电吉他状态调节" class="headerlink" title="电吉他状态调节"></a>电吉他状态调节</h2><h3 id="检查琴颈"><a href="#检查琴颈" class="headerlink" title="检查琴颈"></a>检查琴颈</h3><ul>
<li>方法一：变调夹夹住第一品，手指按住六弦最后一格，看 8 品的弦距是否在 0.25mm 左右，大于该数值说明琴颈过弯需调直，小于则说明过直需放松。</li>
<li>方法二：使用琴颈尺观察。</li>
</ul>
<h3 id="调节琴颈"><a href="#调节琴颈" class="headerlink" title="调节琴颈"></a>调节琴颈</h3><p>以复古琴为例，松琴弦后用变调夹夹住 1 品，拧螺丝拆下琴颈。使用一字螺丝刀调节琴颈内的钢筋，若需调直则顺时针方向旋转，一次不要超过 30°。上螺丝时对角顺序安装。</p>
<h3 id="调节琴桥"><a href="#调节琴桥" class="headerlink" title="调节琴桥"></a>调节琴桥</h3><p>根据指板弧度选择对应的弧度尺。先调节琴码使六弦 12 品弦距 2mm、1弦 12 品弦距 1.6mm，将弧度尺放至琴弦下，挨个调节其他琴码使所有琴弦贴合弧度尺，可以拨动琴弦看是否会被弧度尺闷住。若琴码有两颗螺丝，则要注意将琴码调平。</p>
<p>对于 Gibson 类型的一体琴桥，由于其弧度是固定的，只需使用扳手调节一弦和六弦的高度即可。拉弦板为了获得最大的张力可调至最低，注意不要角度过大使琴弦碰到琴桥。还可以将琴弦反向穿过拉弦板再压上琴桥。</p>
<h3 id="调节拾音器的高度"><a href="#调节拾音器的高度" class="headerlink" title="调节拾音器的高度"></a>调节拾音器的高度</h3><p>如果不知道要怎么调可以参考这篇<a href="https://docs.google.com/spreadsheets/d/16_4b36FBkg4yOzCJkDjwMOTOMtoBY1Qri2fJ7lc7R0w/edit?usp=sharing">文档</a>的数据，具体还是以琴的实际听感为准。此外更换品牌拾音器通常可以参考官方提供的数值，以Lace拾音器为例：</p>
<ul>
<li>按住高音<code>E</code>弦的21品，琴弦到拾音器的高度为：琴颈 1.5mm，中间 2.0mm，琴桥 1.0mm；</li>
<li>按住低音<code>E</code>弦的21品，琴弦到拾音器的高度为：琴颈 2.5mm，中间 3.5mm，琴桥 2.0mm；</li>
</ul>
<p><img data-src="https://cdn.joouis.com/guitar-maintenance-note-1.png"></p>
<p>如果一把琴的两个或三个拾音器的功率不同，将它们调至同一高度后，需对功率较小的拾音器再次调节，使其音量与其他拾音器音量保持一致。如果同时有单拾音器和双拾音器，可以不追求音量平衡，发挥各自拾音器的特色。</p>
<h2 id="冬季木吉他保养"><a href="#冬季木吉他保养" class="headerlink" title="冬季木吉他保养"></a>冬季木吉他保养</h2><h3 id="湿度控制是关键（40-55-）"><a href="#湿度控制是关键（40-55-）" class="headerlink" title="湿度控制是关键（40%-55%）"></a>湿度控制是关键（40%-55%）</h3><ul>
<li>加湿器：冷蒸发式 &gt; 超声波式</li>
<li>吉他恒湿柜</li>
<li>音孔加湿器</li>
<li>塑封袋一面打几个小孔，里面放一块干净湿润的毛巾，将塑封袋放入木吉他音孔中</li>
</ul>
<h3 id="保养tips"><a href="#保养tips" class="headerlink" title="保养tips"></a>保养tips</h3><ul>
<li>一段时间不弹的琴放琴盒，琴弦松一个全音</li>
<li>擦指板<ul>
<li>均匀喷洒 Dunlop 6524 指板清洁剂后，如果特别脏可先用毛刷轻刷，然后折叠纸巾（使用琴布略微有点浪费）擦拭</li>
<li>使用纸巾按压吸收 Dunlop 6532 的护理油，再用纸巾轻轻擦拭指板</li>
</ul>
</li>
<li>擦琴体<ul>
<li>选一块好的琴布：表面无较硬颗粒、有一定的韧性、化纤含量少擦拭久了发热量小</li>
<li>对折琴布到可以握住，擦拭的面积为长条型，检查擦拭区域不脏、无杂质</li>
<li>将 Dunlop 654 清洁剂喷在琴布擦拭区域，轻擦琴体（有污渍的地方），擦拭时朝一个方向</li>
</ul>
</li>
</ul>
<h2 id="参考与推荐视频"><a href="#参考与推荐视频" class="headerlink" title="参考与推荐视频"></a>参考与推荐视频</h2><ul>
<li><a href="https://www.bilibili.com/video/BV1pt41117QC">【光头说】自己给吉他Setup：Nut和Relief【Trebor_TTTTT】</a></li>
<li><a href="https://www.bilibili.com/video/BV1at411979J">【光头说】自己给吉他Setup2：Saddle【Trebor_TTTTT】</a></li>
<li><a href="https://www.bilibili.com/video/BV1st411q796">【光头说】自己给吉他Setup3：八度音准【Trebor_TTTTT】</a></li>
<li><a href="https://www.bilibili.com/video/BV1Bt411e7jr">【光头说】自己给吉他Setup4：拾音器高度【Trebor_TTTTT】</a></li>
<li><a href="https://www.bilibili.com/video/BV1pb411n7Db">【光头说】自己给吉他做Setup：木吉他篇【Trebor_TTTTT】</a></li>
<li><a href="https://www.bilibili.com/video/BV1t54y1b7Hq">【Tubes&amp;Tone】我如何调节拾音器Pole Piece？</a></li>
<li><a href="https://www.thegearpage.net/board/index.php?threads/pickup-height-specs-sheet.1678657/">Pickup Height Specs</a></li>
<li><a href="https://www.bilibili.com/video/BV15U4y1K7bg">冬季吉他保养基础攻略</a></li>
<li><a href="https://www.bilibili.com/video/BV19741127nm">夏式吉他保养调整一条龙服务初探</a></li>
<li><a href="https://www.bilibili.com/video/BV1tx41197F3">电吉他的调节与保养流程，曲度、弦距、八度、琴桥等所有都在里面了</a></li>
<li><a href="https://www.bilibili.com/video/BV16A411J7P4">怎样绕线不打结？</a></li>
<li><a href="https://www.bilibili.com/video/BV1y54y1r7j1">【天线吉他实验室】简单实用调琴指南，教你如何调节出满意舒适的吉他手感</a></li>
<li><a href="https://www.bilibili.com/video/BV1Xv411j7hL">电吉他为什么爱打品？极度硬核讲解＆品丝找平修复过程</a></li>
<li><a href="https://www.bilibili.com/video/BV11Y411p7Z5">吉他保养之【如何擦琴】小白科普向 吉他要天天擦吗？你会擦琴吗？如何判断漆面和清洁液是否匹配</a></li>
<li><a href="https://www.bilibili.com/video/BV1454y1Y7JT">【小白扫盲】雅马哈技师如何手感调试</a></li>
<li><a href="https://lacemusic.com/products/lace-sensor-gold-single-coil-pickup">Lace Sensor Gold - Single Coil Pickup</a></li>
</ul>
]]></content>
      <categories>
        <category>爱乐之城</category>
      </categories>
      <tags>
        <tag>music</tag>
        <tag>note</tag>
        <tag>guitar</tag>
        <tag>electric guitar</tag>
        <tag>maintenance</tag>
        <tag>fingerboard</tag>
        <tag>finish</tag>
        <tag>pickup</tag>
      </tags>
  </entry>
  <entry>
    <title>Hands-on linear regression for machine learning</title>
    <url>/2020/hands-on-linear-regression-for-ml/</url>
    <content><![CDATA[<h2 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h2><p>This is the sharing session for my team, the goal is to quick ramp up the essential knowledges for linear regression case to experience how machine learning works during 1 hour. This sharing will recap basic important concepts, introduce runtime environments, and go through the codes on Notebooks of Azure Machine Learning Studio platform.</p>
<span id="more"></span>



<h2 id="Recap-of-basic-concepts"><a href="#Recap-of-basic-concepts" class="headerlink" title="Recap of basic concepts"></a>Recap of basic concepts</h2><p><strong>Do not worry about these theories if you can’t catch up, just take it as an intro.</strong></p>
<h3 id="Steps-of-machine-learning"><a href="#Steps-of-machine-learning" class="headerlink" title="Steps of machine learning"></a>Steps of machine learning</h3><ol start="0">
<li>Get familiar with dataset, do preprocessing works.</li>
<li>Define the model, like linear model or neural network.</li>
<li>Define the goodness/cost of model, metrics can be error, cross entropy, etc.</li>
<li>Calculate the best function by optimization algorithms.</li>
</ol>
<h3 id="Linear-model"><a href="#Linear-model" class="headerlink" title="Linear model"></a>Linear model</h3><p>Let’s start with the simplest linear model <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="13.966ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6173 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1511,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2177.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3233.6,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(3949.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(4743.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(5744,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>, you can also try more complex model if you get trouble in underfitting.</p>
<p><em>Question: How to initialize parameters?</em></p>
<h3 id="Generalization"><a href="#Generalization" class="headerlink" title="Generalization"></a>Generalization</h3><p>The model’s ability to adapt properly to new, previously unseen data, drawn from the same distribution as the one used to create the model.</p>
<p><img data-src="https://cdn.joouis.com/hands-on-linear-regression-for-ml-1.png" alt="Goodness of fit, https://bit.ly/2JhniSc"></p>
<ul>
<li>Underfitting: model is too simple to learn the underlying structure of the data (large bias)</li>
<li>Overfitting: model is too complex relative to the amount and noisiness of the training data (large variance)</li>
</ul>
<p><em>Solutions: <a href="#References-and-resources">References and resources</a>, or <a href="https://towardsdatascience.com/underfitting-and-overfitting-in-machine-learning-and-how-to-deal-with-it-6fe4a8a49dbf">Underfitting and Overfitting in machine learning and how to deal with it</a>.</em></p>
<h3 id="Loss-Cost-function"><a href="#Loss-Cost-function" class="headerlink" title="Loss/Cost function"></a>Loss/Cost function</h3><p>There is a dataset for training, it looks like: <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.144ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 3157.8 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1397.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(1842.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(2768.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.144ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 3157.8 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1397.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(1842.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mn" transform="translate(523,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2768.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, …, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.464ex" height="2.398ex" role="img" focusable="false" viewBox="0 -810 3299.2 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1468.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(1912.9,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mi" transform="translate(523,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(2910.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>. The error of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.034ex" height="1.904ex" role="img" focusable="false" viewBox="0 -830.4 899 841.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,363) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container> should be <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.652ex" height="2.444ex" role="img" focusable="false" viewBox="0 -830.4 4266.3 1080.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mi" transform="translate(523,363) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1039.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2039.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(2589.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2978.4,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(3550.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(422,363) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>, we can add all errors of data to define our loss function:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="23.23ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 10267.5 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(681,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1070,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1620,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2286.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(3342.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4786.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(5175.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mi" transform="translate(523,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(6214.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(7215,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(7765,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8154,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(9052.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msup" transform="translate(9441.9,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="29.694ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 13124.6 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(681,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1070,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1786,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2230.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2659.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3326.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(4382.2,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5826.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(6215.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mi" transform="translate(523,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(7254.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(8254.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8643.6,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="msup" transform="translate(9359.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(10480.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(11481,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(11910,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msup" transform="translate(12299,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p>Obviously the smaller loss, the better model. So our target function should be:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.06ex;" xmlns="http://www.w3.org/2000/svg" width="17.589ex" height="3.757ex" role="img" focusable="false" viewBox="0 -750 7774.4 1660.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,413) scale(0.707)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g><g data-mml-node="mo" transform="translate(1317.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2373.1,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(892,0)"></path></g><g data-mml-node="mo" transform="translate(3765.1,0)"><path data-c="2061" d=""></path></g><g data-mml-node="munder" transform="translate(3931.8,0)"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(639,-665.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g><g data-mml-node="mi" transform="translate(5765.4,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(6446.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6835.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(7385.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p>Average value would be better than total sum, then we get the actual function that needs to be computed:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="36.043ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 15931 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(749,413) scale(0.707)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g><g data-mml-node="mo" transform="translate(1152.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(1597.2,0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(462,413) scale(0.707)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g><g data-mml-node="mo" transform="translate(2740.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3796.3,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(892,0)"></path></g><g data-mml-node="mo" transform="translate(5188.3,0)"><path data-c="2061" d=""></path></g><g data-mml-node="munder" transform="translate(5355,0)"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(330.4,-657.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(994,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(7188.7,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8632.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9021.7,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mi" transform="translate(523,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(10060.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(11061.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(11450.1,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="msup" transform="translate(12166.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(13287.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(14287.5,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(14716.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msup" transform="translate(15105.5,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p>Not big deal, just minimize the mean square error of our trivial linear model.</p>
<h3 id="Vectorized-form"><a href="#Vectorized-form" class="headerlink" title="Vectorized form"></a>Vectorized form</h3><p>You may have heard “feature” before, for each of data <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.034ex" height="1.904ex" role="img" focusable="false" viewBox="0 -830.4 899 841.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,363) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>, if the number of its features is <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>, then the actual model should be:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.576ex;" xmlns="http://www.w3.org/2000/svg" width="37.065ex" height="2.568ex" role="img" focusable="false" viewBox="0 -880.4 16382.7 1135.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mi" transform="translate(523,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1094.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2150.5,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(3525.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(4525.5,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msubsup" transform="translate(5678.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-247) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(6908.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(7909.1,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="msubsup" transform="translate(9061.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-247) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(10292.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(11292.6,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="mo" transform="translate(12686.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(13687.1,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,-150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msubsup" transform="translate(15106.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(605,-247) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></p>
<p>Kind of verbose right? Let’s use <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.88ex" height="1.005ex" role="img" focusable="false" viewBox="0 -444 831 444"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D430" d="M624 444Q636 441 722 441Q797 441 800 444H805V382H741L593 11Q592 10 590 8T586 4T584 2T581 0T579 -2T575 -3T571 -3T567 -4T561 -4T553 -4H542Q525 -4 518 6T490 70Q474 110 463 137L415 257L367 137Q357 111 341 72Q320 17 313 7T289 -4H277Q259 -4 253 -2T238 11L90 382H25V444H32Q47 441 140 441Q243 441 261 444H270V382H222L310 164L382 342L366 382H303V444H310Q322 441 407 441Q508 441 523 444H531V382H506Q481 382 481 380Q482 376 529 259T577 142L674 382H617V444H624Z"></path></g></g></g></g></svg></mjx-container> to represent all feature weights <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.608ex" height="1.342ex" role="img" focusable="false" viewBox="0 -443 1152.6 593"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container> to <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="3.212ex" height="1.359ex" role="img" focusable="false" viewBox="0 -443 1419.8 600.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,-150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container> as well as the bias term <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex;" xmlns="http://www.w3.org/2000/svg" width="2.608ex" height="1.377ex" role="img" focusable="false" viewBox="0 -443 1152.6 608.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></svg></mjx-container>, which called <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container> before. Same way, use <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.373ex" height="1.005ex" role="img" focusable="false" viewBox="0 -444 607 444"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g></g></g></svg></mjx-container> to represent all the feature values <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container> to <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.887ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 1275.8 599.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container> with <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.375ex" role="img" focusable="false" viewBox="0 -442 1008.6 607.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></svg></mjx-container> is equal to 1. Then we can transform linear regression model to the vectorized form:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="17.721ex" height="2.398ex" role="img" focusable="false" viewBox="0 -810 7832.8 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mo" transform="translate(767.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(1823.6,0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(609,-150) scale(0.707)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g><g data-mml-node="mo" transform="translate(2988.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3377.8,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(3949.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4616.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5672.4,0)"><g data-mml-node="mi"><path data-c="1D430" d="M624 444Q636 441 722 441Q797 441 800 444H805V382H741L593 11Q592 10 590 8T586 4T584 2T581 0T579 -2T575 -3T571 -3T567 -4T561 -4T553 -4H542Q525 -4 518 6T490 70Q474 110 463 137L415 257L367 137Q357 111 341 72Q320 17 313 7T289 -4H277Q259 -4 253 -2T238 11L90 382H25V444H32Q47 441 140 441Q243 441 261 444H270V382H222L310 164L382 342L366 382H303V444H310Q322 441 407 441Q508 441 523 444H531V382H506Q481 382 481 380Q482 376 529 259T577 142L674 382H617V444H624Z"></path></g></g><g data-mml-node="mo" transform="translate(6725.6,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7225.8,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g></g></g></svg></mjx-container></p>
<p>Thus our loss function of vectorized form is:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="28.125ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 12431.3 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D430" d="M624 444Q636 441 722 441Q797 441 800 444H805V382H741L593 11Q592 10 590 8T586 4T584 2T581 0T579 -2T575 -3T571 -3T567 -4T561 -4T553 -4H542Q525 -4 518 6T490 70Q474 110 463 137L415 257L367 137Q357 111 341 72Q320 17 313 7T289 -4H277Q259 -4 253 -2T238 11L90 382H25V444H32Q47 441 140 441Q243 441 261 444H270V382H222L310 164L382 342L366 382H303V444H310Q322 441 407 441Q508 441 523 444H531V382H506Q481 382 481 380Q482 376 529 259T577 142L674 382H617V444H624Z"></path></g></g><g data-mml-node="mo" transform="translate(864,413) scale(0.707)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g><g data-mml-node="mo" transform="translate(1545.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(2601.1,0)"><g data-mml-node="mn" transform="translate(270,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220,-686)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><rect width="800" height="60" x="120" y="220"></rect></g><g data-mml-node="munder" transform="translate(3807.8,0)"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(539.7,-600) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D430" d="M624 444Q636 441 722 441Q797 441 800 444H805V382H741L593 11Q592 10 590 8T586 4T584 2T581 0T579 -2T575 -3T571 -3T567 -4T561 -4T553 -4H542Q525 -4 518 6T490 70Q474 110 463 137L415 257L367 137Q357 111 341 72Q320 17 313 7T289 -4H277Q259 -4 253 -2T238 11L90 382H25V444H32Q47 441 140 441Q243 441 261 444H270V382H222L310 164L382 342L366 382H303V444H310Q322 441 407 441Q508 441 523 444H531V382H506Q481 382 481 380Q482 376 529 259T577 142L674 382H617V444H624Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(5641.4,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7085.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(7474.4,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mi" transform="translate(523,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(8513.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(9513.8,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D430" d="M624 444Q636 441 722 441Q797 441 800 444H805V382H741L593 11Q592 10 590 8T586 4T584 2T581 0T579 -2T575 -3T571 -3T567 -4T561 -4T553 -4H542Q525 -4 518 6T490 70Q474 110 463 137L415 257L367 137Q357 111 341 72Q320 17 313 7T289 -4H277Q259 -4 253 -2T238 11L90 382H25V444H32Q47 441 140 441Q243 441 261 444H270V382H222L310 164L382 342L366 382H303V444H310Q322 441 407 441Q508 441 523 444H531V382H506Q481 382 481 380Q482 376 529 259T577 142L674 382H617V444H624Z"></path></g></g><g data-mml-node="mi" transform="translate(864,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msup" transform="translate(10671.8,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mi" transform="translate(640,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msup" transform="translate(11605.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p>Notice that <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.88ex" height="1.005ex" role="img" focusable="false" viewBox="0 -444 831 444"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D430" d="M624 444Q636 441 722 441Q797 441 800 444H805V382H741L593 11Q592 10 590 8T586 4T584 2T581 0T579 -2T575 -3T571 -3T567 -4T561 -4T553 -4H542Q525 -4 518 6T490 70Q474 110 463 137L415 257L367 137Q357 111 341 72Q320 17 313 7T289 -4H277Q259 -4 253 -2T238 11L90 382H25V444H32Q47 441 140 441Q243 441 261 444H270V382H222L310 164L382 342L366 382H303V444H310Q322 441 407 441Q508 441 523 444H531V382H506Q481 382 481 380Q482 376 529 259T577 142L674 382H617V444H624Z"></path></g></g></g></g></svg></mjx-container> actually is <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="5.481ex" height="1.077ex" role="img" focusable="false" viewBox="0 -465 2422.4 476"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(1544.4,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>-dimensional matrix.</p>
<p>In addition, deep learning depends on matrix calculations especially, it will take advantage of GPU to speed up model training.</p>
<h3 id="Closed-form-solution"><a href="#Closed-form-solution" class="headerlink" title="Closed-form solution"></a>Closed-form solution</h3><p>As we already know the values of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.373ex" height="1.005ex" role="img" focusable="false" viewBox="0 -444 607 444"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.109ex" height="2.296ex" role="img" focusable="false" viewBox="0 -810 490 1015"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container>, it’s easy to calculate the <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.88ex" height="1.005ex" role="img" focusable="false" viewBox="0 -444 831 444"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D430" d="M624 444Q636 441 722 441Q797 441 800 444H805V382H741L593 11Q592 10 590 8T586 4T584 2T581 0T579 -2T575 -3T571 -3T567 -4T561 -4T553 -4H542Q525 -4 518 6T490 70Q474 110 463 137L415 257L367 137Q357 111 341 72Q320 17 313 7T289 -4H277Q259 -4 253 -2T238 11L90 382H25V444H32Q47 441 140 441Q243 441 261 444H270V382H222L310 164L382 342L366 382H303V444H310Q322 441 407 441Q508 441 523 444H531V382H506Q481 382 481 380Q482 376 529 259T577 142L674 382H617V444H624Z"></path></g></g></g></g></svg></mjx-container> by Normal Equation:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="17.011ex" height="2.583ex" role="img" focusable="false" viewBox="0 -891.7 7518.8 1141.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D430" d="M624 444Q636 441 722 441Q797 441 800 444H805V382H741L593 11Q592 10 590 8T586 4T584 2T581 0T579 -2T575 -3T571 -3T567 -4T561 -4T553 -4H542Q525 -4 518 6T490 70Q474 110 463 137L415 257L367 137Q357 111 341 72Q320 17 313 7T289 -4H277Q259 -4 253 -2T238 11L90 382H25V444H32Q47 441 140 441Q243 441 261 444H270V382H222L310 164L382 342L366 382H303V444H310Q322 441 407 441Q508 441 523 444H531V382H506Q481 382 481 380Q482 376 529 259T577 142L674 382H617V444H624Z"></path></g></g><g data-mml-node="mo" transform="translate(415.5,18) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1108.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2164.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2553.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mi" transform="translate(640,413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3741.4,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="msup" transform="translate(4348.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5724,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mi" transform="translate(640,413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6911.8,0)"><g data-mml-node="mi"><path data-c="1D432" d="M84 -102Q84 -110 87 -119T102 -138T133 -149Q148 -148 162 -143T186 -131T206 -114T222 -95T234 -76T243 -59T249 -45T252 -37L269 0L96 382H26V444H34Q49 441 146 441Q252 441 270 444H279V382H255Q232 382 232 380L337 151L442 382H394V444H401Q413 441 495 441Q568 441 574 444H580V382H510L406 152Q298 -84 297 -87Q269 -139 225 -169T131 -200Q85 -200 54 -172T23 -100Q23 -64 44 -50T87 -35Q111 -35 130 -50T152 -92V-100H84V-102Z"></path></g></g></g></g></svg></mjx-container></p>
<p>Check out this <a href="https://www.coursera.org/lecture/machine-learning/normal-equation-2DKxQ">online course video</a> (about 16min) from Andrew Ng to learn more.</p>
<p>Yes we’re done. Our introduction is here 🤣🤣🤣 .</p>
<p><em>Question: How to deal with complex models? How about computation burden?</em></p>
<h3 id="Gradient-Descent"><a href="#Gradient-Descent" class="headerlink" title="Gradient Descent"></a>Gradient Descent</h3><blockquote>
<p>Gradient Descent is a <strong>generic optimization algorithm</strong> capable of finding optimal solution to a wide range of problems.</p>
<p>Gradient descent is a <strong>first-order iterative optimization algorithm</strong> for finding a <strong>local minimum</strong> of a differentiable function.</p>
</blockquote>
<p>Our loss function is differentiable indeed, so we can use it to find the local minimum (also the global minimum in this case). Let’s get it by one chart.</p>
<p><img data-src="https://cdn.joouis.com/hands-on-linear-regression-for-ml-2.png" alt="Gradient Descent, Hands-On Machine Learning by Aurélien Géron"></p>
<p>So here is the last equation in this post (I promise, typing these LaTeX expressions really wore me out 🥲 ), the gradient of our loss function:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="36.73ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 16234.5 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(833,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g><g data-mml-node="mo" transform="translate(1791.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(2847.6,0)"><g data-mml-node="mrow" transform="translate(295,676)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(566,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(566,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D430" d="M624 444Q636 441 722 441Q797 441 800 444H805V382H741L593 11Q592 10 590 8T586 4T584 2T581 0T579 -2T575 -3T571 -3T567 -4T561 -4T553 -4H542Q525 -4 518 6T490 70Q474 110 463 137L415 257L367 137Q357 111 341 72Q320 17 313 7T289 -4H277Q259 -4 253 -2T238 11L90 382H25V444H32Q47 441 140 441Q243 441 261 444H270V382H222L310 164L382 342L366 382H303V444H310Q322 441 407 441Q508 441 523 444H531V382H506Q481 382 481 380Q482 376 529 259T577 142L674 382H617V444H624Z"></path></g></g></g></g><rect width="1597" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(4962.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(6018.1,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mfrac" transform="translate(6518.1,0)"><g data-mml-node="mn" transform="translate(270,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220,-686)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><rect width="800" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(7724.8,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9168.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9557.8,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mi" transform="translate(523,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(10597,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(11597.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D430" d="M624 444Q636 441 722 441Q797 441 800 444H805V382H741L593 11Q592 10 590 8T586 4T584 2T581 0T579 -2T575 -3T571 -3T567 -4T561 -4T553 -4H542Q525 -4 518 6T490 70Q474 110 463 137L415 257L367 137Q357 111 341 72Q320 17 313 7T289 -4H277Q259 -4 253 -2T238 11L90 382H25V444H32Q47 441 140 441Q243 441 261 444H270V382H222L310 164L382 342L366 382H303V444H310Q322 441 407 441Q508 441 523 444H531V382H506Q481 382 481 380Q482 376 529 259T577 142L674 382H617V444H624Z"></path></g></g><g data-mml-node="mi" transform="translate(864,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msup" transform="translate(12755.1,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mi" transform="translate(640,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(13689.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14300.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(15300.5,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mi" transform="translate(640,413) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></p>
<p><em>Question: disadvantages of gradient descent?</em></p>
<p><img data-src="https://cdn.joouis.com/hands-on-linear-regression-for-ml-3.png" alt="Gradient Descent pitfalls, Hands-On Machine Learning by Aurélien Géron"></p>
<h4 id="Variants-optimizers"><a href="#Variants-optimizers" class="headerlink" title="Variants optimizers"></a>Variants optimizers</h4><ul>
<li>SGD, Stochastic gradient descent</li>
<li>Adam</li>
<li>Mini-batch gradient descent</li>
<li>Adagrad</li>
</ul>
<h3 id="Training-tips"><a href="#Training-tips" class="headerlink" title="Training tips"></a>Training tips</h3><p>Probably it’s enough for us to dig into the code, so the recap should be stopped here. At last, giving this tips section for some practical training techniques.</p>
<ul>
<li>Hyperparameters tuning/optimization, like pick a good learning rate</li>
<li>L2 (Ridge) regularization</li>
<li>Early stopping</li>
<li>Feature engineering<ul>
<li>Feature selection by recursive feature elimination and cross-validation (<a href="https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.RFECV.html">RFECV</a>)<br><img data-src="https://cdn.joouis.com/hands-on-linear-regression-for-ml-4.png" alt="Recursive feature elimination with cross-validation, https://scikit-learn.org"></li>
<li>Feature scaling like normalization</li>
<li>Data correction for dirty part</li>
<li>Defining and removing outliers</li>
<li>Update model to make it fits dataset better like add high order term for most important feature, or even you can use a neural network if you want 😏</li>
</ul>
</li>
<li>Leveraging K-fold cross validation to split data and evaluate model performance</li>
</ul>
<h2 id="Runtime-environments"><a href="#Runtime-environments" class="headerlink" title="Runtime environments"></a>Runtime environments</h2><h3 id="Local"><a href="#Local" class="headerlink" title="Local"></a>Local</h3><p>I highly recommend using Conda to run your Python code even on Unix-like OS, and <a href="https://docs.conda.io/en/latest/miniconda.html">Miniconda</a> is good to get start.</p>
<blockquote>
<p>Conda as a package manager helps you find and install packages. If you need a package that requires a different version of Python, you do not need to switch to a different environment manager, because conda is also an environment manager. With just a few commands, you can set up a totally separate environment to run that different version of Python, while continuing to run your usual version of Python in your normal environment.</p>
</blockquote>
<h3 id="Cloud"><a href="#Cloud" class="headerlink" title="Cloud"></a>Cloud</h3><p>It’s cloud computing era, we can write and save our code on the cloud and run it at anytime with any web client. Two cloud platforms will be introduced here, I suggest you try both of them and enjoy your experiment.</p>
<p>More specifically, these two products are all based on <a href="https://jupyter.org/">Jupyter Notebook</a>, which provides flexible Python runtime and Markdown document feature, it’s easy to run code snippet just like on the local terminal.</p>
<h4 id="Notebooks-of-Azure-Machine-Learning-Studio"><a href="#Notebooks-of-Azure-Machine-Learning-Studio" class="headerlink" title="Notebooks of Azure Machine Learning Studio"></a>Notebooks of Azure Machine Learning Studio</h4><p>Here is a <a href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-run-jupyter-notebooks">brief introduction</a> of Notebooks of AML Studio, the advantages of this product are:</p>
<ul>
<li>IntelliSense and Monaco Editor adopted from Visual Studio Code are great.</li>
<li>Rich sample notebooks are provided, and the tab view allows user to open several documents with several file types in one page.</li>
<li>An one-stop platform for user to develop their machine learning project, you can take it as cloud IDE (Integrated Development Environment). For example, user can manager their huge datasets by Datasets, and then consume them in Notebooks.</li>
</ul>
<p><img data-src="https://cdn.joouis.com/hands-on-linear-regression-for-ml-5.png" alt="UI of Notebooks of AML Studio"></p>
<h4 id="Google-Colaboratory"><a href="#Google-Colaboratory" class="headerlink" title="Google Colaboratory"></a>Google Colaboratory</h4><p>You can open <code>ipynb</code> file on Google Drive by this product, there are also several advantages:</p>
<ul>
<li>Cleaner and larger workspace.</li>
<li>“Code snippets” feature is interesting, but not smart enough (like intelligent recommendation), nor rich code exmaples.</li>
<li>It will create compute target or VM (virtual machine) for the user automatically.</li>
<li>Download dataset from Google Drive, comment and share are easily.</li>
</ul>
<p><img data-src="https://cdn.joouis.com/hands-on-linear-regression-for-ml-6.png" alt="UI of Google Colab"></p>
<h2 id="Code-snippets"><a href="#Code-snippets" class="headerlink" title="Code snippets"></a>Code snippets</h2><p>You can check sample code on Google Colab <a href="https://colab.research.google.com/drive/131sSqmrmWXfjFZ3jWSELl8cm0Ox5ah3C">here</a>, and codes below will has slight differences.</p>
<h3 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h3><p>To predict the PM2.5 value of first ten hour by other nine hours data.</p>
<h3 id="Data-preprocessing"><a href="#Data-preprocessing" class="headerlink" title="Data preprocessing"></a>Data preprocessing</h3><p>Original data structure looks like this:</p>
<table>
<thead>
<tr>
<th></th>
<th>00:00</th>
<th>01:00</th>
<th>…</th>
<th>23:00</th>
</tr>
</thead>
<tbody><tr>
<td>Feature 1 of day 1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Feature 2 of day 1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>…</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Feature 17 of day 1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Feature 18 of day 1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Feature 1 of day 2</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Feature 2 of day 2</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>…</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>24 columns represent 24 hours, 18 features with every first 20 days of month in one year, we have <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="18.603ex" height="1.717ex" role="img" focusable="false" viewBox="0 -677 8222.4 759"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(1222.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mn" transform="translate(1944.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(3166.7,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mn" transform="translate(3888.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(5166.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(6222.4,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(500,0)"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(1000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1500,0)"></path></g></g></g></svg></mjx-container> rows.</p>
<p><img data-src="https://cdn.joouis.com/hands-on-linear-regression-for-ml-7.png" alt="Dataset preview in AML Studio"></p>
<p>Our target data structure of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.966ex" height="1.552ex" role="img" focusable="false" viewBox="0 -686 869 686"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D417" d="M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z"></path></g></g></g></g></svg></mjx-container> will be:</p>
<table>
<thead>
<tr>
<th></th>
<th>Feature 1 of 1st hour</th>
<th>Feature 1 of 2nd hour</th>
<th>…</th>
<th>Feature 1 of 9th hour</th>
<th>Feature 2 of 1st hour</th>
<th>…</th>
<th>Feature 18 of 9th hour</th>
</tr>
</thead>
<tbody><tr>
<td>10th hour of day 1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>11st hour of day 1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>…</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>24th hour of day 1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1st hour of day 2</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>…</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>Number of columns should be <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="11.941ex" height="1.692ex" role="img" focusable="false" viewBox="0 -666 5278 748"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(1222.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mn" transform="translate(1944.4,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g><g data-mml-node="mo" transform="translate(2722.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(1000,0)"></path></g></g></g></svg></mjx-container>, and rows should be <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="24.26ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 10722.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(1611.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mn" transform="translate(2333.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(3555.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(4555.9,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g><g data-mml-node="mo" transform="translate(5055.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5667.1,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mn" transform="translate(6389.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(7667.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(8722.9,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1000,0)"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(1500,0)"></path></g></g></g></svg></mjx-container>.</p>
<h4 id="Preprocessing"><a href="#Preprocessing" class="headerlink" title="Preprocessing"></a>Preprocessing</h4><p>You may wonder why variable <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.966ex" height="1.552ex" role="img" focusable="false" viewBox="0 -686 869 686"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D417" d="M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z"></path></g></g></g></g></svg></mjx-container> is capital and variable <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="1.373ex" height="1.457ex" role="img" focusable="false" viewBox="0 -444 607 644"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D432" d="M84 -102Q84 -110 87 -119T102 -138T133 -149Q148 -148 162 -143T186 -131T206 -114T222 -95T234 -76T243 -59T249 -45T252 -37L269 0L96 382H26V444H34Q49 441 146 441Q252 441 270 444H279V382H255Q232 382 232 380L337 151L442 382H394V444H401Q413 441 495 441Q568 441 574 444H580V382H510L406 152Q298 -84 297 -87Q269 -139 225 -169T131 -200Q85 -200 54 -172T23 -100Q23 -64 44 -50T87 -35Q111 -35 130 -50T152 -92V-100H84V-102Z"></path></g></g></g></g></svg></mjx-container> is lower-case, just Google matrix notation.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Remove first useless columns: ID, Date, Feature name</span></span><br><span class="line">data = data.iloc[:, <span class="number">3</span>:]</span><br><span class="line"><span class="comment"># Replace "NR" value by 0</span></span><br><span class="line">data[data == <span class="string">'NR'</span>] = <span class="number">0</span></span><br><span class="line">raw_data = data.to_numpy()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cook_raw</span>(<span class="params">raw_data</span>):</span><br><span class="line">  month_data = {}</span><br><span class="line">  <span class="keyword">for</span> month <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">    sample = np.empty([<span class="number">18</span>, <span class="number">480</span>])</span><br><span class="line">    <span class="keyword">for</span> day <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">      sample[:, day * <span class="number">24</span> : (day + <span class="number">1</span>) * <span class="number">24</span>] = raw_data[<span class="number">18</span> * (<span class="number">20</span> * month + day) : <span class="number">18</span> * (<span class="number">20</span> * month + day + <span class="number">1</span>), :]</span><br><span class="line">      month_data[month] = sample</span><br><span class="line"></span><br><span class="line">    X = np.empty([<span class="number">12</span> * <span class="number">471</span>, <span class="number">18</span> * <span class="number">9</span>], dtype = <span class="built_in">float</span>)</span><br><span class="line">    y = np.empty([<span class="number">12</span> * <span class="number">471</span>, <span class="number">1</span>], dtype = <span class="built_in">float</span>)</span><br><span class="line">    <span class="keyword">for</span> month <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">      <span class="keyword">for</span> day <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">        <span class="keyword">for</span> hour <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">24</span>):</span><br><span class="line">          <span class="keyword">if</span> day == <span class="number">19</span> <span class="keyword">and</span> hour &gt; <span class="number">14</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">          <span class="comment"># Vector dim: 18 * 9</span></span><br><span class="line">          X[month * <span class="number">471</span> + day * <span class="number">24</span> + hour, :] = month_data[month][:,day * <span class="number">24</span> + hour : day * <span class="number">24</span> + hour + <span class="number">9</span>].reshape(<span class="number">1</span>, -<span class="number">1</span>)</span><br><span class="line">          <span class="comment"># Value</span></span><br><span class="line">          y[month * <span class="number">471</span> + day * <span class="number">24</span> + hour, <span class="number">0</span>] = month_data[month][<span class="number">9</span>, day * <span class="number">24</span> + hour + <span class="number">9</span>]</span><br><span class="line">    X[X &lt; <span class="number">0</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> X, y</span><br><span class="line"></span><br><span class="line">X, y = cook_raw(raw_data=raw_data)</span><br></pre></td></tr></table></figure>

<h4 id="Feature-engineering-by-adding-quadratice-equation"><a href="#Feature-engineering-by-adding-quadratice-equation" class="headerlink" title="Feature engineering by adding quadratice equation"></a>Feature engineering by adding quadratice equation</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Polynomial regression: quadratic equation</span></span><br><span class="line"><span class="comment"># 10th feature is PM2.5</span></span><br><span class="line">X = np.concatenate((X, X[:, <span class="number">9</span>*<span class="number">9</span> : <span class="number">10</span>*<span class="number">9</span>] ** <span class="number">2</span>), axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<h4 id="Normalization"><a href="#Normalization" class="headerlink" title="Normalization"></a>Normalization</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Normalization</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_normalization</span>(<span class="params">X</span>):</span><br><span class="line">  <span class="comment"># Vectors dim: 18 * 9</span></span><br><span class="line">  mean_x = np.mean(X, axis = <span class="number">0</span>)</span><br><span class="line">  std_x = np.std(X, axis = <span class="number">0</span>)</span><br><span class="line">  <span class="comment"># Length: 471 * 12</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(X)):</span><br><span class="line">    <span class="comment"># Length: 18 * 9</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(X[<span class="number">0</span>])):</span><br><span class="line">      <span class="keyword">if</span> std_x[j] != <span class="number">0</span>:</span><br><span class="line">        X[i][j] = (X[i][j] - mean_x[j]) / std_x[j]</span><br><span class="line">  <span class="keyword">return</span> X</span><br><span class="line"></span><br><span class="line">X = _normalization(X)</span><br></pre></td></tr></table></figure>

<h4 id="Feature-engineering-by-pruning-unimportant-features"><a href="#Feature-engineering-by-pruning-unimportant-features" class="headerlink" title="Feature engineering by pruning unimportant features"></a>Feature engineering by pruning unimportant features</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Delete features to prevent overfitting</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">prune</span>(<span class="params">X</span>):</span><br><span class="line">  delete_cols = []</span><br><span class="line">  <span class="comment"># Remove trivial features: NOx(#7), RAINFALL(#11)</span></span><br><span class="line">  remove_idx = [<span class="number">6</span>, <span class="number">10</span>]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> remove_idx:</span><br><span class="line">    delete_cols.extend(<span class="built_in">range</span>(i * <span class="number">9</span> + <span class="number">1</span>, (i + <span class="number">1</span>) * <span class="number">9</span> + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">  res = np.delete(X, delete_cols, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="comment"># Initialize bias values with 1</span></span><br><span class="line">X_pruned = prune(np.concatenate((np.ones([<span class="number">12</span> * <span class="number">471</span>, <span class="number">1</span>]), X), axis = <span class="number">1</span>).astype(<span class="built_in">float</span>))</span><br></pre></td></tr></table></figure>

<h4 id="Split-training-data-into-training-set-and-validation-set"><a href="#Split-training-data-into-training-set-and-validation-set" class="headerlink" title="Split training data into training set and validation set"></a>Split training data into training set and validation set</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X_train_set = X[: math.floor(<span class="built_in">len</span>(x) * <span class="number">0.8</span>), :]</span><br><span class="line">y_train_set = y[: math.floor(<span class="built_in">len</span>(y) * <span class="number">0.8</span>), :]</span><br><span class="line">X_validation = X[math.floor(<span class="built_in">len</span>(x) * <span class="number">0.8</span>): , :]</span><br><span class="line">y_validation = y[math.floor(<span class="built_in">len</span>(y) * <span class="number">0.8</span>): , :]</span><br></pre></td></tr></table></figure>

<h3 id="Training-and-prediction"><a href="#Training-and-prediction" class="headerlink" title="Training and prediction"></a>Training and prediction</h3><h4 id="Rough-training"><a href="#Rough-training" class="headerlink" title="Rough training"></a>Rough training</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Loss function: RMSE</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">eval_loss</span>(<span class="params">X, y, w</span>):</span><br><span class="line">  <span class="keyword">return</span> np.sqrt(np.<span class="built_in">sum</span>(np.power(X @ w - y, <span class="number">2</span>))/X.shape[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Batch gradient descent</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>(<span class="params">X, y, w = <span class="number">0</span>, reg = <span class="number">1</span>, <span class="built_in">iter</span> = <span class="number">8000</span></span>):</span><br><span class="line">  dim = X.shape[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">type</span>(w) == <span class="built_in">int</span>:</span><br><span class="line">    w = np.zeros([dim, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">  learning_rate = <span class="number">1.6</span></span><br><span class="line">  adagrad = np.zeros([dim, <span class="number">1</span>])</span><br><span class="line">  eps = <span class="number">0.0000000001</span></span><br><span class="line">  <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">iter</span>):</span><br><span class="line">    loss = eval_loss(X, y, w)</span><br><span class="line">    <span class="keyword">if</span>(t%<span class="number">500</span>==<span class="number">0</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'#'</span> + <span class="built_in">str</span>(t) + <span class="string">":"</span> + <span class="built_in">str</span>(loss))</span><br><span class="line">    <span class="comment"># Ridge regularization</span></span><br><span class="line">    gradient = <span class="number">2</span> * (X.T @ (X @ w - y)) + <span class="number">2</span> * reg * w</span><br><span class="line">    <span class="comment"># Learning schedule by Adagrad</span></span><br><span class="line">    adagrad += gradient ** <span class="number">2</span></span><br><span class="line">    w = w - learning_rate * gradient / np.sqrt(adagrad + eps)</span><br><span class="line">  <span class="keyword">return</span> w</span><br><span class="line"></span><br><span class="line">w = train(X_train_set, y_train_set)</span><br></pre></td></tr></table></figure>

<h4 id="Validate-training"><a href="#Validate-training" class="headerlink" title="Validate training"></a>Validate training</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">eval_loss(X_validation, y_validation, w)</span><br></pre></td></tr></table></figure>

<h4 id="Training-again-and-remove-outliers"><a href="#Training-again-and-remove-outliers" class="headerlink" title="Training again and remove outliers"></a>Training again and remove outliers</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">w = train(X = X_pruned, y = y, w = w)</span><br><span class="line"></span><br><span class="line">outliers = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(X_pruned.shape[<span class="number">0</span>]):</span><br><span class="line">  <span class="keyword">if</span> np.absolute(X_pruned[i] @ w - y[i]) &gt; <span class="number">10</span>:</span><br><span class="line">    outliers.append(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Try to eliminate irreducible error</span></span><br><span class="line">X_pruned = np.delete(X_pruned, outliers, <span class="number">0</span>)</span><br><span class="line">y = np.delete(y, outliers, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">w = train(X = X_pruned, y = y, w = w)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'\nFinal loss on full training dataset: {}'</span>.<span class="built_in">format</span>(eval_loss(X_pruned, y, w)))</span><br></pre></td></tr></table></figure>

<h3 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h3><p>Compare the <a href="#Steps-of-machine-learning">Steps of machine learning</a> section with each code snippets below and rethink the whole flow, you may have an overview about machine learning now 👍 .</p>
<h2 id="Going-further"><a href="#Going-further" class="headerlink" title="Going further"></a>Going further</h2><ul>
<li>Enjoy the <a href="#References-and-resources">References and resources</a></li>
<li>Try assignments in the referred book and courses<br><img data-src="http://speech.ee.ntu.edu.tw/~tlkagk/HW.png" alt="Learning map, https://bit.ly/3mf7jCU"></li>
</ul>
<h2 id="References-and-resources"><a href="#References-and-resources" class="headerlink" title="References and resources"></a>References and resources</h2><ul>
<li>Book: <a href="https://learning.oreilly.com/library/view/hands-on-machine-learning/9781492032632/">Hands-on Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2nd Edition</a> (try it free by your Microsoft account)<ul>
<li><a href="https://book.douban.com/subject/30310982/">Average rating 9.9 on Douban Book</a> (till 11/24/2020)</li>
<li><a href="https://www.oreilly.com/catalog/errata.csp?isbn=0636920142874">Errata</a></li>
</ul>
</li>
<li>Courses:<ul>
<li><a href="http://speech.ee.ntu.edu.tw/~tlkagk/courses_ML20.html">Machine Learning 2020</a>, Hung-yi Lee</li>
<li><a href="https://developers.google.com/machine-learning/crash-course/">Machine Learning Crash Course</a>, Google</li>
</ul>
</li>
<li>Desserts: <a href="https://www.youtube.com/channel/UCbfYPyITQ-7l4upoX8nvctg">Two Minute Papers</a></li>
</ul>
]]></content>
      <categories>
        <category>ML/DL</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>machine learning</tag>
        <tag>linear regression</tag>
        <tag>regularization</tag>
        <tag>gradient descent</tag>
        <tag>feature engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascript 简洁之道：如何使用类重构</title>
    <url>/2018/how-you-can-refactor-to-use-classes/</url>
    <content><![CDATA[<blockquote>
<p>源文链接：<a href="https://medium.freecodecamp.org/javascript-code-cleanup-how-you-can-refactor-to-use-classes-3948118e4468">JavaScript code cleanup: how you can refactor to use Classes</a></p>
</blockquote>
<p>在一些小规模的 React 工程中，将组件里所用的所有方法维护在组件内部没什么问题。不过到了中等规模的项目时，你可能会将那些方法从组件抽取到一个 “helper” 里。本文将展示如何使用类（而非导出独立的函数和变量）来组织代码。</p>
<span id="more"></span>

<p>注：我使用 React，因此这里讨论的例子也均是 React 所写。</p>
<h2 id="典型的重构"><a href="#典型的重构" class="headerlink" title="典型的重构"></a>典型的重构</h2><p>一次典型的重构中，我们通常会把组件中的函数维护在一个帮助文件里。</p>
<p>从：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">MyComponent</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">someFunction</span> = (<span class="params"></span>) =&gt; <span class="string">&#x27;Hey, I am text&#x27;</span></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;someFunction()&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>到：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; someFunction &#125; <span class="keyword">from</span> <span class="string">&#x27;functionHelper.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">MyComponent</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;someFunction()&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>和</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">someFunction</span> = (<span class="params"></span>) =&gt; <span class="string">&#x27;Hey, I am text&#x27;</span></span><br></pre></td></tr></table></figure>

<p>这个例子很二，不过你可以从中看到重构的思路：</p>
<ol>
<li>将你的函数复制粘贴到一个独立的文件；</li>
<li>导入它们并像之前一样调用。</li>
</ol>
<p>当逻辑复杂起来，你将不得不传一些如控制状态的对象、函数到这些函数里。如今我就遇到一个问题：我有三个入参相同（一个 <code>资源</code> 和一个更新 <code>资源</code> 的函数）的函数希望从组件中提取出来。于是乎就酝酿出了更好的方法…</p>
<h2 id="使用类重构"><a href="#使用类重构" class="headerlink" title="使用类重构"></a>使用类重构</h2><p>我为本文做了一个隆重的演示，你可以在 <a href="https://github.com/AmberWilkie/class-demo">GitHub</a> 上查阅源码。初始的提交显示所有功能都写在主组件中（<code>App.js</code>），而随后的提交逐渐使用了类重构代码。</p>
<p><img data-src="https://cdn.joouis.com/how-you-can-refactor-to-use-classes-1.png"></p>
<p>你可以尝试运行该工程，不过请记得 <code>yarn install</code> 安装依赖。</p>
<p>我们从一个”获取”对象（通常是请求一个 API 接口）的组件开始，它有一些确切的属性：repeat（盒子的个数），side（高和宽），text，color。接着我们有一系列操作视图的方法——改变色彩，更新文字，等等。每次视图更改后，我们展示一条信息。</p>
<p>举个例子，这是我们改变宽高的方法：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">changeSide = <span class="function"><span class="params">side</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> obj = &#123;...<span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">obj</span>, side&#125;;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">fetchObject</span>(obj);</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">message</span>: <span class="string">`You changed the sides to <span class="subst">$&#123;side&#125;</span> pixels!`</span> &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可能有些方法中也需要类似的操作，或许这些方法大不相同。这时候我们可能开始考虑将这段代码放到一个帮助文件里，然后创建另一个方法调用 <code>setState</code> ，同时需要将状态对象、<code>side</code> 参数以及 <code>this.fetchObject</code> 传入其中。如果类似的方法多了起来，那么就会存在大量的参数传递，从而导致代码重构起不到作用（或缺乏可读性）。</p>
<p>取而代之，我们可以使用类的构造函数方法来实现：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">ObjectManipulator</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"> &#123; object, fetchObject, markResettable, updateMessage, updateStateValue &#125; </span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fetchObject</span> = fetchObject;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">markResettable</span> = markResettable;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">updateMessage</span> = updateMessage;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">updateStateValue</span> = updateStateValue;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  changeSide = <span class="function">(<span class="params"> object, side </span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> newObject = &#123; ...object, side &#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">fetchObject</span>(newObject);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">updateMessage</span>(<span class="string">`You changed the sides to <span class="subst">$&#123;side&#125;</span> pixels!`</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">markResettable</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">updateStateValue</span>(<span class="string">&#x27;side&#x27;</span>, side);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>这允许我们创建一个能在主组件中调用其函数的对象：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> manipulator = <span class="keyword">new</span> <span class="title class_">ObjectManipulator</span>(&#123;</span><br><span class="line">  object,</span><br><span class="line">  <span class="attr">fetchObject</span>: <span class="variable language_">this</span>.<span class="property">fetchObject</span>,</span><br><span class="line">  <span class="attr">markResettable</span>: <span class="variable language_">this</span>.<span class="property">markResettable</span>,</span><br><span class="line">  <span class="attr">updateMessage</span>: <span class="variable language_">this</span>.<span class="property">updateMessage</span>,</span><br><span class="line">  <span class="attr">updateStateValue</span>: <span class="variable language_">this</span>.<span class="property">updateStateValue</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>上述代码创建了一个对象 <code>manipulator</code> —— <code>ObjectManipulator</code> 类的实例。当我们调用 <code>manipulator.changeSide(object, &#39;800&#39;)</code> 时，将执行之前定义好的 <code>changeSide</code> 方法。这里无需传递 <code>updateMessage</code> 或任何其他方法——当实例创建时已经在构造函数中对这些方法赋好了值。</p>
<p>可以想象如果我们有许多类似的方法需要处理时这招将变得非常管用。就我而言，我需要在一个异步事件后调用 <code>.then(res =&gt; myFunction(res))</code> 。相比于将 <code>myFunction</code> 传入每个函数的做法，在类实例中提前定义它节省了不少代码。</p>
<h2 id="保持所有事情井井有条"><a href="#保持所有事情井井有条" class="headerlink" title="保持所有事情井井有条"></a>保持所有事情井井有条</h2><p>这种组织方法还可以促进代码互不越界。例如在前文的范例里，按钮的颜色维护在一个对应的数组之中，将此常量放到 <code>ObjectManipulator</code> 可以确保其不会与应用中的其他 <code>colors</code> 冲突：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">ObjectManipulator</span> &#123;</span><br><span class="line">  [...]</span><br><span class="line"></span><br><span class="line">  colors = [<span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;aquamarine&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>, <span class="string">&#x27;magenta&#x27;</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>鉴于其他地方存在全局 <code>colors</code> 常量的可能性，我可以使用 <code>manipulator.colors</code> 正确地获取我想要的颜色。</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes">Good old Mozilla Class docs</a></p>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>refactor</tag>
        <tag>TechTalk</tag>
        <tag>javascript</tag>
        <tag>react</tag>
        <tag>hoc</tag>
      </tags>
  </entry>
  <entry>
    <title>那些年我拿到阿里巴巴Offer所参加的面试</title>
    <url>/2018/interviews-for-the-offer-from-alibaba/</url>
    <content><![CDATA[<p>2017 年尾第一次经历了转岗，离开了 YunOS&#x2F;AliOS 事业部，虽然新部门还是在阿里，但这种感觉其实就是换了份工作。想当初加入阿里踌躇满志，期待在 OS 领域大干一场，然而时隔一年多，我已转型为风马牛不相及的 Web 前端开发，曾经的 OS 梦随着前事业部的战略失败也逐渐凋零。2018 年的第一篇博客，就来纪念一下这段狗血历程的开端吧。</p>
<span id="more"></span>

<p>回想研究生时期的我还在嵌入式领域里游荡，尽管会写一点网页和脚本，也懂点机器学习的皮毛，但我一直认为我会去一家电子公司，比如传统的半导体厂商 Intel, NXP，最不济也是 MTK （笑）。老牌名校的明星院系，实习、神人导师的各种摔打，以及自身对嵌入式的热爱，想不出有什么理由会使我去互联网公司。</p>
<p>然而，命运有时候就是这么神奇。</p>
<p>2015 年初夏，机缘巧合认识的学弟妹在团队缺人的情况下，拖我去台北参加了阿里百川举办的黑客松比赛，随后结识了若远师兄。在 16 年春天开始找工作时，我咨询了若远：1. 阿里有没有搞系统底层的职位？2. BAT 的官网都只招实习生了，阿里还有校招吗？在得到肯定答复后，自然而然获得了他的内推帮助。</p>
<p>简历通过评估后，无需笔试，即将开始漫长的面试之旅。我总共经历了 7 场面试，之所以会有这么多场的原因，总结有三：</p>
<ol>
<li>16 年互联网寒冬已经到来，BAT 在三月春招时只招实习生，而我在前三轮面的不错的情况下想“强行上位”，需要多多考察（某位面试官原话）；</li>
<li>其中一场面试面砸了，听到有正式 offer 机会的当下心态失衡；</li>
<li>当时人在台南，边写论文边面试，时间紧任务重，拒绝了回杭州终面，所以还是需要多多考察，毕竟学校名字听起来太野鸡？</li>
</ol>
<p>讲完八卦，是时候上干货了 &#x3D; &#x3D;+。以下是 7 次面试的重点记录：</p>
<h3 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h3><ul>
<li>电话</li>
<li>根据线上简历（主要是简历上的开放式问题）进行提问</li>
</ul>
<h3 id="二面"><a href="#二面" class="headerlink" title="二面"></a>二面</h3><ul>
<li>电话 + 笔试</li>
<li>strcpy() 越界</li>
<li>链表节点的插入</li>
<li>size of array pointer</li>
</ul>
<h3 id="三面"><a href="#三面" class="headerlink" title="三面"></a>三面</h3><ul>
<li>电话，内容广度爆炸… Orz</li>
<li>ld.so，VIVT &#x2F; VIPT &#x2F; PIPT，cache flush &#x2F; clean</li>
<li>加解密算法</li>
<li>TLB 作用</li>
<li>宏内核 vs 微内核</li>
<li>IRQ vs FIQ</li>
<li>ARMv7-M vs ARMv7-A</li>
<li>ARMv8-M，Trustzone</li>
<li>MPU 用途，和 MMU 区别</li>
<li>动态链接函数库，那些数据共享，哪些数据独有</li>
<li>Run-time 时期 Bss Section 数据的行为</li>
</ul>
<h3 id="四面"><a href="#四面" class="headerlink" title="四面"></a>四面</h3><ul>
<li>电话 + 笔试，搞砸的那次</li>
<li>指针的数组，数组的指针，sizeof() ？</li>
<li>同二面第一题，刨根问底是什么情况</li>
<li>写出 linux kernel 双向链表的删除操作，但问的时候未说明是双向链表…</li>
</ul>
<h3 id="五面"><a href="#五面" class="headerlink" title="五面"></a>五面</h3><ul>
<li>电话</li>
<li>首先，解释四面表现为何如此之差（心塞…）</li>
<li>一个智能灯系统，有 WiFi，如何做到低功耗</li>
<li>Hypervisor 原理，若上面同时跑两个 RTOS，整个架构是怎么样的</li>
</ul>
<h3 id="六面"><a href="#六面" class="headerlink" title="六面"></a>六面</h3><ul>
<li>电话</li>
<li>详细自我介绍，项目经验</li>
<li>mutex vs spin lock</li>
<li>有序数列查找元素效率最高的算法？时间复杂度？</li>
<li>RB Tree VS AVL Tree</li>
<li>过往的笔试题</li>
<li>TCP 四次挥手过程，端口号什么时候结束使用的</li>
</ul>
<h3 id="七面"><a href="#七面" class="headerlink" title="七面"></a>七面</h3><ul>
<li>电话，HR 终面</li>
<li>来实习的话可能面临的挑战？</li>
<li>来实习的工作内容？</li>
<li>自己最大的优势是什么？</li>
</ul>
<p>整个面试的过程还是不错的，面试官都很专业，上来直接询问技术相关的问题，并且会有意识的引导，态度也都比较和善，是我个人认可的面试方式。面试完后，阿里校招系统上的信息更新也非常及时，不得不夸一下这个招聘系统很专业，大大提升了面试者对这家公司的信心与好感度。当时唯一觉得不爽的就是不知道面试电话什么时候会来，除了一位面试官提前电邮与我预约时间外，其他面试都是时间未知，我只好抱着海外漫游的电信手机一直等，度过了难熬的一个多月时光。</p>
<p>现在站在上帝视角，再看看当初的想法，也是有许多感慨。我以为四面后就彻底结束了，没想到还有第五面；我以为这么多次面试是一个连续的过程，其实在第四面之后我已经被淘汰回了简历池；我以为我拿的是校招 offer，其实最终花费了团队一个社招 offer；我以为我来了做的是面试里聊得 ARM trustzone 等安全领域的活，没想到入职后就拥抱变化做了 Web 前端开发。</p>
<p>面对难以预知的未来，唯一能做的就是把握现在，不断地努力。如果没有在研究生时期疯狂饿补计算机体系知识，面试时期常常刷面经、leetcode 到三四点，我一定过不了面试。如果没有放平心态学习 Web 以及前端相关的新技术、思考技术需求与方向，我不会在想转岗时，谈一个 offer 拿一个 offer，不愁没下家。如果没有危机感和对技术的执着，我不会从一个石油专业院校走到一家知名的互联网公司，想想从光电跨越到电子再到计算机领域的“艰辛”，其实也没什么，毕竟整个过程是非常充实且富有成就感的。</p>
<p>最后，面试这一路走来也真的是非常幸运，结识了一些师长和同事并得到他们的帮助。例如带我进入计算机领域的前联发科技技术顾问、后来做我硕论导师的开源大神 Jserv；实习时只要有空便与我分享技术心得、劝我对自身技术发展不要设限的 Richard 大哥；给了我加入阿里机会并让我仰望的峰哥和超级 nice 的 HR 姐姐珈夜；以及内推我进阿里、在转岗时给我许多建议、现在成为一个部门同事的高富帅若远。感恩！</p>
<p>Learn from yesterday, live for today, hope for tomorrow. Let’s cheer up!</p>
<p><img data-src="https://cdn.joouis.com/interviews-for-the-offer-from-alibaba-1.png"></p>
]]></content>
      <categories>
        <category>技术人生谈</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>os</tag>
        <tag>interview</tag>
        <tag>alibaba</tag>
      </tags>
  </entry>
  <entry>
    <title>十分钟带你了解国产自制开源Atom插件 structure-view</title>
    <url>/2017/introduction-of-atom-structure-view/</url>
    <content><![CDATA[<p>structure-view （以下简称 SV）是在开发 YunOS Studio（AliOS Studio 前身）时开源出来的一款代码结构提示插件。代码结构提示是一项由来已久的影响开发效率的功能，早在 VIM 时期就有经典的 ctags + Taglist 插件组合来实现这一功能，在桌面时代各大流行的 IDE 也都支持此功能，如 Eclipse 中的 Outline View 或 Webstorm 中的 Structure View。</p>
<p>YunOS Studio 基于扩展能力优异的 Atom 编辑器开发，由于 Atom 的生态市场缺乏一款好用的代码结构提示插件，因此 SV 应运而生（注：目前主流相关插件的比较可参考附件 PPT 中的 “开发由来与现状” 章节）。</p>
<span id="more"></span>

<p>自从今年九月初将其开源并发布到 Atom 市场中，2个多月的时间达到了 800 余次的下载量，总计 20+ 的 star 数量，以及数十个 issues 和 PR。在没（精）啥（力）宣（有）传（限）的情况下，有人下载使用、提问题、提需求，甚至主动贡献 PR，都给了笔者极大的鼓舞，因此在此分享一下这个插件的设计，也欢迎 Atom 党服用此插件。</p>
<p><img data-src="https://cdn.joouis.com/introduction-of-structure-view-1.gif"></p>
<p>链接：</p>
<ul>
<li><a href="https://atom.io/packages/structure-view">Atom 市场</a></li>
<li><a href="https://github.com/alibaba/structure-view">Github</a></li>
</ul>
<p><em>平（臭）心（不）而（要）论（脸），eating my own dog food 这么久，我觉得挺好用的 &#x3D;。&#x3D;</em></p>
<h2 id="需求与难点"><a href="#需求与难点" class="headerlink" title="需求与难点"></a>需求与难点</h2><h3 id="结合业务背景与现状谈需求"><a href="#结合业务背景与现状谈需求" class="headerlink" title="结合业务背景与现状谈需求"></a>结合业务背景与现状谈需求</h3><p>SV 最初是为 YunOS Studio 设计，其用户——YunOS 开发者主要使用 Web 相关语言开发，因此对 HTML, CSS, Javascript 的支持是第一要务 。</p>
<p>其次，SV 应该具备目前主流类似插件的功能，总不能被“活化石” ctags + Taglist 给 K.O. 了。因此有些基本功能一定要满足：</p>
<ul>
<li>解析出代码的基本类型，如 HTML 的 Element，CSS 的 Selector，JS 的 Function, Class 等</li>
<li>将上述类型展现在界面上，通常是树状图的形式</li>
<li>点击树状图上的节点，编辑区域可快速定位到其对应的代码位置</li>
</ul>
<p>然后，扩展性是非常重要的一点。资源有限，不可能一口气支持所有语言，先把第一要务干完了，才能展望别的语言。秉着不能挖坑让自己跳的指导思想，一定要在初始阶段设计好扩展性。</p>
<p>最后，能开源当然是最好的，一个人支持那么多语言是会累死的，能忽悠热心网友来干点活多好呀。这也从侧门对扩展性提出了要求。</p>
<p>最后的最后，快速落地。在项目调研阶段笔者就发现，Atom 上不仅缺少好用的代码结构提示插件，即使是使用量最多的一个，作者也疑似不维护、消失很久了，项目相关的 issues 中已有一些对此类插件的明确需求。如果能快速落地，也就有机会获得一些外部开发者用户。</p>
<h3 id="难吗？难"><a href="#难吗？难" class="headerlink" title="难吗？难"></a>难吗？难</h3><blockquote>
<p>你永远不知道下一份读取的代码是用什么语言写的 Orz</p>
</blockquote>
<p>从以下几个维度分析下难在哪：</p>
<ul>
<li>广度：用户使用的语言无法预测，至少要覆盖主流语言吧，不然怎么好意思拿得出手</li>
<li>深度：对我们业务所用的语言，一定要能全面地解析；对于主流语言，至少也得解析出个轮廓</li>
<li>轻量：Atom 性能本来就不算好（当然人家也不主打性能…），所以插件一定要轻，切莫“喧宾夺主”</li>
<li>广度和深度本来就很难同时满足，还要保证轻量，tradeoff 的哲学该如何落实</li>
</ul>
<h2 id="设计与实现"><a href="#设计与实现" class="headerlink" title="设计与实现"></a>设计与实现</h2><h3 id="目前主流的解决方案"><a href="#目前主流的解决方案" class="headerlink" title="目前主流的解决方案"></a>目前主流的解决方案</h3><p>当初调研时发现， Atom 市场中的竞品多是封装经典的 <a href="http://ctags.sourceforge.net/">ctags</a> 插件，其工作原理如下：</p>
<ol>
<li>提前内置 Windows&#x2F;macOS &#x2F;Linux 三个平台的二进制执行文件，以及其需要的配置文件 <code>.ctags</code> </li>
<li>当插件工作时，命令行调用 ctags 解析，获取 stdout 输出的数据</li>
<li>将 ctags 输出的数据进行加工，以 web 页面的形式呈现在 Atom 的视图中</li>
</ol>
<p>由于  <code>.ctags</code> 是正则匹配脚本，也就是说 ctags 其实是利用正则匹配方法处理代码。这种方法的好处是添加规则方便，规则越全面解析效果理论上越好。但是问题也显而易见，光靠正则匹配很难对 OOP 语言中的继承关系进行解析，更别提 JavaScript 这种靠原型链吃饭的语言了。</p>
<p>另外还有一种解决方案源自 Facebook 出品的 Nuclide IDE，SV 在设计之初并未参考到，不过后来发现是类似的思路 。Nuclide 中的 Outline 视图提供了代码结构提示和快速导航的功能，针对不同的语言使用不同的解析器，例如使用了自家的 Flow 类型检查工具处理 JavaScript 代码，而使用了 Python 官方的解析器处理 Python 代码。</p>
<p>这种方法的好处自然是有深度，能把支持的语言解析到位，但坏处也十分明显。首先是依赖性太强，之所以没有很深入地调研 Nuclide，是因为笔者在解析 JavaScript 时提醒安装 Flow，但是 Nuclide 并没有提供自动化安装功能，需要用户到 Flow 的官网学习、完成这件事情，这显然很蠢，也不知道现在改进没…其次就是支持的语言类型有所限制，需要大量的资源支持新的语言开发，明显不适合笔者这种“单兵作战”模式。</p>
<h3 id="流程设计"><a href="#流程设计" class="headerlink" title="流程设计"></a>流程设计</h3><p>SV 的代码结构解析流程与现有插件大体一致，如下图所示。</p>
<p><img data-src="https://cdn.joouis.com/introduction-of-structure-view-2.png"></p>
<p>一次完整的解析显示流程可分解为以下几步：</p>
<ol>
<li>获取当前代码文件的绝对路径</li>
<li>调用文件系统接口读取代码内容</li>
<li><strong>选择合适的语法分析器</strong>解析代码，获取 tags 数据</li>
<li>Tag parser 将 tags 处理为前端可用的格式，例如给每个 tag 添加 Point 字段用于 Atom 编辑器的定位</li>
<li>渲染树状图</li>
</ol>
<p>第三步中提到“选择合适的语法分析器”意味着 SV 中不止一个语法分析器，这是 SV 的一大特色，下一小节中会详细说明。</p>
<h3 id="架构设计与实现"><a href="#架构设计与实现" class="headerlink" title="架构设计与实现"></a>架构设计与实现</h3><p>SV 的设计思想其实与 Nuclide 相似，也集成了多个语法解析器，但主要有两点不同：</p>
<ul>
<li>基于给用户更好的使用体验以及满足轻量需求的出发点，SV 的解析引擎以 JavaScript 三方库为主，在安装插件时一并安装，无需用户后续手动操作</li>
<li>SV 中设计了一个通用的语法解析器，定位为“万金油”角色，以满足支持语言的广度</li>
</ul>
<p>具体的架构图如下所示。</p>
<p><img data-src="https://cdn.joouis.com/introduction-of-structure-view-3.png"></p>
<h4 id="Tag-Generator"><a href="#Tag-Generator" class="headerlink" title="Tag Generator"></a>Tag Generator</h4><p>在 Tag Generator 层封装了各种语言对应的专业语法解析器，SV 判断出代码文件的语言类型，便会选择对应的语法解析器。如果没有某一个语言对应的解析器，则代表目前 SV 还未深度支持，此时就会使用一个名为 Universal 的解析器进行处理。</p>
<p>Universal 顾名思义就是通用的解决方案，虽不像专业的语法解析器那样能解析得很全面，但是它可以尽可能多地覆盖各种语言，以确保遇到未深度支持的语言时也能得到代码的初略结构信息。秉持着 DRY (Don’t repeat yourself) 原则，SV 借鉴了现有插件，通过配置、使用 ctags 插件来实现这个“万金油”角色。</p>
<p>由于语法解析器使用了不同的第三方库，获取的原始 tag 数据形式也是各有不同。因此在封装第三方库的过程中，这些语法解析器会遵循统一的数据格式，整理出 <code>name</code> <code>kind</code> <code>position</code> <code>parent</code> <code>id</code> <code>child</code> 等字段。</p>
<p>此外，Tag Generator 也统一了语法解析器的 API（目前仅有一个），为扩展性提供了保证。未来支持新的语言时，只需在相应目录添加解析器文件，SV 会自动搜索并调用统一的接口。</p>
<h4 id="Tag-Parser"><a href="#Tag-Parser" class="headerlink" title="Tag Parser"></a>Tag Parser</h4><p>Tag Parser 的作用很简单，就是为 View Controller 提供整理好的树结构资料，方便后者直接渲染。</p>
<p>由于 Tag Generator 封装了不同的三方库进行 tags 解析，返回的数据结构主要有两种，一是哈希列表，另一种是 AST。这两种格式各有优点，前者在定位 tag 时方便找到对应的节点，无需遍历整颗树；后者作为一颗树，在渲染树状图时水到渠成。</p>
<p>因此 SV 同时维护了这两种结构的数据，如果语法解析器提供的是哈希列表，Tag Parser 就通过该列表生成相应的 AST，反之亦然。</p>
<h4 id="View-Controller"><a href="#View-Controller" class="headerlink" title="View Controller"></a>View Controller</h4><p>这一层使用了开源的 MVVM UI 框架 Vue 实现渲染逻辑和交互逻辑，在此就不赘述。</p>
<h2 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h2><p>语言类型的支持是一项任重而道远的工作，限于人力资源，只能从业务需求和笔者常用的语言出发进行支持。但是个人力量终归是有限的，因此在设计 SV 之初，笔者就考虑到了开源社区，为 SV 编写了详细的英文文档。SV 的用户多是软件开发者，如果能获得他们的认可，提供简单的扩展方法，想必他们中也是有热心人士愿意贡献 PR 的。事实证明，SV 得到了一些 Atom 用户的关注和认同，也有开发者为了自己习惯的语言补充了 <code>.ctags</code> 配置文件，甚至编写语法解析器。</p>
<p>目前语法解析器主要使用 JavaScript 编写的第三方解析库，这将会受到一定的限制。例如 C&#x2F;C++ 语言的 AST 解析器有 C&#x2F;Python&#x2F;Ruby 语言版本，但未必有 JavaScript 版本，即使有也可能存在健壮性方面的担忧，提供一个通用的办法解决这个问题也极具意义。</p>
<p>从产品角度看，SV 目前非常粗糙，需要好好打磨。功能上仅支持基本的解析、展示、定位，与主流 IDE 的类似插件相比有一定的差距，需要多向如 WebStorm 之类的优质 IDE 学习。</p>
<p>最后，SV 的架构设计考虑到了移植性。近年来 VS Code 的横空出世，以其高性能以及对 TypeScript 的优异支持，吸引了一部分 Atom 用户转投阵营。VS Code 同样允许第三方开发者发布插件，目前其市场中的竞品插件功能性较弱、使用人数较低，有机会做得更好。SV 独立出了 View Controller 层，未来如果被移植到其他热门编辑器如 VS Code 时，重写这一层即可。当然，这需要 VS Code 提供更多关于 UI 方面的接口。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>为 ATOM 设计、（目前）专注 Web 前端开发的代码结构提示工具</li>
<li>灵活的代码标签生成器架构保证了工具的可扩展性</li>
<li>吸取市面上主流IDE工具的功能特性，力求好用易用</li>
<li>独立设计、开发，无 IP 依赖，利于推广和开源</li>
</ul>
<p>附件：<a href="https://1drv.ms/b/c/7a756318060faeec/UQTsrg8GGGN1IIB64l4AAAAAAEwFWtAg-PV02tM">structure-view-intro-cn-v1.0.pdf</a></p>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>javascript</tag>
        <tag>structure-view</tag>
        <tag>outline</tag>
        <tag>ctags</tag>
        <tag>open source</tag>
        <tag>outline view</tag>
        <tag>structure view</tag>
        <tag>atom</tag>
        <tag>ide</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 性能优化概观</title>
    <url>/2018/javascript-performance-optimization-tips-an-overview/</url>
    <content><![CDATA[<blockquote>
<p>源文链接：<a href="https://www.sitepoint.com/javascript-performance-optimization-tips-an-overview/">JavaScript Performance Optimization Tips: An Overview</a></p>
</blockquote>
<p>我们将坚持“工具不代表规则（Tools, not rules）”的老话，尽量少提 JS 相关的流行术语。很显然我们不可能在一篇 2000 来字的文章里覆盖 JS 性能的方方面面，因此请在后续阅读本文的参考书目并自行研究。</p>
<p>不过在深入细节之前，先让我们通过回答以下问题来更广义地理解性能优化：高性能的 JS 要考虑哪些指标？这些指标如何与更高维度的 web 性能指标融为一体？</p>
<span id="more"></span>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先，让我们避开如下事情：如果你只在台式机上测试，你已将 <a href="http://gs.statcounter.com/platform-market-share/desktop-mobile-tablet">超过 50%</a> 的用户排除在外了。</p>
<p><img data-src="https://cdn.joouis.com/javascript-performance-optimization-tips-an-overview-1.png"></p>
<p>由于新兴市场偏爱使用低于 100 美金的安卓设备上网，该趋势只会持续增长。台式机作为主力上网设备的时代已经结束，未来十亿网民将会首选移动设备访问你的网站。</p>
<p>Chrome DevTool 工具的设备模拟器并不能有效替代真实设备进行测试。即便限制 CPU 和网络性能有所帮助，但它相比性能较弱的真实设备来说完全是另一个等级。所以请在真实设备上测试！</p>
<p>即使是使用真实设备测试，你也很可能用的是自己新买的高端旗舰机。然而，这并非你的用户使用的设备。让我们看看配置处在中等水平的移动设备，例如摩托罗拉的 G1，只有不足 1GB 的运行内存、孱弱的 CPU 和 GPU。</p>
<p>当 <a href="https://docs.google.com/spreadsheets/d/1wHcNNQea28LhwQ_amFamT33d5woVrJfJy53Z1k6V090">解析一个文件体积为平均数的 JS 包</a>（JS bundle）时，让我们看看它的解析速度排名。</p>
<p><img data-src="https://cdn.joouis.com/javascript-performance-optimization-tips-an-overview-2.png" alt="Addy Osmani: Time spent in JS Parse &amp; eval for average JS"></p>
<p>虽然这张图只涵盖了 JS 解析和编译的时间（后续时间将会消耗更多）而非常规的性能数据，但有着强关联的它可以被视作 JS 性能的指标之一。</p>
<p>Bruce Lawson 曾说 “<a href="https://vimeo.com/194968584">it’s the World-Wide Web, not the Wealthy Western Web</a>”。因此你需要在比你的 MacBook 或 iPhone 慢 25 倍左右的设备上探讨 web 性能。让我们看看我们的实际目标是什么。</p>
<h2 id="高性能的-JS-代码是怎样的？"><a href="#高性能的-JS-代码是怎样的？" class="headerlink" title="高性能的 JS 代码是怎样的？"></a>高性能的 JS 代码是怎样的？</h2><p>现在我们了解了我们的目标平台，就可以解答下一个问题：高性能的 JS 代码是什么？</p>
<p>虽说没有绝对的分类来定义高性能代码，但我们有一个以用户为中心的性能模型可以参考：<a href="https://developers.google.com/web/fundamentals/performance/rail">RAIL 模型</a>。</p>
<p><img data-src="https://cdn.joouis.com/javascript-performance-optimization-tips-an-overview-3.png" alt="Sam Saccone: Planning for Performance: PRPL"></p>
<h3 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h3><p>如果你的应用在 100 毫秒内响应用户的操作，给用户的感知就是立即响应。这适用于网页中可敲击的元素，但是滑动或拖拽时则不行。</p>
<h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><p>在 60Hz 帧率的显示器上，我们期望在动画和滑动时画面恒定在 60 帧每秒，这意味着约 16 毫秒显示一帧。由于 16 毫秒的预算，你实际上只有 8 到 10 毫秒去完成所有工作，剩余时间将被浏览器内部以及其它一些差异消耗掉。（深度阅读：《<a href="https://mp.weixin.qq.com/s?__biz=MjM5MTA1MjAxMQ==&mid=2651228065&idx=2&sn=0db2e69aa9344d4b086e9d98301aebad">从浏览器多进程到JS单线程，JS运行机制最全面的一次梳理</a>》）</p>
<h3 id="闲置"><a href="#闲置" class="headerlink" title="闲置"></a>闲置</h3><p>如果你正在运行一个昂贵且持久的任务，请确保将它切分为更小的部分以便主线程有空响应用户的输入。不应该有阻塞用户输入超过 50 毫秒的任务存在。</p>
<h3 id="负载"><a href="#负载" class="headerlink" title="负载"></a>负载</h3><p>一个页面的加载应低于 1000 毫秒，超过这个时间你的用户将会变得烦躁。而在移动设备上要求页面变得可交互而不仅完成渲染和可滑动时，是一个非常难的目标。实际上，可用于加载的时间往往更少：</p>
<p><img data-src="https://cdn.joouis.com/javascript-performance-optimization-tips-an-overview-4.png" alt="Fast By Default: Modern Loading Best Practices"></p>
<p>在实践中，可交互时间以 5 秒为目标，这也是 Chrome 在其 Lighthouse audit 中使用的标志。</p>
<p>现在我们知道了度量指标，让我们来看<a href="https://storage.googleapis.com/doubleclick-prod/documents/The_Need_for_Mobile_Speed_-_FINAL.pdf">一些数据统计</a>：</p>
<ul>
<li>如果一个移动站点的加载时间超过 3 秒，53% 的访客将会离开</li>
<li>每两个人中就有一个人期待页面加载时间不超过 2 秒</li>
<li>大约 77% 的移动站点在 3G 网络下的加载时间超过 10 秒</li>
<li>移动站点在 3G 网络下的平均加载时间为 19 秒</li>
</ul>
<p>此外，<a href="https://medium.com/reloading/javascript-start-up-performance-69200f43b201">Addy Osmani 还提供了一些信息</a>：</p>
<ul>
<li>Apps 变得可交互在 PC 上需要 8 秒（使用网线），而在手机上需要 16 秒（3G 网络的 Moto G4）</li>
<li>从中位数看，页面依赖的 JS 文件（gzipped 压缩过）大小为 410KB</li>
</ul>
<p>你是否感到十分泄气？很好，让我们一起行动，修复网页面临的这些问题。</p>
<h2 id="上下文即一切"><a href="#上下文即一切" class="headerlink" title="上下文即一切"></a>上下文即一切</h2><p>你可能已经注意到，加载网页的时间是主要瓶颈。确切的说，瓶颈来源于 JavaScript 下载、解析、编译和执行的时间。这个问题没有捷径可走，唯有加载更少的 JS 脚本以及更加聪明地加载它们。</p>
<p>但是除了启动网站外，你的代码实际上做了哪些工作？这里肯定有些性能可以优化，对吧？</p>
<p>在你开始优化你的代码前，先想想你要构建的是什么。你在构建一个框架或 VDOM 库吗？你的代码需要每秒执行上千次运算吗？你为了处理用户输入或动画而使用一个时间临界型（time-critical）的库吗？如果没有，你也许应该将时间和精力投入到一些更有用的地方。</p>
<p>不是说编写高性能的代码不重要，但是从事物的宏观角度来看其影响通常较小，尤其在讨论微优化时。因此，在你踏入 Stack Overflow 通过对比  JSperf.com 上的结果来争论 <code>.map</code> <code>.forEach</code> 和 <code>for</code> 循环方法前，先确保看到了整片森林而非细枝末节。50K 次每秒的操作听起来比 1k 次每秒的操作要好上 50 倍，然而在绝大多数场景下这两者不会有什么区别。</p>
<h2 id="解析、编译以及执行"><a href="#解析、编译以及执行" class="headerlink" title="解析、编译以及执行"></a>解析、编译以及执行</h2><p>基本上大多数性能不高的 JS 代码问题并未出现在运行时期，而是在代码开始执行前所需的所有步骤。</p>
<p>我们在这会讨论抽象的层次。电脑中的 CPU 执行的是机器码，而电脑中运行的绝大多数代码是编译过的二进制格式（这里使用“代码”而非“程序”考虑到了近来的 Electron 应用）。也就是说，二进制代码抛开了所有系统层面的抽象，可以在硬件上原生执行，不需要一些预先处理。</p>
<p>JavaScript 没有被预先编译过。它在浏览器中通过相对较慢的网络被下载为可读的代码，总而言之，浏览器就是 JS 程序的“操作系统”。</p>
<p>代码首先需要被解析——更确切地说读取并将其变成计算机可寻址的结构以便编译。在设备&#x2F;浏览器可以执行前，代码还需被编译成字节码，最终是机器码。</p>
<p>另一件非常重要的事情是 JavaScript 是单线程的，运行在浏览器的主线程上。这意味着一次只有一颗处理器可以运行 JS 代码。如果 Chrome DevTools 的性能时间轴被黄色峰值填充，即 CPU 使用率达到 100%，画面将会出现长帧、掉帧、难用的滑动以及其他所有扎心的体验。</p>
<p><img data-src="https://cdn.joouis.com/javascript-performance-optimization-tips-an-overview-5.jpg" alt="Paul Lewis: When everything&#39;s important, nothing is!"></p>
<p>所以在你的 JS 代码开始运行前，上述所有工作需要完成。在 Chrome V8 引擎执行 JS 代码的总时间中，解析和编译占据了约 50% 的时间。</p>
<p><img data-src="https://cdn.joouis.com/javascript-performance-optimization-tips-an-overview-6.png" alt="Addy Osmani: JavaScript Start-up Performance"></p>
<p>从这一部分我们学会两件事：</p>
<ol>
<li>尽管未必是线性关系，但 JS 的解析时间与包的体积呈正比。加载的 JS 代码体积越小，速度越快。</li>
<li>每一个你使用的 JS 框架（React, Vue, Angular, Preact …）是另一个层次的抽象（除非是像 <a href="https://github.com/sveltejs/svelte">Svelte</a> 这样的预编译库）。这些库不仅会增加 JS 包的体积，也会因为代码没有直接面对浏览器而降低效率。</li>
</ol>
<p>有一些方法可以缓解这些问题，例如使用 service workers 另起线程在后台完成工作，或使用 asm.js 编写更容易被编译成机器指令的代码，但这完全是另一个话题了。</p>
<p>你可以做到，是无论如何在一切情况下避免使用 JS 动画库，并熟悉<a href="https://csstriggers.com/">绘画和布局的触发事件</a>。只有当完全没办法使用常见的 CSS 过渡和动画实现时再使用库吧。</p>
<p>即使这些库可能使用了 CSS 过渡、复合属性以及 <code>requestAnimationFrame()</code> 方法，它们依然作为 JS 代码在主线程中运行。为了保证动画的顺滑，你需要确保你的所有 JS 代码在每帧 8 毫秒的时间内完成执行。</p>
<p>另一方面，CSS 动画和过渡占用 GPU 而非主线程，如果高效实现，可以避免产生重新布局。</p>
<p>考虑到大多数动画是在等待或用户交互时执行，这可以给予应用一定的喘息时间。</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Animations_API">Web Animations API</a> 作为即将到来的特性集合允许用户脱离主线程开发高效 JS 动画，但现在还是坚持 CSS 过渡和 <a href="https://aerotwist.com/blog/flip-your-animations/">FLIP</a> 之类的技术吧。</p>
<h2 id="包的大小就是一切"><a href="#包的大小就是一切" class="headerlink" title="包的大小就是一切"></a>包的大小就是一切</h2><p>如今一切都是 JS 包。Bower 和 <code>&lt;/body&gt;</code> 标签前写一堆 <code>&lt;script&gt;</code> 的时代已经远去。</p>
<p>现在都是使用 <code>npm install</code> 来安装你在 NPM 上发现的新玩意，使用 Webpack 将它们打包为一个 1MB 体积的超大 JS 文件，当浏览器结束依赖包的数据请求后，这么大的文件会让浏览器缓慢运行。</p>
<p>试着少加载一些 JS 代码吧。你的项目也许不需要<a href="https://surma.github.io/underdash/">完整的 Lodash 库</a>；你有必要非得使用一个 JS 框架吗？如果是，你考虑过使用体积是 React 1&#x2F;20 的 <a href="https://github.com/developit/preact">Preact</a> 或是 <a href="https://viperhtml.js.org/">HyperHTML</a> 吗？为了实现滑到顶部的动画你有必要使用 <a href="https://greensock.com/tweenmax">TweenMax</a> 吗？伴随着 npm 的便捷与各框架组件的独立，缺点应运而生：开发者面对一个问题时的第一反应变成了用更多 JS 代码来解决。当你拥有一把锤子时，一切看起来都像钉子。</p>
<p>当你在删繁就简、加载更少的 JS 代码之后，试着更聪明地加载它：需要时再加载。</p>
<p>Webpack 3 有一组了不起的功能名为 <a href="https://webpack.js.org/guides/code-splitting/">code splitting</a> 和 <a href="https://webpack.js.org/guides/code-splitting/#dynamic-imports">dynamic imports</a>。相较将所有 JS 模块打包成一个庞大的 app.js 包，这组功能可以自动切分代码并使用 <code>import()</code> 语法异步加载它们。</p>
<p>你不一定需要使用框架、组件和客户端路由以获得其优点。假设你有一段复杂的代码处理 <code>.mega-widget</code> 类的节点，这段代码可能存在于任意页面上，你可以简单得在你的主 JS 文件中编写如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.mega-widget&#x27;</span>)) &#123;</span><br><span class="line">  <span class="keyword">import</span>(<span class="string">&#x27;./mega-widget&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果你的应用在当前页找到了部件，它将会动态加载所需的依赖代码。否则一切正常。</p>
<p>除此之外，Webpack 工作需要其自身的运行时，它将在其生成的所有 JS 文件中注入运行时代码。如果你使用了 <code>commonChunks</code> 插件，你可以使用如下方法<a href="https://medium.com/connect-the-dots/caching-assets-long-term-with-webpack-5ad24a4c39bd">将运行时抽取到一个独立的代码块中</a>：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> webpack.<span class="property">optimize</span>.<span class="title class_">CommonsChunkPlugin</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;runtime&#x27;</span>,</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure>
<p>在这个例子中，会将所有代码块中的运行时剔除出来，写入 <code>runtime.js</code> 中。只需确保在主 JS 包之前先加载它，例如这样：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;runtime.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;main-bundle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>接下来谈谈 transpiled code 和 polyfills。如果你编写的是现代（ES6+） JS 代码，你很可能正在使用 Babel 将它们转译为 ES5 兼容的代码。转译（Transpiling）不仅因为各种冗余增加文件体积，也因其相比原生 ES6+ 代码更加复杂带来了<a href="https://github.com/babel/babel/pull/6748">性能退化</a>问题。</p>
<p>你可能还顺道使用了 <code>babel-polyfill</code> 和 <code>whatwg-fetch</code> 库来补充旧版本浏览器中缺失的一些特性。然后，如果你在代码中使用了 <code>async/await</code> ，你还需要引用 <code>regenerator-runtime</code> 库来转译…</p>
<p>重点是，为了支持老版本的浏览器，你的 JS 包因此平添了近 100K，不仅体积较大，也会耗费更多的解析和执行成本。</p>
<p>没理由因为上述问题而降低使用现代浏览器的人的用户体验，这里介绍一个我正在使用、同时 Philip Walton 也在<a href="https://philipwalton.com/articles/deploying-es2015-code-in-production-today/">这篇文章</a>中介绍的方法：创建两个独立的包并依情况加载。使用 <code>babel-preset-env</code> 可以很容易实现，例如你有一个支持 IE 11 的包和另一个为最新版现代浏览器准备的没有任何 polyfills 的包，一种不优雅但是高效的方式是将以下代码写入内联脚本中：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&#x27;async () =&gt; &#123;&#125;&#x27;</span>)();</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="comment">// create script tag pointing to legacy-bundle.js;</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// create script tag pointing to modern-bundle.js;;</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<p>如果浏览器无法识别 <code>async</code> 函数，我们则判定它是一个旧版浏览器并加载已经 polyilled 的包，反之将加载一个简洁且现代化的变体。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们想要你从本文得到的观点是 JS 是一门运行昂贵、应该被小心使用的语言。</p>
<p>请确保在真实网络环境下使用低端设备测试你的网站性能。你的网站应该尽可能快被加载且变得可交互。这意味着通过任何有必要的方法减少 JS 的代码体积、加快加载速度。只要有可能时，你的代码应该都是 minified 过的，被切成更小、可控的包，并被异步加载的。在服务器端，确保启用了 HTTP&#x2F;2 协议以获得更快的并行传输速度，同时使用 gzip&#x2F;Brotli 压缩更加彻底地减少 JS 包体积。</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul>
<li><a href="https://docs.google.com/spreadsheets/d/1wHcNNQea28LhwQ_amFamT33d5woVrJfJy53Z1k6V090">Addy Osmani: Time spent in JS Parse &amp; eval for average JS</a></li>
<li><a href="https://www.youtube.com/watch?v=RWLzUnESylc">Sam Saccone: Planning for Performance: PRPL</a></li>
<li><a href="https://www.youtube.com/watch?v=_srJ7eHS3IM"><em>Fast By Default: Modern Loading Best Practices (Chrome Dev Summit 2017)</em></a></li>
<li><a href="https://medium.com/reloading/javascript-start-up-performance-69200f43b201">Addy Osmani: JavaScript Start-up Performance</a></li>
</ul>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>javascript</tag>
        <tag>optimization</tag>
        <tag>performance</tag>
      </tags>
  </entry>
  <entry>
    <title>Jazz guitar foundations</title>
    <url>/2021/jazz-guitar-foundations/</url>
    <content><![CDATA[<p>Note of preparatory courses of Cai Jian (蔡剑) jazz guitar lessons by Qihao Chen (陈启豪).</p>
<span id="more"></span>



<h2 id="Course-1"><a href="#Course-1" class="headerlink" title="Course 1"></a>Course 1</h2><h3 id="Four-stages-of-practice"><a href="#Four-stages-of-practice" class="headerlink" title="Four stages of practice:"></a>Four stages of practice:</h3><ol>
<li>Learn the thing from unknown to known</li>
<li>Get familiar with it on the instrument</li>
<li>Apply it to your playing like melodic sequence</li>
<li>Internalization</li>
</ol>
<h3 id="The-first-step-of-learning-jazz-guitar"><a href="#The-first-step-of-learning-jazz-guitar" class="headerlink" title="The first step of learning jazz guitar"></a>The first step of learning jazz guitar</h3><p>Know every note of strings and frets on the standard tuning guitar.</p>
<ul>
<li>CAGED system<ul>
<li>Think about the positions on fretboard corresponding to the note invervals</li>
<li>Playing a scale can reflect the sequence of intervals</li>
</ul>
</li>
<li>3NPS (3 Notes Per String)</li>
</ul>
<h3 id="Chord"><a href="#Chord" class="headerlink" title="Chord"></a>Chord</h3><p>Two important factors:</p>
<ul>
<li>Root note</li>
<li>Type of chord</li>
</ul>
<p>Think of the C major chord by harmonizing C note in C major scale, so the other notes in the scale with third intervals are E and G. Same thing to the other notes or scales, we have these common chords:</p>
<ul>
<li>Triads: major (1, 3, 5), minor (1, b3, 5), augmented (1, 3, #5), diminished (1, b3, b5)</li>
<li>7th chords: major (1, 3, 5, 7), dominant (1, 3, 5, b7), minor (1, b3, 5, b7), half diminished (1, b3, b5, b7), diminished (1, b3, b5, bb7), minor major (1, b3, 5, 7), augmented major (1, 3, #5, 7)</li>
</ul>
<h3 id="Figure-out-the-root-position-of-chords"><a href="#Figure-out-the-root-position-of-chords" class="headerlink" title="Figure out the root position of chords"></a>Figure out the root position of chords</h3><ol>
<li>Know the members of chord due to its type</li>
<li>Find the root notes on 4th to 6th strings</li>
<li>Find the position of other notes due to the intervals</li>
</ol>
<p>In this way we can infer 5 common patterns (R, 5, 7, 3 and R, 7, 3, 5) by CAGED system of each type of chords.</p>
<h3 id="Chord-scale-system"><a href="#Chord-scale-system" class="headerlink" title="Chord-scale system"></a>Chord-scale system</h3><p>The chord is equal to the scale and vice versa. Think that a heptatonic scale (like diatonic scale) is consist of 4 notes of the 7th chord which the root note is harmonized with other 3 extensions. In the other hand, 4 notes determine the type of chord, and 3 extensions determine the type of scale. Like playing a maj7 could be Ionion or Lydian mode scales, plus a #4 extension makes it a Lydian.</p>
<h3 id="Rhythm"><a href="#Rhythm" class="headerlink" title="Rhythm"></a>Rhythm</h3><ul>
<li>Beat: the unit of time for music, BPM (Beats Per Minute)</li>
<li>Metre: the regularly recurring patterns and accents such as bars and beats</li>
<li>Rhythm: the combination of beat and metre over time</li>
</ul>
<h3 id="Homeworks"><a href="#Homeworks" class="headerlink" title="Homeworks"></a>Homeworks</h3><ol>
<li>C major scale on CAGED system:<ul>
<li>Cover all notes of 5 positions</li>
<li>Start and end from other notes instead of the root note</li>
<li>Various scale patterns</li>
</ul>
</li>
<li>Find the note position due to interval<ul>
<li>Imagine you have two pairs of cards, one pair are ascending and descending order cards, another one are interval cards like minor 2nd, major 2nd, minor 3rd, …, etc</li>
<li>Pick the root note and each one card from two pairs like F on 6th string, ascending and perfect 5th</li>
<li>Find the the ascending perfect 5th note of F on 6th string</li>
</ul>
</li>
</ol>
<h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><ul>
<li>Try to think faster before playing.</li>
<li>Inversion of interval of two notes, 9 &#x3D; perfect 4th and perfect 5th &#x3D; major 3rd and minor 6th</li>
<li><em>Maybe you can try this mini app <a href="https://joouis.com/fingerboard-mate/">Fingerboard mate</a></em></li>
</ul>
<h2 id="Course-2"><a href="#Course-2" class="headerlink" title="Course 2"></a>Course 2</h2><h3 id="Modes"><a href="#Modes" class="headerlink" title="Modes"></a>Modes</h3><p>Older than natural major&#x2F;minor scales.</p>
<table>
<thead>
<tr>
<th align="center">Tonic relative to major scale</th>
<th align="center">Name</th>
<th align="center">Interval sequence</th>
<th align="center">Tonic 7th chord</th>
</tr>
</thead>
<tbody><tr>
<td align="center">I</td>
<td align="center">Natural major scale, Ionian mode</td>
<td align="center">1, 2, 3, 4, 5, 6, 7</td>
<td align="center">△7</td>
</tr>
<tr>
<td align="center">II</td>
<td align="center">Dorian mode</td>
<td align="center">1, 2, b3, 4, 5, 6, b7</td>
<td align="center">-7</td>
</tr>
<tr>
<td align="center">III</td>
<td align="center">Phrygian mode</td>
<td align="center">1, b2, b3, 4, 5, b6, b7</td>
<td align="center">-7</td>
</tr>
<tr>
<td align="center">IV</td>
<td align="center">Lydian mode</td>
<td align="center">1, 2, 3, #4, 5, 6, 7</td>
<td align="center">△7</td>
</tr>
<tr>
<td align="center">V</td>
<td align="center">Mixolydian mode</td>
<td align="center">1, 2, 3, 4, 5, 6, b7</td>
<td align="center">dom7</td>
</tr>
<tr>
<td align="center">VI</td>
<td align="center">Natural minor scale, Aeolian mode</td>
<td align="center">1, 2, b3, 4, 5, b6, b7</td>
<td align="center">-7</td>
</tr>
<tr>
<td align="center">VII</td>
<td align="center">Locrian mode</td>
<td align="center">1, b2, b3, 4, b5, b6, b7</td>
<td align="center">-7b5</td>
</tr>
</tbody></table>
<p>C major scale we practiced before has same notes to the D dorian, E phrygian, F lydian, G mixolydian, A aeolian and B locrian.</p>
<h3 id="Practice-hints-with-fifth-circle"><a href="#Practice-hints-with-fifth-circle" class="headerlink" title="Practice hints with fifth circle"></a>Practice hints with fifth circle</h3><ul>
<li>Start from dorian and mixolydian modes which are ofren used for minor and dominant chords</li>
<li>Change root note and practice with corresponding interval sequence on C major scale on CAGED system</li>
<li>Modulation: play each key along with fifth circle on <strong>one position area</strong> of CAGED system</li>
<li>Write down the notes of major scale, modes name and corresponding tonic chords to help remembering</li>
<li>Play tonic chord before and after scale&#x2F;mode</li>
<li>Practice root position for one kind of chords along with fifth circle on one position area of CAGED system, like play major chords in 12 keys on C position then go to other positions, then change to minor chords, dominant chords…</li>
</ul>
<h3 id="Subdivision"><a href="#Subdivision" class="headerlink" title="Subdivision"></a>Subdivision</h3><p>Dividing the beat into smaller units. Swing 8th are perfoming by one 1&#x2F;3 triplets and another 2&#x2F;3 triplets, counting triplets beats in mind.</p>
<h3 id="Comping"><a href="#Comping" class="headerlink" title="Comping"></a>Comping</h3><p>Providing background like chords, timing, etc to make improvised solo or meldoy lines a complete work. It also has lots of possibilities as same as solo to create or renew the song. Recommend the guitarist Freddie Green to know more.</p>
<h3 id="Homeworks-1"><a href="#Homeworks-1" class="headerlink" title="Homeworks"></a>Homeworks</h3><ol>
<li>Know well about the name and interval sequence of 7 modes<ul>
<li>Random root note with random mode to practice</li>
<li>Play swing 8th</li>
</ul>
</li>
<li>Proficient in playing major II-V-I chords in each key<ul>
<li>Random root note</li>
<li>Play swing 4th (mute the third beat in triplets)</li>
</ul>
</li>
</ol>
<h2 id="Course-3"><a href="#Course-3" class="headerlink" title="Course 3"></a>Course 3</h2><h3 id="Minor-II-V-I"><a href="#Minor-II-V-I" class="headerlink" title="Minor II-V-I"></a>Minor II-V-I</h3><p>In the natural minor scale (1, 2, b3, 4, 5, b6, b7), the tension can’t be resolved due to both V and I are minor chords. Thus leverage the harmonic minor scale (1, 2, b3, 4, 5, b6, 7) to make V to be dominant chord, but also keep the II and I chords in natural minor scale to construct the minor II-V-I.</p>
<p>Comparing to the V in major scale (1, 2, 3, 4, 5, 6, b7), the V in harmonic minor scale (1, b2, 3, 4, 5, b6, 7) has b9 and b13 notes which is called altered. Typically, a dominant seventh chord is considered altered if either or both the 5th or 9th are chromatically raised or lowered (#9 or b9 and #11 or b13).</p>
<p>In result, the minor II-V-I is m7b5-dom7alt-min7. You can also change the I to minMaj7 if you prefer harmonic minor scale.</p>
<h3 id="Phrygian-dominant-mode"><a href="#Phrygian-dominant-mode" class="headerlink" title="Phrygian dominant mode"></a>Phrygian dominant mode</h3><p>There are also 7 modes based on harmonic minor scale, the most common one is the 5th mode phrygian dominant. When you see a G13 chord, it must comes from a major scale. And when you see a dom7b9, you can infer that it comes from the V in minor scale, then you can play phrygian dominant.</p>
<p>Moreover, the basic patterns to play minor II-V-I are locrian for minor II, phrygian dominant for minor V and aeolian or dorian for minor I.</p>
<h3 id="Avoid-note"><a href="#Avoid-note" class="headerlink" title="Avoid note"></a>Avoid note</h3><p>Avoid note will change the functionality of chords.</p>
<ul>
<li>For major and dominant chords, the avoid note is 4th diatonic scale step (11), the available extensions are 9, #11, 13.</li>
<li>For minors chords, the avoid note is 6th scale step (13), the available extensions are 9, 11. There is an exception, it can work if the minor chord acts as dominant function. For instance, replace V dominant by IV minor and the progression turns to be IV major, IV minor and I major, sounds great.</li>
</ul>
<p>Avoid notes for modes of the C major scale:</p>
<table>
<thead>
<tr>
<th align="center">Scale degree</th>
<th align="center">Chord</th>
<th align="center">Mode</th>
<th align="center">Avoid note</th>
<th align="center">Available tensions</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">Cmaj7</td>
<td align="center">Ionian</td>
<td align="center">Fourth scale step, F</td>
<td align="center">9, 13</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">Dm7</td>
<td align="center">Dorian</td>
<td align="center">Sixth scale step, B</td>
<td align="center">9, 11</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">Em7</td>
<td align="center">Phrygian</td>
<td align="center">Second and sixth scale steps, F and C</td>
<td align="center">11</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">Fmaj7</td>
<td align="center">Lydian</td>
<td align="center">No avoid note</td>
<td align="center">9, ♯11, 13</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">G7</td>
<td align="center">Mixolydian</td>
<td align="center">Fourth scale step, C</td>
<td align="center">9, 13</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">Am7</td>
<td align="center">Aeolian</td>
<td align="center">Sixth scale step, F</td>
<td align="center">9, 11</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">Bø7</td>
<td align="center">Locrian</td>
<td align="center">Second scale step, C</td>
<td align="center">11, ♭13</td>
</tr>
</tbody></table>
<h3 id="Steps-to-learn-a-standard"><a href="#Steps-to-learn-a-standard" class="headerlink" title="Steps to learn a standard"></a>Steps to learn a standard</h3><ol>
<li>Listen multiple versions of the song with lead sheet, figure out the form of the song.</li>
<li>Practice the melody and chords of the song.</li>
<li>Practice scales and arpeggios through the chords.</li>
<li>Improvisation. This a really comprehensive topic, try to find the 3rd notes of every chords at first.</li>
</ol>
<h3 id="Homeworks-2"><a href="#Homeworks-2" class="headerlink" title="Homeworks"></a>Homeworks</h3><ol>
<li>Harmonic minor scales on CAGED system with 5th dominant 7th chord, for example A harmonic minor scale with E7 on 5 positions.</li>
<li>II-V-I progression of relative keys. For C major and A minor keys, the progression is Dm7-G7-C-Bm7b5-E7Alt-Am7. Try chord progression in other keys as well as arpeggios.</li>
</ol>
<h2 id="Course-4"><a href="#Course-4" class="headerlink" title="Course 4"></a>Course 4</h2><h3 id="Melodic-minor-scale"><a href="#Melodic-minor-scale" class="headerlink" title="Melodic minor scale"></a>Melodic minor scale</h3><ul>
<li>The ascending melodic minor scale, aka jazz minor scale: 1, 2, ♭3, 4, 5, 6, 7</li>
<li>The descending melodic minor scale: 1, 2, ♭3, 4, 5, ♭6, ♭7</li>
</ul>
<p>Modes of the ascending melodic minor scale:</p>
<table>
<thead>
<tr>
<th align="center">Mode</th>
<th align="center">Name</th>
<th align="center">Associated chords</th>
</tr>
</thead>
<tbody><tr>
<td align="center">I</td>
<td align="center"><a href="https://en.wikipedia.org/wiki/Ascending_melodic_minor">Ascending melodic minor</a></td>
<td align="center">C minor major 7 (9, 11, 13) or C minor 6 chords (functions as i minor)</td>
</tr>
<tr>
<td align="center">II</td>
<td align="center">Phrygian ♮6, <a href="https://en.wikipedia.org/wiki/Dorian_%E2%99%AD2_scale">Dorian ♭2</a>, Assyrian, or Phrygidorian</td>
<td align="center">D7sus (♭9, ♯9, 13) chord, with ♭2 as a non-chord tone producing a minor ninth</td>
</tr>
<tr>
<td align="center">III</td>
<td align="center"><a href="https://en.wikipedia.org/wiki/Lydian_augmented_scale">Lydian augmented</a> or Lydian ♯5</td>
<td align="center">E♭ major 7♯5 (9, #11) chord (functions as a III+)</td>
</tr>
<tr>
<td align="center">IV</td>
<td align="center"><a href="https://en.wikipedia.org/wiki/Lydian_dominant_scale">Lydian dominant</a>, Lydian ♭7, <a href="https://en.wikipedia.org/wiki/Acoustic_scale">Acoustic scale</a>, Mixolydian ♯4, Overtone, or Lydomyxian</td>
<td align="center">F7 (9, ♯11, 13) chord (functions as a dominant, secondary, or substitute dominant)</td>
</tr>
<tr>
<td align="center">V</td>
<td align="center"><a href="https://en.wikipedia.org/wiki/Aeolian_dominant_scale">Mixolydian ♭6</a>, Melodic major, fifth mode of Melodic minor, Hindu, or Myxaeolian</td>
<td align="center">G7 (9, ♭13) chord (functions as a dominant with ♭13 as a non-chord tone or the fifth avoided in the chord voicing as they produce a minor ninth)</td>
</tr>
<tr>
<td align="center">VI</td>
<td align="center">Locrian ♮2, <a href="https://en.wikipedia.org/wiki/Half_diminished_scale">Half-diminished</a>, or Aeolocrian</td>
<td align="center">A minor 7♭5 (9, 11, ♭13) (functions as a ii chord in the fifth mode of melodic minor)</td>
</tr>
<tr>
<td align="center">VII</td>
<td align="center">Super Locrian, Altered dominant scale, or <a href="https://en.wikipedia.org/wiki/Altered_scale">altered scale</a></td>
<td align="center">B7 (♯ or ♭9, ♯11, ♭13) chord (functions as a dominant with the fifth of the chord replaced by ♯11 or ♭13, may also be used to harmonize a vii7♭5 chord in melodic minor)</td>
</tr>
</tbody></table>
<h3 id="Tritone-substitution"><a href="#Tritone-substitution" class="headerlink" title="Tritone substitution"></a>Tritone substitution</h3><p>If two chords share the same 3rd and 7th notes, they will have similar sound thus can replace each other. For example, we can play IIm7-bII7-I△7 instead of IIm7-V7-I△7 to make bassline changing smoothly.</p>
<p>Lydian dominant is the most important mode of melodic scale, the only difference with mixolydian mode is #4 note. One common scenario to apply this mode is with tritone substitution, an approach to help finding the positions on fretboard quickly. If you want to play the V dominant altered scale on V7 chord, it’s exactly the bII lydian dominant scale on bII7.</p>
<h3 id="Homework"><a href="#Homework" class="headerlink" title="Homework"></a>Homework</h3><p>Melodic minor scales on CAGED system with related tonic chords.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><a href="https://en.wikipedia.org/wiki/Mode_(music)">Mode</a></li>
<li><a href="https://en.wikipedia.org/wiki/Avoid_note">Avoid note</a></li>
<li><a href="https://en.wikipedia.org/wiki/Jazz_scale">Jazz scale</a></li>
</ul>
]]></content>
      <categories>
        <category>爱乐之城</category>
      </categories>
      <tags>
        <tag>music</tag>
        <tag>jazz</tag>
        <tag>jazz guitar</tag>
        <tag>note</tag>
        <tag>chords</tag>
        <tag>scales</tag>
        <tag>harmony</tag>
      </tags>
  </entry>
  <entry>
    <title>编译器入门小笔记</title>
    <url>/2020/lab-compiler-intro/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2019/watching-notes-revolution-os/">嵌入式笔记</a>第五篇，原文写于2015年。</p>
<span id="more"></span>



<h2 id="Week-5-课程"><a href="#Week-5-课程" class="headerlink" title="Week#5 课程"></a>Week#5 课程</h2><ul>
<li>课程共笔<a href="https://paper.dropbox.com/doc/xsUE7O7d02YlsKydh7Xdp">链接</a></li>
</ul>
<h3 id="Steve-Jobs-─-Lost-interview"><a href="#Steve-Jobs-─-Lost-interview" class="headerlink" title="Steve Jobs ─ Lost interview"></a><a href="https://www.youtube.com/watch?v=6CJMQHLfqUQ"><strong>Steve Jobs ─ Lost interview</strong></a></h3><ul>
<li>“You know, throughout the years in business, <strong>I found something, which I was always ask why you do things, and the answers you inevitably get are ‘oh that’s just the way it’s done’, nobody knows why they do, nobody thinks about things very deeply</strong> in business, that’s what I found.”</li>
<li>Feeling: Impressive, attractive, passionate</li>
</ul>
<h3 id="GNU-Toolchain"><a href="#GNU-Toolchain" class="headerlink" title="GNU Toolchain"></a>GNU Toolchain</h3><p><img data-src="https://cdn.joouis.com/lab-compiler-intro-1.png"></p>
<ul>
<li>Procedure: arguments是呼叫函式傳遞的，parameters是被呼叫函式接收到的</li>
<li>組語在procedure call如何傳遞參數？<a href="http://infocenter.arm.com/help/topic/com.arm.doc.ihi0042e/IHI0042E_aapcs.pdf">AAPCS</a><ul>
<li>eabi: embedded <a href="https://zh.wikipedia.org/wiki/%E5%BA%94%E7%94%A8%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%8E%A5%E5%8F%A3">abi</a></li>
<li>the sizes, layout, and alignment of data types</li>
<li>the calling convention, which controls how functions’ arguments are passed and return values retrieved; for example, whether all parameters are passed on the stack or some are passed in registers, which registers are used for which function parameters, and whether the first function parameter passed on the stack is pushed first or last onto the stack</li>
<li>how an application should make system calls to the operating system and, if the ABI specifies direct system calls rather than procedure calls to system call stubs, the system call numbers and in the case of a complete operating system ABI, the binary format of object files, program libraries and so on.<br><img data-src="https://cdn.joouis.com/lab-compiler-intro-2.png"></li>
</ul>
</li>
<li><strong>Accessing operands</strong><br>通常 procedure 存取 operands 透過以下幾種方式:<ul>
<li>An argument passed on a register : 直接使用暫存器</li>
<li>An argument passed on the stack : 使用 stack pointer (R13) 的相對定址 (immediate offset)</li>
<li>A constant : PC-relative addressing</li>
<li>A local variable : 分配在 stack 上，透過 stack pointer 相對定址方式存取</li>
<li>A global variable : 分配在 static area (就是樓上圖片的 static data)，透過 static base (R9) 相對定址存取</li>
</ul>
</li>
<li>Target triple<ul>
<li>hf: hard float，預設有FPU</li>
<li>armeb-linux-gnueabihf-*: <a href="http://launchpad.net/gcc-linaro"><strong>Linaro</strong></a> ARMv7 <strong>big-endian Linux GNU EABI HF</strong></li>
</ul>
</li>
</ul>
<h3 id="Compiler-concepts"><a href="#Compiler-concepts" class="headerlink" title="Compiler concepts"></a>Compiler concepts</h3><ul>
<li><a href="https://paper.dropbox.com/doc/V5PJzVrvEfJ275Wfj1Ilq">Compiler的多元應用</a></li>
<li><a href="http://www.slideshare.net/jserv/jit-compiler">Interpreter, Compiler, JIT from scratch</a><ul>
<li>Turing completeness: a system of data-manipulation rules can be used to simulate any single-taped <a href="https://en.wikipedia.org/wiki/Turing_machine">Turing machine</a>.</li>
<li>Interpreter：本身是一個可執行檔案，工作就是翻譯并執行輸入的程式碼</li>
<li>compiler: compile source code to native machine code(ISA, ABI)<ul>
<li>實作方式是將原始碼翻譯成backend對應的assembly然後打印出來通過stdout存到一個文件(compiler-XX.c)，再用compiler編譯後執行(Makefile實現)</li>
<li>GAS(GNU Assembler) program format(AT&amp;T)<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> *<span class="type">const</span> prologue =</span><br><span class="line"><span class="string">&quot;.text\n&quot;</span></span><br><span class="line"><span class="string">&quot;.global _main\n&quot;</span></span><br><span class="line"><span class="string">&quot;main:\n&quot;</span></span><br><span class="line"><span class="string">&quot;    pushq %rbp\n&quot;</span></span><br><span class="line"><span class="string">&quot;    movq %rsp, %rbp\n&quot;</span></span><br><span class="line"><span class="string">&quot;    pushq %r12\n&quot;</span> <span class="comment">// store callee saved register</span></span><br><span class="line"><span class="string">&quot;    subq $30008, %rsp\n&quot;</span> <span class="comment">// allocate 30,008 B on stack, and realign</span></span><br><span class="line"><span class="string">&quot;    leaq (%rsp), %rdi\n&quot;</span> <span class="comment">// address of beginning of tape</span></span><br><span class="line"><span class="string">&quot;    movl $0, %esi\n&quot;</span> <span class="comment">// fill with 0&#x27;s</span></span><br><span class="line"><span class="string">&quot;    movq $30000, %rdx\n&quot;</span> <span class="comment">// length 30,000 B</span></span><br><span class="line"><span class="string">&quot;    call memset\n&quot;</span> <span class="comment">// memset</span></span><br><span class="line"><span class="string">&quot;    movq %rsp, %r12&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *<span class="type">const</span> epilogue =</span><br><span class="line"><span class="string">&quot;    addq $30008, %rsp\n&quot;</span> <span class="comment">// clean up tape from stack.</span></span><br><span class="line"><span class="string">&quot;    popq %r12\n&quot;</span> <span class="comment">// restore callee saved register</span></span><br><span class="line"><span class="string">&quot;    popq %rbp\n&quot;</span></span><br><span class="line"><span class="string">&quot;    ret\n&quot;</span>;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
<li>X64 Calling convention<ul>
<li><a href="http://pubs.opengroup.org/onlinepubs/007904875/basedefs/sys/mman.h.html">sys&#x2F;mman.h</a>: memory management declarations<br><img data-src="https://cdn.joouis.com/lab-compiler-intro-3.png"></li>
</ul>
</li>
<li><a href="http://blog.linux.org.tw/~jserv/archives/2011/09/_mandelbrot_set.html">Fractals in C</a><ul>
<li><a href="https://zh.wikipedia.org/wiki/Complex.h">complex.h</a>: 提供了複數運算所需的巨集定義和函式申明</li>
<li>cimag: get imaginary part of a complex number</li>
<li>creal: get real part of a complex number</li>
<li><a href="http://www.wikihow.com/Plot-the-Mandelbrot-Set-By-Hand">How to Plot the Mandelbrot Set By Hand</a></li>
</ul>
</li>
<li><a href="http://www.slideshare.net/jserv/vm-construct">Virtual Machine Constructions for Dummies</a></li>
<li><a href="http://www.slideshare.net/jserv/how-a-compiler-works-gnu-toolchain">How A Compiler Works: GNU Toolchain</a></li>
</ul>
<h3 id="Homework"><a href="#Homework" class="headerlink" title="Homework"></a>Homework</h3><h4 id="作業要求-B"><a href="#作業要求-B" class="headerlink" title="作業要求 (B)"></a>作業要求 (B)</h4><ul>
<li>難度：中</li>
<li>詳讀 <a href="http://www.slideshare.net/jserv/vm-construct">Virtual Machine Constructions for Dummies</a>，改善 Brainf*ck 執行效能<ul>
<li>改善 JIT compiler，加入若干 optimization techniques</li>
</ul>
</li>
<li>在 GitHub 上 fork <a href="https://github.com/embedded2015/jit-construct">jit-construct</a><ul>
<li>紀錄若干效能最佳化技巧帶來的提昇</li>
</ul>
</li>
<li>建立新的 Hackpad，列在「<a href="https://paper.dropbox.com/doc/cSnReWUgyLPcwiJ3uUIyo">+作業區</a>」<ul>
<li>標注「開發紀錄(B)」</li>
</ul>
</li>
</ul>
<h4 id="Homework-note"><a href="#Homework-note" class="headerlink" title="Homework note"></a>Homework note</h4><ul>
<li>根據<a href="http://www.slideshare.net/jserv/vm-construct">Virtual Machine Constructions for Dummies</a>P43-46中<strong>預先判斷未來指令-減少instructions</strong>的思路，在switch-case時對未來的指令做判斷，如果符合情況就做優化<ul>
<li>挑最簡單的Interpreter入手先@@</li>
<li>以Tower of Hanoi程式為例已先貼原始數據<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">origin version：</span><br><span class="line">real    0m30.031s         Towers of Hanoi in Brainf*ck</span><br><span class="line">user    0m30.024stten by Clifford Wolf &lt;http://www.clifford.at/bfcpu/&gt;</span><br><span class="line">sys     0m0.000s</span><br><span class="line"></span><br><span class="line">optimal version：</span><br><span class="line">real    0m11.575s         Towers of Hanoi in Brainf*ck</span><br><span class="line">user    0m11.572stten by Clifford Wolf &lt;http://www.clifford.at/bfcpu/&gt;</span><br><span class="line">sys     0m0.000s</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>P47開始介紹了一些最佳化的技巧，并提供了參考的<a href="https://github.com/matslina/bfoptimization">source code</a>。首先實作最佳化時，使用了IR(Intermediate language)，先將brainfuck程式轉換成IR程式，再將IR程式轉換成C程式<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">bf_to_ir</span>(<span class="params">brainfuck</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Translates brainfuck to IR.&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    simplemap = &#123;<span class="string">&#x27;+&#x27;</span>: Add(<span class="number">1</span>, <span class="number">0</span>),</span><br><span class="line">                <span class="string">&#x27;-&#x27;</span>: Sub(<span class="number">1</span>, <span class="number">0</span>),</span><br><span class="line">                <span class="string">&#x27;&gt;&#x27;</span>: Right(<span class="number">1</span>),</span><br><span class="line">                <span class="string">&#x27;&lt;&#x27;</span>: Left(<span class="number">1</span>),</span><br><span class="line">                <span class="string">&#x27;,&#x27;</span>: In(<span class="number">0</span>),</span><br><span class="line">                <span class="string">&#x27;.&#x27;</span>: Out(<span class="number">0</span>),</span><br><span class="line">                <span class="string">&#x27;[&#x27;</span>: Open(),</span><br><span class="line">                <span class="string">&#x27;]&#x27;</span>: Close()&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [simplemap[c] <span class="keyword">for</span> c <span class="keyword">in</span> brainfuck <span class="keyword">if</span> c <span class="keyword">in</span> simplemap]</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ir_to_c</span>(<span class="params">ir</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Translates IR into a C program.&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    plain = &#123;Add: <span class="string">&#x27;mem[p] += %(x)d;&#x27;</span>,</span><br><span class="line">            Sub: <span class="string">&#x27;mem[p] -= %(x)d;&#x27;</span>,</span><br><span class="line">            Right: <span class="string">&#x27;p += %(x)d;&#x27;</span>,</span><br><span class="line">            Left: <span class="string">&#x27;p -= %(x)d;&#x27;</span>,</span><br><span class="line">            Open: <span class="string">&#x27;while (mem[p]) &#123;&#x27;</span>,</span><br><span class="line">            Close: <span class="string">&#x27;&#125;&#x27;</span>,</span><br><span class="line">            In: <span class="string">&#x27;mem[p] = getchar();&#x27;</span>,</span><br><span class="line">            Out: <span class="string">&#x27;putchar(mem[p]);&#x27;</span>,</span><br><span class="line">            Clear: <span class="string">&#x27;mem[p] = 0;&#x27;</span>,</span><br><span class="line">            Copy: <span class="string">&#x27;mem[p+%(off)d] += mem[p];&#x27;</span>,</span><br><span class="line">            Mul: <span class="string">&#x27;mem[p+%(off)d] += mem[p] * %(factor)d;&#x27;</span>,</span><br><span class="line">            ScanLeft: <span class="string">&#x27;p -= (long)((void *)(mem + p) - memrchr(mem, 0, p+1));&#x27;</span>,</span><br><span class="line">            ScanRight: <span class="string">&#x27;p += (long)(memchr(mem+p, 0, sizeof(mem)) - (void *)(mem+p));&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    woff = &#123;Add: <span class="string">&#x27;mem[p+%(offset)d] += %(x)d;&#x27;</span>,</span><br><span class="line">            Sub: <span class="string">&#x27;mem[p+%(offset)d] -= %(x)d;&#x27;</span>,</span><br><span class="line">            In: <span class="string">&#x27;mem[p+%(offset)d] = getchar();&#x27;</span>,</span><br><span class="line">            Out: <span class="string">&#x27;putchar(mem[p+%(offset)d]);&#x27;</span>,</span><br><span class="line">            Clear: <span class="string">&#x27;mem[p+%(offset)d] = 0;&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    code = [(woff <span class="keyword">if</span> <span class="built_in">getattr</span>(op, <span class="string">&#x27;offset&#x27;</span>, <span class="number">0</span>) <span class="keyword">else</span> plain)[op.__class__] % op._asdict()</span><br><span class="line">            <span class="keyword">for</span> op <span class="keyword">in</span> ir]</span><br><span class="line">    code.insert(<span class="number">0</span>, <span class="string">&#x27;\n&#x27;</span>.join([<span class="string">&#x27;#include &lt;stdio.h&gt;&#x27;</span>,</span><br><span class="line">                              <span class="string">&#x27;#include &lt;string.h&gt;&#x27;</span>,</span><br><span class="line">                              <span class="string">&#x27;unsigned char mem[65536];&#x27;</span>,</span><br><span class="line">                              <span class="string">&#x27;int main() &#123;&#x27;</span>,</span><br><span class="line">                              <span class="string">&#x27;int p=0;&#x27;</span>]))</span><br><span class="line">    code.append(<span class="string">&#x27;return 0;&#x27;</span>)</span><br><span class="line">    code.append(<span class="string">&#x27;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
<li>實作IR的缺點是要轉換兩次，但好處更多：<ol>
<li>提供更為抽象的表示方式</li>
<li>將前端程式語言和後端的機器語言分離</li>
<li>(額外的)過濾原代碼：可以從bf_to_ir看到它只讀bf的6個指令，如果程式碼包含其他的無效代碼，這裡也會先被過濾掉</li>
</ol>
</li>
<li>最佳化的方法提到以下幾種：<ul>
<li>Contraction<br><img data-src="https://cdn.joouis.com/lab-compiler-intro-4.png"></li>
<li>Clear loops<br><img data-src="https://cdn.joouis.com/lab-compiler-intro-5.png"></li>
<li>Copy loops<br><img data-src="https://cdn.joouis.com/lab-compiler-intro-6.png"></li>
<li>Multiplication loop<br><img data-src="https://cdn.joouis.com/lab-compiler-intro-7.png"></li>
<li>Operation offsets<br><img data-src="https://cdn.joouis.com/lab-compiler-intro-8.png"></li>
<li>Scan loops<br><img data-src="https://cdn.joouis.com/lab-compiler-intro-9.png"></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system course</tag>
        <tag>embedded system</tag>
        <tag>gnu</tag>
        <tag>compiler</tag>
        <tag>jit</tag>
      </tags>
  </entry>
  <entry>
    <title>GDB/CGDB入门与拆弹游戏</title>
    <url>/2020/lab-gdb-intro/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2019/watching-notes-revolution-os/">嵌入式笔记</a>第七篇同时也是完结篇，原文写于2015年。本文除了介绍GDB&#x2F;CGBD的基础使用方法以及嵌入式开发应用外，还会分享一个解密类经典游戏 <code>Defusing a binary bomb with GDB</code> ，非常有趣！</p>
<span id="more"></span>



<h2 id="使用GDB"><a href="#使用GDB" class="headerlink" title="使用GDB"></a>使用GDB</h2><h3 id="GDB"><a href="#GDB" class="headerlink" title="GDB"></a>GDB</h3><ul>
<li><code>b [function name] *[address]</code>：設置斷點</li>
<li><code>d [breakpoint num]</code>：刪除斷點</li>
<li><code>c</code>：繼續執行，到下一個斷點處（或運行結束）</li>
<li><code>n</code>：單步跟蹤程序，當遇到函數調用時，也不會進入函數內（針對src）</li>
<li><code>s</code>：單步調試，如果有函數調用，則進入函數（針對src）</li>
<li><code>si</code>：同s（針對asm）</li>
<li><code>ni</code>：同n（針對asm）</li>
<li><code>p /x $r0</code>：以16進制格式打印寄存器r0的值</li>
<li><code>x/s [address]</code>：以字串方式打印出地址所指向的內容</li>
<li><code>layout asm/src</code>：會顯示出當前正在執行的asm&#x2F;src代碼段（這樣就不用看objdump -D啦）</li>
<li><code>layout split</code>：同時顯示當前執行的原始碼和組語</li>
<li><code>layout regs</code>：會以10進制和16進制方式顯示寄存器的值，包含r0-r12、sp、lr、pc、cpsr（這樣就可以不用p了）</li>
<li><code>winheight name +/- count</code>：調整 TUI 窗口大小，例如<code>winheight src -5</code>代表TUI窗口減少5行代碼</li>
<li><code>info stack/variables/files/...</code></li>
<li>REF:<ul>
<li><a href="http://linuxtools-rst.readthedocs.org/zh_CN/latest/tool/gdb.html">http://linuxtools-rst.readthedocs.org/zh_CN/latest/tool/gdb.html</a></li>
<li><a href="https://sourceware.org/gdb/onlinedocs/gdb/TUI-Commands.html">TUI-specific Commands</a></li>
</ul>
</li>
</ul>
<h3 id="CGDB"><a href="#CGDB" class="headerlink" title="CGDB"></a>CGDB</h3><ul>
<li>安裝：<code>sudo apt-get install cgdb</code></li>
<li>官方手冊：<a href="http://cgdb.sourceforge.net/docs/cgdb-no-split.html">CGDB Manual 0.6.6</a>（<strong>请查看手册最新版本</strong>：<a href="https://cgdb.github.io/docs/cgdb.html">CGDB Manual 0.7.1</a>）</li>
<li>相比GDB無需用layout調出TUI，CGDB會自動顯示出來，source window和GDB command window切換方式和VI相同，使用i和Esc。</li>
<li>新增及移除break point方法，直接在source window裏移動到想要新增&#x2F;移除的位置，使用space鍵就可以了。</li>
<li><strong>使用cross compiler方法</strong>：<code>cgdb -d arm-none-eabi-gdb -x &quot;gdb.script&quot;</code></li>
<li>Source window類似VI界面，常見的<code>:</code>設定、<code>/</code>查詢等都可以使用，具體參考<a href="http://cgdb.sourceforge.net/docs/cgdb.html/Configuring-CGDB.html#Configuring-CGDB">CGDB configuration commands</a></li>
<li>使用<code>o</code>可以選擇要顯示的檔案源碼，超潮der</li>
<li><strong>注意</strong>：<ul>
<li>當前代碼行的行數會是粗體，不過不太明顯，用space敲敲看就知道在哪一行了</li>
<li>相比GDB，記得在CGDB裏不要敲<code>layout</code>指令！會產生一堆亂碼死掉@@</li>
</ul>
</li>
</ul>
<h3 id="可視化除錯工具"><a href="#可視化除錯工具" class="headerlink" title="可視化除錯工具"></a>可視化除錯工具</h3><ul>
<li><a href="https://www.gnu.org/software/ddd/">DDD</a></li>
<li><a href="http://manpages.ubuntu.com/manpages/hardy/man1/xxgdb.1.html">XXGDB</a></li>
</ul>
<h2 id="Using-STM32-discovery-kits-with-open-source-tools"><a href="#Using-STM32-discovery-kits-with-open-source-tools" class="headerlink" title="Using STM32 discovery kits with open source tools"></a>Using STM32 discovery kits with open source tools</h2><ul>
<li>原PDF链接已失效，原文请自行Google</li>
<li>Written by STLINK development team</li>
</ul>
<h3 id="Installing-GNU-toolchain"><a href="#Installing-GNU-toolchain" class="headerlink" title="Installing GNU toolchain"></a>Installing GNU toolchain</h3><ul>
<li>请自行 Google</li>
</ul>
<h3 id="Installing-STLINK"><a href="#Installing-STLINK" class="headerlink" title="Installing STLINK"></a>Installing STLINK</h3><ul>
<li>Dependencies<ul>
<li><code>libusb-1.0</code></li>
<li><code>pkg-config</code></li>
<li><code>autotools</code></li>
</ul>
</li>
<li>Install stlink<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/texane/stlink stlink.git</span><br><span class="line">cd stlink.git</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></li>
</ul>
<p>It includes:</p>
<ul>
<li>A communication library (stlink.git&#x2F;libstlink.a).</li>
<li>A GDB server (stlink.git&#x2F;st-util).</li>
<li>A flash manipulation tool (stlink.git&#x2F;st-flash).</li>
</ul>
<h3 id="Using-the-GDB-server"><a href="#Using-the-GDB-server" class="headerlink" title="Using the GDB server"></a>Using the GDB server</h3><ul>
<li>A GDB server must be started to interact with the STM32. Depending on the discovery kit you are using, you must run one of the 2 commands:<ul>
<li><code>st-util --stlinkv1</code>: STM32VL discoverykit (onboard ST−link)</li>
<li><code>st-util</code>: STM32L or STM32F4 discoverykit (onboard ST−link &#x2F;V2)</li>
</ul>
</li>
<li>Then, GDB can be used to interact with the kit:<ul>
<li><code>arm-none-eabi-gdb XXX.elf</code></li>
</ul>
</li>
<li>From GDB, connect to the server using:<ul>
<li><code>(gdb) target extended localhost: 4242</code></li>
<li><code>(gdb) load</code></li>
<li><code>(gdb) continue</code></li>
</ul>
</li>
</ul>
<h3 id="Building-and-flashing-a-program"><a href="#Building-and-flashing-a-program" class="headerlink" title="Building and flashing a program"></a>Building and flashing a program</h3><ul>
<li>If you want to simply flash binary files to arbitrary sections of memory, or read arbitary addresses of memory out to a binary file, use the st-flash tool, as shown below:<ul>
<li><code>st-flash read v1 out.bin 0x8000000 4096</code>: stlink-v1 command to read 4096 from flash into out.bin</li>
<li><code>st-flash read out.bin 0x8000000 4096</code>: stlink-v2 command</li>
<li><code>st-flash write v1 in.bin 0x8000000</code>: stlink-v1 command to write the file in.bin into flash</li>
<li><code>st-flash write in.bin 0x8000000</code>: stlink-v1 command</li>
</ul>
</li>
</ul>
<h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><ul>
<li>Disassembling THUMB code in GDB<br> By default, the disassemble command in GDB operates in ARM mode. The programs running on CORTEX-M3 are compiled in THUMB mode. To correctly disassemble them under GDB, uses an odd address. For instance, if you want to disassemble the code at 0x20000000, use <code>(gdb) disassemble 0x20000001</code></li>
<li>每次都輸入一堆必備的指令很麻煩，可以寫入一個<code>gdb.script</code>檔案裏，例如：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">target remote:4242</span><br><span class="line">file stm32f429-example.elf</span><br><span class="line">layout src</span><br></pre></td></tr></table></figure>
然後使用 <code>arm-none-eabi-gdb -x gdb.script</code> 進入後，單步執行即可。<ul>
<li>記得先打開 <code>st-util</code>；</li>
<li>個人習慣把 <code>arm-none-eabi-gdb -x gdb.script</code> 寫進 <code>Makefile</code> 裏。</li>
</ul>
</li>
</ul>
<h2 id="Defusing-a-binary-bomb"><a href="#Defusing-a-binary-bomb" class="headerlink" title="Defusing a binary bomb"></a>Defusing a binary bomb</h2><h3 id="Lab43-Runtime-Behavior"><a href="#Lab43-Runtime-Behavior" class="headerlink" title="Lab43: Runtime Behavior"></a><a href="http://wiki.csie.ncku.edu.tw/embedded/Lab43">Lab43: Runtime Behavior</a></h3><p>預期目標</p>
<ul>
<li>複習ARM處理器和指令集，並深入stack和執行時期的行為</li>
<li>熟悉objdump、gdb等工具，並利用上述工具分析執行檔</li>
</ul>
<h3 id="Phase-0-Phase-1-Comparison"><a href="#Phase-0-Phase-1-Comparison" class="headerlink" title="Phase 0, Phase 1: Comparison"></a>Phase 0, Phase 1: Comparison</h3><ul>
<li>使用<code>b phase_0</code>設好斷點後，一個<code>c</code>來到<code>phase_0</code>函數，在源程式端輸入<code>help</code>，則可見：<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-1.png"></li>
<li>可以看到程式是用<code>r0</code>和<code>r1</code>作比較，<code>r0</code>是我們輸入的值，<code>r1</code>则是我們要猜的值，這裏已經告訴我們是<code>help</code>了</li>
<li>用 <code>si</code> 執行到 0x87ee ，可以看到<code>r0</code>和<code>r1</code>的值：<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-2.png"></li>
<li><code>x/s $r0</code> <code>x/s $r1</code> 直接可以印出<code>r0</code> <code>r1</code>的地址和指向的值：<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-3.png"></li>
<li>同理，<code>continue</code>到<code>phase_1</code>，印出<code>r1</code><br><img data-src="https://cdn.joouis.com/lab-gdb-intro-4.png"></li>
</ul>
<blockquote>
<p><strong>Psalm 23:4</strong><br>Yea, though I walk through the valley of the shadow of death, I will fear no evil; For You are with me; Your rod and Your staff, they comfort me.</p>
</blockquote>
<h3 id="Phase-2-For-loop"><a href="#Phase-2-For-loop" class="headerlink" title="Phase 2: For loop"></a>Phase 2: For loop</h3><ul>
<li>先隨意輸入，看下寄存器<code>r1</code>的值<code>0x8bc8: &quot;%d %d %d %d&quot;</code>，看起來是要輸入4個整數，重頭再來一次</li>
<li>發現用<code>ni</code>跳過function會讀不到指令，還是用<code>si</code>一步一步來吧<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-5.png"></li>
<li>走到0x885e，如果輸入的數的個數不是4個，就會explode bomb，若是則跳到0x8864</li>
<li>接下來的代碼中：<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-6.png"><ul>
<li>從0x886a到0x887a是一個迴圈，完整的<code>si</code>走了一邊，只是運行完後不能讀到<code>r2</code> <code>r3</code>的值所指向的地址裏的值</li>
<li>類似的代碼爲:<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">a=2;i=0;</span><br><span class="line">do &#123;</span><br><span class="line">  a+=1;</span><br><span class="line">  i++;</span><br><span class="line">&#125; while (i&lt;=9);</span><br></pre></td></tr></table></figure></li>
<li>意外但肯定不是巧合地發現，之前輸入的四個數分別存在<code>r7+12</code> <code>r7+16</code> <code>r7+20</code> <code>r7+24</code>裏（其實是用<code>x/s $r7+n</code>試出來的）</li>
<li>所以輸入的第二個數（上述代碼中的<code>a</code>）在迴圈後會增加10</li>
<li>而函數最後對比的是<code>r7+16</code>和<code>r7+20</code>，需要他們相等，故輸入時第三個數減第二個數要等於10</li>
<li>測試果然過關~<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-7.png"></li>
</ul>
</li>
</ul>
<h3 id="Phase-3-If-condition"><a href="#Phase-3-If-condition" class="headerlink" title="Phase 3: If condition"></a>Phase 3: If condition</h3><ul>
<li>第一步，設置斷點在<code>phase_3</code>後隨意輸入進入斷點，印出<code>r1</code>的值，爲<code>&quot;%d %d %d&quot;</code>，後面也有判斷輸入個數的代碼，和階段2同理：<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-8.png"></li>
<li>接着把斷點設在0x88be，代碼如下：<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-9.png"></li>
<li><code>r3</code>會先取出輸入的第一個數，和40做對比，這裏我輸入的1，因此會繼續往下走</li>
<li>接着把給輸入的第二個數、第三個數的值賦給<code>r2</code> <code>r3</code>，然後<code>r3=r3+r2</code> ，再把<code>r3</code>的值存回<code>[r7,#16]</code></li>
<li>然後把<code>r2</code>的值設爲<code>[r7,#16]</code>，再把<code>r3</code>的值還原回初始的第三個數的值，對比他們相不相等<ul>
<li>即要使得<code>r3=r2+r3</code>，所以在第一個數不爲40的情況下，第二個數和第三個數都只能是0</li>
<li>那如果第一個數等於40，則<code>r2</code> <code>r3</code>相等即可</li>
</ul>
</li>
<li>試驗一下<ul>
<li>當第一個數不爲40時，正確<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-10.png"></li>
<li>當第一個數爲40時，正確<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-11.png"></li>
</ul>
</li>
</ul>
<h3 id="Phase-4-Iteration"><a href="#Phase-4-Iteration" class="headerlink" title="Phase 4: Iteration"></a>Phase 4: Iteration</h3><ul>
<li>與階段2、3同理，得知輸入爲一個整數<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-12.png"></li>
<li>接下來<code>phase_4</code>的函數很短，把輸入的數代入fun4後，return的值要等於1024<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-13.png"></li>
<li><code>fun4</code>的代碼如下：<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-14.png"></li>
<li>當<code>r3</code>不爲0時，會一直減1然後調用自身函數；當<code>r3</code>終於減到0後，會在0x88f2賦值爲1，然後跳到8904，回傳上一層的<code>fun</code>函數。然後<code>r3=r0=1</code>，開始左移</li>
<li>所以相當於輸入的數字n，可以滿足2的n次方爲1024，即是正確答案，真相如下：<br><img data-src="https://cdn.joouis.com/lab-gdb-intro-15.png"></li>
</ul>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>stm32</tag>
        <tag>gdb</tag>
        <tag>cgdb</tag>
        <tag>disassembly</tag>
        <tag>binary</tag>
        <tag>defusing binary bomb</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode小练习</title>
    <url>/2020/lab-leetcode-practices/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2019/watching-notes-revolution-os/">嵌入式笔记</a>第六篇，原文写于2015年。</p>
<p>几乎所有候选人都问过我，进微软是不是要刷题，而我总是不厌其烦地告诉他们，我没刷题就进来了（在阿里疯狂996，享不尽福报，哪里还有时间刷题😅）。</p>
<p>嵌入式课程的LeetCode作业应该是我到目前为止仅有的“刷题”经验。Jserv的本意也不是让学生刷题型，而是通过几道算法题对比递归和迭代结构关于程序的性能差异，此外每题要求写出递归和迭代版本对思维能力的提升也是显而易见的。在此与大家分享:)</p>
<span id="more"></span>



<h2 id="2015q3-Homework-3"><a href="#2015q3-Homework-3" class="headerlink" title="2015q3 Homework #3"></a><a href="http://wiki.csie.ncku.edu.tw/embedded/2015q3h3">2015q3 Homework #3</a></h2><ul>
<li>實做<a href="http://people.debian.org.tw/~jserv/ncku/2015q3.pdf">Week #2 程式題目</a>，解釋其運作原理（至少3題，限定<a href="https://en.wikipedia.org/wiki/C99">C99</a>或以上的規格）</li>
<li>Question #2, #3, #4, #5, #6, #27</li>
<li>在 GitHub 上 fork <a href="https://github.com/embedded2015/quiz">quiz</a>，然後逐一修改每個目錄裡面的檔案<ul>
<li>對於 Question #2, #3, … #6 都需要實做<strong>遞迴</strong>和<strong>非遞迴</strong>的版本</li>
<li>要一併準備測試資料</li>
</ul>
</li>
<li>除了修改程式，也要編輯Hackpad下方「<a href="https://paper.dropbox.com/doc/RrcZhOoThosgCSGRKwFTM">+作業區</a>」，增添開發紀錄和GitHub連結<ul>
<li>額外要求觀賞電影《<a href="https://zh.wikipedia.org/zh-tw/%E7%88%86%E8%A3%82%E9%BC%93%E6%89%8B">進擊的鼓手</a>》，思考這4週以來，課程給你的衝擊（若你沒衝擊的話，可以退選了），在自己的Hackpad紀錄心得，特別是對於追求卓越這件事</li>
</ul>
</li>
<li>應該要有完整的測試程式，並測試各項邊界狀況<ul>
<li>執行時間分析</li>
<li>記憶體需求分析</li>
<li>cache miss分析</li>
<li>時間複雜度分析</li>
</ul>
</li>
<li>善用assert</li>
<li>提供遞迴與非遞迴的版本</li>
<li>截止日期：Oct 17, 2015（含）之前</li>
<li>remember to use:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">astyle --style=kr --indent=spaces=4 --indent-switches --suffix=none *.[ch]</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="關於Drop-Cache"><a href="#關於Drop-Cache" class="headerlink" title="關於Drop Cache"></a>關於Drop Cache</h2><ul>
<li>之前一直都是用<code>echo &quot;echo 1 &gt; /proc/sys/vm/drop_caches&quot; | sudo sh</code>來清理cache</li>
<li>剛才做quiz#4時突然想到好像echo的數字可以有<code>1</code>、<code>2</code>、<code>3</code>，於是乎都試了一下。驚奇地發現用<code>3</code>所耗費的時間比用<code>1</code>耗費的時間要多出25%：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;echo 3 &gt; /proc/sys/vm/drop_caches&quot;</span> | sudo sh</span><br><span class="line">perf <span class="built_in">stat</span> -r 100 -e cache-misses,cache-references,L1-dcache-load-misses,L1-dcache-store-misses,L1-dcache-prefetch-misses,L1-icache-load-misses ./recursive</span><br><span class="line">Performance counter stats <span class="keyword">for</span> <span class="string">&#x27;./recursive&#x27;</span> (100 runs):</span><br><span class="line">    44    cache-misses        <span class="comment">#   0.490 % of all cache refs    ( +-  8.59% )</span></span><br><span class="line">    0.000430226 seconds time elapsed                      ( +- 33.97% )</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;echo 1 &gt; /proc/sys/vm/drop_caches&quot;</span> | sudo sh</span><br><span class="line">perf <span class="built_in">stat</span> -r 100 -e cache-misses,cache-references,L1-dcache-load-misses,L1-dcache-store-misses,L1-dcache-prefetch-misses,L1-icache-load-misses ./recursive</span><br><span class="line">Performance counter stats <span class="keyword">for</span> <span class="string">&#x27;./recursive&#x27;</span> (100 runs):</span><br><span class="line">    39    cache-misses        <span class="comment">#   0.447 % of all cache refs    ( +-  9.38% )</span></span><br><span class="line">    0.000327662 seconds time elapsed                      ( +-  3.46% )</span><br></pre></td></tr></table></figure></li>
<li>於是查了一下：<ul>
<li><code>echo 1 &gt; /proc/sys/vm/drop_caches</code>：To free pagecache</li>
<li><code>echo 2 &gt; /proc/sys/vm/drop_caches</code>：To free dentries and inodes</li>
<li><code>echo 3 &gt; /proc/sys/vm/drop_caches</code>：To free pagecache, dentries and inodes</li>
<li>關於上述三個名詞的<a href="http://stackoverflow.com/questions/29870068/what-are-pagecache-dentries-inodes">解釋</a></li>
</ul>
</li>
<li>所以用3多清除了dentries和inodes，相比1多花費的時間，就是讀當前目錄找到該執行檔所花的時間</li>
</ul>
<h2 id="2"><a href="#2" class="headerlink" title="#2"></a>#2</h2><p><strong>Question：</strong></p>
<p>Given a sorted character array and a character, return the smallest character that is strictly larger than the search character. If no such character exists, return the smallest character in the array. For example:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Input: [&#x27;c&#x27;, &#x27;f&#x27;, &#x27;j&#x27;, &#x27;p&#x27;, &#x27;v&#x27;], &#x27;a&#x27;   </span><br><span class="line">Output: &#x27;c&#x27;   </span><br><span class="line"> </span><br><span class="line">Input: [&#x27;c&#x27;, &#x27;f&#x27;, &#x27;j&#x27;, &#x27;p&#x27;, &#x27;v&#x27;], &#x27;c&#x27;   </span><br><span class="line">Output: &#x27;f&#x27;   </span><br><span class="line"> </span><br><span class="line">Input: [&#x27;c&#x27;, &#x27;f&#x27;, &#x27;j&#x27;, &#x27;p&#x27;, &#x27;v&#x27;], &#x27;z&#x27;   </span><br><span class="line">Output: &#x27;c&#x27;   </span><br><span class="line"> </span><br><span class="line">Input: [&#x27;c&#x27;, &#x27;c&#x27;, &#x27;k&#x27;], &#x27;f&#x27;   </span><br><span class="line">Output: &#x27;k&#x27; </span><br></pre></td></tr></table></figure>

<p>請寫出合法的 C 語言程式 char smallest_character(char str[], char c) { … }</p>
<h3 id="Recursive"><a href="#Recursive" class="headerlink" title="Recursive"></a>Recursive</h3><ul>
<li>因為需要將array里的元素由小到大順序和作比較特定字符：<ul>
<li>單純的size沒有狀態</li>
<li>size-1可從array中較大的元素遍歷到較小的，但不是從小到大</li>
<li>設一個local tmp[size-1]每次從array取[1..size-1]，然後向下傳，但這樣會丟失了原始array的數據，若array里沒有元素大於比較的字符，則無法取得array[0]</li>
</ul>
</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line">uchar <span class="title function_">smallest_char</span><span class="params">(uchar str[], uchar c, uchar size, uchar count)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">1</span> == size || <span class="number">0</span> == count) &#123;</span><br><span class="line">    <span class="keyword">return</span> str[<span class="number">0</span>];</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> ( str[size - count] &gt; c ) &#123;</span><br><span class="line">    <span class="keyword">return</span> str[size - count];</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    count--;</span><br><span class="line">    <span class="keyword">return</span> smallest_char(str, c, size, count);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Iterative"><a href="#Iterative" class="headerlink" title="Iterative"></a>Iterative</h3><ul>
<li>對array進行遍歷，如果比字符大就返回，如果沒有就返回array[0]</li>
<li>smallest_char()函式里多加一個參數size，因為array傳給子函式傳的是pointer而不是完整的array，<a href="http://stackoverflow.com/questions/9413046/how-to-get-the-length-of-array-in-c-is-sizeof-is-one-of-the-solution">參考</a></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line">uchar <span class="title function_">smallest_char</span><span class="params">(uchar str[], uchar c, uchar size)</span></span><br><span class="line">&#123;</span><br><span class="line">  uchar i;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; size; i++ ) &#123;</span><br><span class="line">    <span class="keyword">if</span> ( str[i] &gt; c ) &#123;</span><br><span class="line">    <span class="keyword">return</span> str[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> str[<span class="number">0</span>];</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<h3 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h3><ul>
<li>想使用perf kmem觀察slab行為時發生錯誤：<code>invalid or unsupported event: &#39;kmem:kmalloc&#39;</code></li>
<li>使用perf測量cache misses和time elapsed:<br><code>echo &quot;echo 1 &gt; /proc/sys/vm/drop_caches&quot; | sudo sh</code><br><code>perf stat -r 100 -e cache-misses,cache-references,L1-dcache-load-misses,L1-dcache-store-misses,L1-dcache-prefetch-misses,L1-icache-load-misses ./iterative</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Performance counter stats for &#x27;./iterative&#x27; (100 runs):</span><br><span class="line">  66    cache-misses        #   0.753 % of all cache refs    ( +-  9.27% )</span><br><span class="line">  8810    cache-references                        ( +-  0.62% )</span><br><span class="line">  9600    L1-dcache-load-misses                     ( +-  0.19% )</span><br><span class="line">  4203    L1-dcache-store-misses                     ( +-  0.23% )</span><br><span class="line">  0    L1-dcache-prefetch-misses</span><br><span class="line">  3714    L1-icache-load-misses                     ( +-  0.77% )</span><br><span class="line">  0.000354619 seconds time elapsed                      ( +-  3.88% )</span><br><span class="line"></span><br><span class="line">Performance counter stats for &#x27;./recursive&#x27; (100 runs):</span><br><span class="line">  66    cache-misses        #   0.768 % of all cache refs    ( +-  8.41% )</span><br><span class="line">  8627    cache-references                        ( +-  0.63% )</span><br><span class="line">  9597    L1-dcache-load-misses                     ( +-  0.24% )</span><br><span class="line">  4227    L1-dcache-store-misses                     ( +-  0.23% )</span><br><span class="line">  0    L1-dcache-prefetch-misses</span><br><span class="line">  3573    L1-icache-load-misses                     ( +-  0.76% )</span><br><span class="line">  0.000402208 seconds time elapsed                      ( +- 32.71% )</span><br></pre></td></tr></table></figure></li>
</ul>
<table>
<thead>
<tr>
<th>Quiz#2</th>
<th>recursive</th>
<th>iterative</th>
</tr>
</thead>
<tbody><tr>
<td>執行時間</td>
<td>0.000402208</td>
<td>0.000354619</td>
</tr>
<tr>
<td>cache-misses</td>
<td>66</td>
<td>66</td>
</tr>
<tr>
<td>時間複雜度</td>
<td>O(n)</td>
<td>O(n)</td>
</tr>
</tbody></table>
<h2 id="3"><a href="#3" class="headerlink" title="#3"></a>#3</h2><h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h3><p><img data-src="https://cdn.joouis.com/lab-leetcode-practices-1.png"></p>
<h3 id="Recursive-1"><a href="#Recursive-1" class="headerlink" title="Recursive"></a>Recursive</h3><ul>
<li>先對右結點處理，再對左結點處理<ul>
<li>對於右結點，把他們push進stack</li>
<li>對於左結點把他變成父節點的右結點，然後如果stack里有結點則pop出來接上</li>
</ul>
</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Node *<span class="title function_">flatten</span><span class="params">(Node *node, <span class="built_in">stack</span> *S)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> ( !node ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  node-&gt;right = flatten(node-&gt;right, S);</span><br><span class="line">  <span class="keyword">if</span> ( node-&gt;right  ) &#123;</span><br><span class="line">    stack_push(S, (<span class="type">int</span>)node-&gt;right);</span><br><span class="line">    node-&gt;right = <span class="literal">NULL</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  node-&gt;left = flatten(node-&gt;left, S);</span><br><span class="line">  <span class="keyword">if</span> ( node-&gt;left  ) &#123;</span><br><span class="line">    node-&gt;right = node-&gt;left;</span><br><span class="line">    node-&gt;left = <span class="literal">NULL</span>;</span><br><span class="line">    Node *tmp = (Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">    tmp = node;</span><br><span class="line">    <span class="keyword">while</span>(S-&gt;size) &#123;</span><br><span class="line">      node = node-&gt;right;</span><br><span class="line">      node-&gt;right = (Node *)stack_pop(S);</span><br><span class="line">      <span class="keyword">if</span> ( !S-&gt;size  ) &#123;</span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Iterative-1"><a href="#Iterative-1" class="headerlink" title="Iterative"></a>Iterative</h3><ul>
<li>自上而下的，把右結點push到stack，然後把左結點變為右結點，然後移動到該結點；直到右結點也沒有時，把stack的結點依次pop出來接上</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">flatten</span><span class="params">(Node *node)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">stack</span> *S = (<span class="built_in">stack</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="built_in">stack</span>));</span><br><span class="line">  stack_init(S);</span><br><span class="line">  <span class="keyword">while</span> ( node || S-&gt;size ) &#123;</span><br><span class="line">    <span class="keyword">if</span> ( node-&gt;right ) &#123;</span><br><span class="line">      stack_push(S, (<span class="type">int</span>)node-&gt;right);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( node-&gt;left ) &#123;</span><br><span class="line">      node-&gt;right = node-&gt;left;</span><br><span class="line">      node-&gt;left = <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ( S-&gt;size ) &#123;</span><br><span class="line">      node-&gt;right = (Node *)stack_pop(S);</span><br><span class="line">    &#125;</span><br><span class="line">    node = node-&gt;right;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<h3 id="Performance-1"><a href="#Performance-1" class="headerlink" title="Performance"></a>Performance</h3><ul>
<li><code>echo &quot;echo 1 &gt; /proc/sys/vm/drop_caches&quot; | sudo sh </code></li>
<li><code>perf stat -r 100 -e cache-misses,cache-references,L1-dcache-load-misses,L1-dcache-store-misses,L1-dcache-prefetch-misses,L1-icache-load-misses ./iterative</code>：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Performance counter stats <span class="keyword">for</span> <span class="string">&#x27;./iterative&#x27;</span> (100 runs):</span><br><span class="line">       65    cache-misses        <span class="comment">#   0.672 % of all cache refs    ( +- 11.50% )</span></span><br><span class="line">      9735    cache-references                        ( +-  0.53% )</span><br><span class="line">      11348    L1-dcache-load-misses                     ( +-  0.17% )</span><br><span class="line">      4601    L1-dcache-store-misses                     ( +-  0.21% )</span><br><span class="line">        0    L1-dcache-prefetch-misses</span><br><span class="line">      4014    L1-icache-load-misses                     ( +-  0.63% )</span><br><span class="line"></span><br><span class="line">   0.000489711 seconds time elapsed                      ( +- 37.21% )</span><br><span class="line"> </span><br><span class="line">Performance counter stats <span class="keyword">for</span> <span class="string">&#x27;./recursive&#x27;</span> (100 runs):</span><br><span class="line">       65    cache-misses        <span class="comment">#   0.672 % of all cache refs    ( +- 10.02% )</span></span><br><span class="line">      9637    cache-references                        ( +-  0.54% )</span><br><span class="line">      11429    L1-dcache-load-misses                     ( +-  0.18% )</span><br><span class="line">      4610    L1-dcache-store-misses                     ( +-  0.21% )</span><br><span class="line">        0    L1-dcache-prefetch-misses</span><br><span class="line">      3973    L1-icache-load-misses                     ( +-  0.60% )</span><br><span class="line"></span><br><span class="line">   0.000320526 seconds time elapsed                      ( +-  1.22% )</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Quiz#3</th>
<th>recursive</th>
<th>iterative</th>
</tr>
</thead>
<tbody><tr>
<td>執行時間</td>
<td>0.000320526</td>
<td>0.000489711</td>
</tr>
<tr>
<td>cache-misses</td>
<td>65</td>
<td>65</td>
</tr>
<tr>
<td>時間複雜度</td>
<td>O(n)</td>
<td>O(n)</td>
</tr>
</tbody></table>
<h2 id="4"><a href="#4" class="headerlink" title="#4"></a>#4</h2><h3 id="Question-1"><a href="#Question-1" class="headerlink" title="Question"></a>Question</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Find the contiguous subarray within an array (containing at least one number) which has the largest sum.</span><br><span class="line">For example, given the array [-2, 1, -3, 4, -1, 2, 1, -5, 4], the contiguous subarray [4, -1, 2, 1] has the largest sum 6.</span><br><span class="line">請寫出合法的 C 程式 : int maxSubArray(int A[], int n) &#123; … &#125; </span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<h3 id="Recursive-2"><a href="#Recursive-2" class="headerlink" title="Recursive"></a>Recursive</h3><ul>
<li>採用Divide&amp;Conquer方法，把完整陣列分成兩半，最大值的區間分為以下三種情形：<ul>
<li>最大值陣列在完整陣列的左半部分：<ul>
<li>解法：直接遞歸然後</li>
</ul>
</li>
<li>最大值陣列在完整陣列的右半部分<ul>
<li>解法：直接遞歸然後</li>
</ul>
</li>
<li>最大值陣列穿過中點左右陣列都有<ul>
<li>解法：以陣列中心點為初始，向左右延伸求和後遞歸</li>
</ul>
</li>
</ul>
</li>
<li>然後將這三種情形的值做比較即可</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Across_mid</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> left, <span class="type">int</span> mid, <span class="type">int</span> right)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> sum = <span class="number">0</span>,</span><br><span class="line">    lsum = a[mid], i;</span><br><span class="line">  <span class="keyword">for</span> ( i = mid; i &gt;= left; i-- ) &#123;</span><br><span class="line">    sum += a[i];</span><br><span class="line">    lsum = sum&gt;lsum?sum:lsum;</span><br><span class="line">  &#125;</span><br><span class="line">  sum = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> rsum = a[mid];</span><br><span class="line">  <span class="keyword">for</span> ( i = mid+<span class="number">1</span>; i &lt;=right; i++ ) &#123;</span><br><span class="line">    sum += a[i];</span><br><span class="line">    rsum = sum&gt;rsum?sum:rsum;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> lsum+rsum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">maxArray</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> left, <span class="type">int</span> right)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(left == right) &#123;</span><br><span class="line">    <span class="keyword">return</span> a[left];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> mid = (left + right)/<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">return</span> max3(</span><br><span class="line">        maxArray(a, left, mid),</span><br><span class="line">        maxArray(a, mid+<span class="number">1</span>, right),</span><br><span class="line">        Across_mid(a, left, mid, right)</span><br><span class="line">      );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">maxSubArray</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> maxArray(a, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Iterative-2"><a href="#Iterative-2" class="headerlink" title="Iterative"></a>Iterative</h3><ul>
<li>從頭開始累加陣列中元素的和，如果之前的和是負數則拋棄之前的和從該元素開始重頭加，記錄下和最大的那個值便是答案</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">maxSubArray</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> size)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> max = a[<span class="number">0</span>], sum = a[<span class="number">0</span>], i;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt; size; i++ ) &#123;</span><br><span class="line">    sum = sum + a[i] &gt; a[i] ? sum + a[i]: a[i];</span><br><span class="line">    max = max &gt; sum ? max : sum;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Performance-2"><a href="#Performance-2" class="headerlink" title="Performance"></a>Performance</h3><ul>
<li><code>echo &quot;echo 3 &gt; /proc/sys/vm/drop_caches&quot; | sudo sh </code></li>
<li><code>perf stat -r 100 -e cache-misses,cache-references,L1-dcache-load-misses,L1-dcache-store-misses,L1-dcache-prefetch-misses,L1-icache-load-misses ./iterative</code>：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Performance counter stats <span class="keyword">for</span> <span class="string">&#x27;./iterative&#x27;</span> (100 runs):</span><br><span class="line">       43    cache-misses        <span class="comment">#   0.487 % of all cache refs    ( +- 10.54% )</span></span><br><span class="line">      8817    cache-references                        ( +-  0.63% )</span><br><span class="line">      9657    L1-dcache-load-misses                     ( +-  0.21% )</span><br><span class="line">      4250    L1-dcache-store-misses                     ( +-  0.22% )</span><br><span class="line">        0    L1-dcache-prefetch-misses</span><br><span class="line">      3736    L1-icache-load-misses                     ( +-  0.75% )</span><br><span class="line">   0.000440431 seconds time elapsed                      ( +- 35.40% )</span><br><span class="line"> </span><br><span class="line">Performance counter stats <span class="keyword">for</span> <span class="string">&#x27;./recursive&#x27;</span> (100 runs):</span><br><span class="line">       40    cache-misses        <span class="comment">#   0.457 % of all cache refs    ( +-  8.53% )</span></span><br><span class="line">      8819    cache-references                        ( +-  0.76% )</span><br><span class="line">      9586    L1-dcache-load-misses                     ( +-  0.24% )</span><br><span class="line">      4224    L1-dcache-store-misses                     ( +-  0.26% )</span><br><span class="line">        0    L1-dcache-prefetch-misses</span><br><span class="line">      3674    L1-icache-load-misses                     ( +-  0.85% )</span><br><span class="line">   0.000423999 seconds time elapsed                      ( +- 34.31% )</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Quiz#4</th>
<th>recursive</th>
<th>iterative</th>
</tr>
</thead>
<tbody><tr>
<td>執行時間</td>
<td>0.000423999</td>
<td>0.000440431</td>
</tr>
<tr>
<td>cache-misses</td>
<td>40</td>
<td>43</td>
</tr>
<tr>
<td>時間複雜度</td>
<td>O(nlogn)</td>
<td>O(n)</td>
</tr>
</tbody></table>
<h2 id="觀看《進擊的鼓手》"><a href="#觀看《進擊的鼓手》" class="headerlink" title="觀看《進擊的鼓手》"></a>觀看《進擊的鼓手》</h2><p>剛看完《進擊的鼓手》，首先，我愛Jazz。</p>
<p>其次，這部影片討論的是超於自我的主題，很壓抑，但這不是音樂的本質，音樂是帶給人快樂、抒發情感的語言，所以聽首經典的《<a href="https://www.youtube.com/watch?v=NXKYTJHnqvw">All of me</a>》換一下心情~</p>
<p>電影可以討論的真的太多，所以還是切回到Embedded2015這門課吧。</p>
<p>上學期第一次上課時受到極大的衝擊，從知識本身的深度到思考問題的方式，發現自己學的太淺、想的太淺；接著暑期去台北實習，真正面對一堆資深工程師時，發現自己與他們的差距，也是令自己驚訝不已。</p>
<p>回歸到這學期的課程，單純從心態和認知上已經得到改變，其實對上課是一件很期待的事情。無論是學習使用GProf、Perf等工具量化效能（一直以來都是聽定性的東西太多了）還是今天看到一個compiler是如何做的，這都讓人興奮。我喜歡從無到有的這個創造的過程，並且在知道自己和資工背景（無論好壞至少背景課程的基本概念他們都考試學&#x2F;背過）的同學的差距時，學到這樣的東西會有大補的快感。</p>
<p>綜上，這半年多來，接受了很多衝擊，但和電影不同，我沒那麼玻璃心，老師也沒那麼苛刻，我們一直認可超越自己、有進步就是賺。電影里的男主角後面追求的東西似乎變了質，不是音樂帶來的快樂本身，而是親情被孤立更想得到親人們的關注而想成功。在我看來，來學嵌入式純粹是對電腦科學的這個領域的喜愛，從大學到現在，動力也是來源於此，不然我就去中國石油行業值班爽爽過公務員的生活了。</p>
<p>最後，關於追求卓越，我覺得是超越自我的某個較遠的階段，當我能更好地管理自己的時間、處理自己的各種情緒時，效率會越來越高，到那個比較ready的時候，應該就是會追求卓越了吧！</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li>官網<a href="https://leetcode.com/problemset/algorithms/">Leetcode Algorithms of Problemset</a>，簡短的<a href="http://coolshell.cn/articles/12052.html">介紹</a></li>
<li>經典《<a href="https://github.com/esbanarango/Competitive-Programming/blob/master/%C2%B7Documentation/Books/Introduction.to.Algorithms.3rd.Edition.Sep.2010.pdf">Introduction to algorithms</a>》</li>
<li>一個簡中的題解《<a href="https://www.gitbook.com/book/siddontang/leetcode-solution/details">LeetCode题解</a>》</li>
<li>《<a href="http://www.cs.uofs.edu/~mccloske/courses/cmps144/recursion_feb13_01.html">Recursive solutions to array problems: Three examples</a>》</li>
<li>《<a href="http://groups.csail.mit.edu/graphics/classes/6.837/F04/cpp_notes/stack1.html">Stack Implementation in C</a>》</li>
</ul>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system course</tag>
        <tag>performance</tag>
        <tag>leetcode</tag>
        <tag>cache</tag>
        <tag>recursion</tag>
        <tag>iteration</tag>
      </tags>
  </entry>
  <entry>
    <title>上手一个具体而微的ARM操作系统</title>
    <url>/2019/lab-mini-arm-os/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2019/watching-notes-revolution-os/">嵌入式笔记</a>第四篇，原文写于2015年。</p>
<p>印象中国内的嵌入式开发还是（可能是盗版的）IDE加载项目工程后一键编译&#x2F;烧录的模式，开发人员对底层吃的不够透，离开IDE或者换个开发环境犹如深度近视患者离开了眼镜——寸步难行。再说远一点，似乎不少人的学习路径都是通过看中文教材和一些培训班视频（我当年也看过郭天祥和韦东山的视频😂），缺乏“一手”知识的摄取和体系化的训练。</p>
<p>这个实验除了可以深入了解操作系统的底层行为如上下文切换外，还有一个难点就是要在Linux环境下使用GNU Toolchain编译链接系统，最终烧录到ARM硬件上，非常非常的“硬核”。</p>
<span id="more"></span>



<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>我们使用的硬件是意法半导体出的STM32F4 Discovery开发板，在开始实验之前，了解MCU、电路布局以及如何在STM32 MCU上开发都是必不可缺的步骤，主要就是阅读大量资料。</p>
<ul>
<li><a href="https://docs.google.com/document/d/1Ygl6cEGPXUffhTJE0K6B8zEtGmIuIdCjlZBkFlijUaE/edit">STM32 程式開發：以 GNU Toolchain 為例</a></li>
<li>ld: <a href="http://www.math.utah.edu/docs/info/ld_toc.html#SEC1">Using ld, The GNU linker</a>, <a href="http://wen00072-blog.logdown.com/posts/246071-study-on-the-linker-script-3">GNU LD 手冊略讀 (3): Chapter 3.7 ~ Chapter 3.11</a></li>
<li>STM32: Reference Manual, Datasheet, Schematics（自行查阅官网最新版本）</li>
<li>Course: <a href="http://wiki.csie.ncku.edu.tw/embedded/Lab42">Lab42: Mini ARM OS</a></li>
</ul>
<h2 id="Mini-ARM-OS"><a href="#Mini-ARM-OS" class="headerlink" title="Mini ARM OS"></a><a href="https://github.com/jserv/mini-arm-os">Mini ARM OS</a></h2><p>GitHub仓库点击标题即可访问，没想到已经有530颗星星了（12&#x2F;29&#x2F;2019）！以下笔记对应四年前的版本，少了第7和第8课，代码可能也有所改动，勿怪。</p>
<h3 id="00-HelloWorld"><a href="#00-HelloWorld" class="headerlink" title="00-HelloWorld"></a>00-HelloWorld</h3><ul>
<li>先<code>make</code>然後<code>make qemu</code>後出現hello world，然後輸入<code>arm-none-eabi-objdump -D hello.elf</code>查看ELF文件(Executable and Linkable File)<br><img data-src="https://cdn.joouis.com/lab-mini-arm-os-1.png"><br><img data-src="https://cdn.joouis.com/lab-mini-arm-os-2.png"></li>
<li>這裏值得注意的是，在M3上電取出MSP後，會取出PC的值，圖中可見是0x000000ad。但實際上reset_handler地址是從000000ac開始的。這是因爲：<br>當一個例外處理程式(exception handler)的位址在LSB設定為1，代表該例外處理程式運作於Thumb模式(Thumb mode)，對ARM Cortex-M3來說，這是必要的，因為該處理器核心只支援Thumb-2指令集，而不支援ARM模式(也稱ARM code或ARM state)。<br>所以<a href="http://wiki.csie.ncku.edu.tw/embedded/Lab42">http://wiki.csie.ncku.edu.tw/embedded/Lab42</a> 的截圖裏，reset_handler是從0x000000ad是實際編譯器在不同機器下編譯出來的不同？</li>
<li>搭配hello.ld和startup.c一起看終於有種恍然大悟的感覺。.text section最前面的位置就是isr_vector，然後再是其他.text文件。當m3從Flash開始讀入數據時，首先就是isr_vector的內容，而isr_vector中首先給MSP地址賦0，然後是reset_handler，而reset_handler指向Main函數，這樣就導入我們寫的主函數了</li>
</ul>
<h3 id="01-HelloWorld"><a href="#01-HelloWorld" class="headerlink" title="01-HelloWorld"></a>01-HelloWorld</h3><ul>
<li>此實驗和00相比在ld上作了更多文章。00-HelloWorld的ld文件僅配置了Flash和.text section，而01中則多配置了RAM，將運行時不會更改的.text、.rodata、放入.text section中，.data放入.data section中</li>
<li>AT的_sidata表示了.data載入RAM後的LMA。因爲data section會從flash搬移到SRAM中，因此它的LMA和VMA會不同。連結器腳本的一個重要作用，就是管理個別section的LMA和VMA，並在必要的情況下，把有關資訊提供給程式程式碼使用。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Copy the data segment initializers from flash to SRAM */</span></span><br><span class="line"><span class="type">uint32_t</span> *idata_begin = &amp;_sidata;</span><br><span class="line"><span class="type">uint32_t</span> *data_begin = &amp;_sdata;</span><br><span class="line"><span class="type">uint32_t</span> *data_end = &amp;_edata;</span><br><span class="line"><span class="keyword">while</span> (data_begin &lt; data_end) *data_begin++ = *idata_begin++;</span><br></pre></td></tr></table></figure>


<h3 id="02-ContextSwitch-1"><a href="#02-ContextSwitch-1" class="headerlink" title="02-ContextSwitch-1"></a>02-ContextSwitch-1</h3><ul>
<li>在startup.c中定義了nmi_handler和hardfault_handler，地址在reset_handler之後，什麼時候會觸發他們呢？</li>
<li>msp的值爲_estack&#x3D;RAM的初始位置加上RAM的寬度，即0x20000000+40k，這樣意味這stack的爲40K大小，這個大小的stack感覺足夠寬裕！</li>
<li>接着看os.c裏的main函數<ul>
<li>cortex-m系列處理器<a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0552a/CHDBIBGJ.html">core registers</a></li>
<li>首先定義額usertask的堆棧大小256*4byte&#x3D;1k，然後定義一個指針*usertask_stack_start指向usertask堆棧加256-16的距離，而usertask的地址從usertask_stack_start棧底-8才開始，這中間多出了24byte。我想這應該是call stack的概念，爲了後門調用usertask函數的argument、return address、saved ebp%等留下空間(24byte應該是6個空格)<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* Initialization of process stack.</span></span><br><span class="line"><span class="comment">    * r4, r5, r6, r7, r8, r9, r10, r11, lr</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> usertask_stack[<span class="number">256</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> *usertask_stack_start = usertask_stack + <span class="number">256</span> - <span class="number">16</span>;</span><br><span class="line">    usertask_stack_start[<span class="number">8</span>] = (<span class="type">unsigned</span> <span class="type">int</span>) &amp;usertask;</span><br><span class="line"></span><br><span class="line">    usart_init();</span><br><span class="line"></span><br><span class="line">    print_str(<span class="string">&quot;OS Starting...\n&quot;</span>);</span><br><span class="line">    activate(usertask_stack_start);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// while (1); /* We can&#x27;t exit, there is nowhere to go */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>contex_swtich.s中.syntax unified：Cortex-m3爲了兼容thumb指令和thumb2指令，使這兩種指令可以使用統一的格式，引入了一種叫做“UAL”的語法機制。簡單說來就是程序員不用關心自己使用的是thumb還是thumb2指令，而是統一使用32位thumb2指令的語法格式書寫。具體的機器指令是16位還是32位由編譯器來決定。.syntax unified的作用就是制定使用這一功能，具體可以參考《cortex-m3權威指南》。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* save kernel state */</span><br><span class="line">mrs ip, psr</span><br><span class="line">push &#123;r4, r5, r6, r7, r8, r9, r10, r11, ip, lr&#125;</span><br><span class="line">/* switch to process stack */</span><br><span class="line">msr psp, r0</span><br><span class="line">mov r0, #3</span><br><span class="line">msr control, r0</span><br><span class="line">/* load user state */</span><br><span class="line">pop &#123;r4, r5, r6, r7, r8, r9, r10, r11, lr&#125;</span><br><span class="line">/* jump to user task */</span><br><span class="line">bx lr</span><br></pre></td></tr></table></figure></li>
<li>接着這段代碼：<ul>
<li>MRS：Move to ARM register from system coprocessor register. MRS <em>Rn</em>, <em>coproc_register</em>中Rn is the ARM destination register, and R<em>n</em> must not be PC. System coprocessor register應該是那些special registers，其中包含psr(Program status register)。MSR反之。</li>
<li>將main函數(kernel)的狀態存入堆棧後，將r0數據存入程序狀態寄存器(此時r0應該存放了usertask_stack_start地址)，然後設定<a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0552a/CHDBIBGJ.html">control寄存器</a>爲0b11。所以現在stack pointer是PSP，而PSP中存放的是usertask_stack_start地址，至於Thread mode是Unprivileged。<br><img data-src="https://cdn.joouis.com/lab-mini-arm-os-3.png"></li>
<li>最後把usertask_stack中的寄存器值拿出來，就可以跳轉到user state了</li>
<li>此处补充两篇 ARM 官方文档：<a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dai0179b/ar01s02s06.html">2.6. Execution Modes</a>, <a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0552a/CHDIGFCA.html">2.1.1. Processor mode and privilege levels for software execution</a></li>
</ul>
</li>
</ul>
<h3 id="03-ContextSwitch-2"><a href="#03-ContextSwitch-2" class="headerlink" title="03-ContextSwitch-2"></a>03-ContextSwitch-2</h3><ul>
<li>startup.c中多了一些聲明：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">nmi_handler</span><span class="params">(<span class="type">void</span>)</span> __<span class="title function_">attribute</span><span class="params">((weak, alias(<span class="string">&quot;default_handler&quot;</span>)))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">hardfault_handler</span><span class="params">(<span class="type">void</span>)</span> __<span class="title function_">attribute</span><span class="params">((weak, alias(<span class="string">&quot;default_handler&quot;</span>)))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">memmanage_handler</span><span class="params">(<span class="type">void</span>)</span> __<span class="title function_">attribute</span><span class="params">((weak, alias(<span class="string">&quot;default_handler&quot;</span>)))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">busfault_handler</span><span class="params">(<span class="type">void</span>)</span> __<span class="title function_">attribute</span><span class="params">((weak, alias(<span class="string">&quot;default_handler&quot;</span>)))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">usagefault_handler</span><span class="params">(<span class="type">void</span>)</span> __<span class="title function_">attribute</span><span class="params">((weak, alias(<span class="string">&quot;default_handler&quot;</span>)))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">svc_handler</span><span class="params">(<span class="type">void</span>)</span> __<span class="title function_">attribute</span><span class="params">((weak, alias(<span class="string">&quot;default_handler&quot;</span>)))</span>;</span><br></pre></td></tr></table></figure></li>
<li>alias (“target”): The alias attribute causes the declaration to be emitted as an alias for another symbol, which must be specified.</li>
<li>所以<code>*_handler</code>全部alias到了default_handler上，而default_handler目前爲一個死循環：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">default_handler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>syscall的定義，關於<code>svc 0</code>這個<a href="https://reverseengineering.stackexchange.com/questions/4217/arm-shellcode-for-linux-svc-0-vs-svc-1">回答</a>很好<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">syscall:</span><br><span class="line">    svc 0</span><br><span class="line">    nop</span><br><span class="line">    bx lr</span><br></pre></td></tr></table></figure></li>
<li>在context_switch.S中定義了svc_handler函數，聯想到startup.c中的weak alias，可以理解weak alias的意思就是編譯器假如在文件中找到了某個函數的定義就會編譯，假如沒有找到就會將其alias到指定的weak alias函數。<ul>
<li>關於<a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0552a/BABCAEDD.html">stmdb</a>，stm代表存儲更多寄存器，db代表在獲取前將地址減小。所以就是r0地址會增加9*4bytes，然後將{}中的9個寄存器從左至右從最低位置開始存放<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">svc_handler:</span><br><span class="line">  /* save user state */</span><br><span class="line">    mrs r0, psp</span><br><span class="line">    stmdb r0!, &#123;r4, r5, r6, r7, r8, r9, r10, r11, lr&#125;</span><br><span class="line"></span><br><span class="line">    /* load kernel state */</span><br><span class="line">    pop &#123;r4, r5, r6, r7, r8, r9, r10, r11, ip, lr&#125;</span><br><span class="line">    msr psr, ip</span><br><span class="line"></span><br><span class="line">    bx lr</span><br></pre></td></tr></table></figure>
<img data-src="https://cdn.joouis.com/lab-mini-arm-os-4.png"></li>
</ul>
</li>
<li>程序run可見當usertask觸發syscall後會保存其狀態，然後切回main函數輸出兩個print_str，然後回到usertask後會繼續接着上一次的執行到的地方繼續執行，再輸出兩句話，然後回到main函數，也是接着上次執行後的地方繼續執行。這驗證了之前代碼裏關於user state和kernel state的save和load動作。</li>
</ul>
<h3 id="04-Multitasking"><a href="#04-Multitasking" class="headerlink" title="04-Multitasking"></a>04-Multitasking</h3><p><img data-src="https://cdn.joouis.com/lab-mini-arm-os-5.png"></p>
<ul>
<li>diff context_switch.S ..&#x2F;03-ContextSwitch-2&#x2F;context_switch.S ，發現：<ul>
<li>svc_handler中的msr psr, ip變成了msr psr_nzcvq, ip，<a href="http://infocenter.arm.com/help/topic/com.arm.doc.qrc0001mc/QRC0001_UAL.pdf">nzcv</a>爲psr的四個標誌位</li>
</ul>
</li>
<li>另外在activate中，在切換到process stask後多一條isb指令：<br>Instruction Synchronization Barrier flushes the pipeline in the processor, so that all instructions following the ISB are fetched from cache or memory, after the instruction has been completed. It ensures that the effects of context altering operations, such as changing the ASID, or completed TLB maintenance operations, or branch predictor maintenance operations, as well as all changes to the CP15 registers, executed before the ISB instruction are visible to the instructions fetched after the ISB.<br>In addition, the ISB instruction ensures that any branches that appear in program order after it are always written into the branch prediction logic with the context that is visible after the ISB instruction. This is required to ensure correct execution of the instruction stream.</li>
<li>重頭戲在os.c，首先宏定義了三個地址：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> HANDLER_MSP 0xFFFFFFF1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> THREAD_MSP  0xFFFFFFF9</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> THREAD_PSP  0xFFFFFFFD</span></span><br></pre></td></tr></table></figure>
<img data-src="https://cdn.joouis.com/lab-mini-arm-os-6.png"></li>
<li>接着新建一個task：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> *<span class="title function_">create_task</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> *<span class="built_in">stack</span>, <span class="type">void</span> (*start)(<span class="type">void</span>))</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="type">static</span> <span class="type">int</span> first = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">stack</span> += STACK_SIZE - <span class="number">32</span>; <span class="comment">/* End of stack, minus what we are about to push */</span></span><br><span class="line">        <span class="keyword">if</span> (first) &#123;</span><br><span class="line">                <span class="built_in">stack</span>[<span class="number">8</span>] = (<span class="type">unsigned</span> <span class="type">int</span>) start;</span><br><span class="line">                first = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">stack</span>[<span class="number">8</span>] = (<span class="type">unsigned</span> <span class="type">int</span>) THREAD_PSP;</span><br><span class="line">                <span class="built_in">stack</span>[<span class="number">15</span>] = (<span class="type">unsigned</span> <span class="type">int</span>) start;</span><br><span class="line">                <span class="built_in">stack</span>[<span class="number">16</span>] = (<span class="type">unsigned</span> <span class="type">int</span>) <span class="number">0x01000000</span>; <span class="comment">/* PSR Thumb bit */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">stack</span> = activate(<span class="built_in">stack</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">stack</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
而在main函數中，對應的調用是：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定義了程式stack的數量(2個)和大小(256*4bytes)</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> user_stacks[TASK_LIMIT][STACK_SIZE];</span><br><span class="line"><span class="comment">//定義了用戶程式的數量(2個)</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> *usertasks[TASK_LIMIT];</span><br><span class="line"><span class="comment">//將之前定義的stack和function地址傳給create_task配置</span></span><br><span class="line">usertasks[<span class="number">0</span>]=create_task(user_stack[<span class="number">0</span>],&amp;task_func);</span><br></pre></td></tr></table></figure></li>
<li>當使用create_task函數第一次進行初始化時，在create_task中對task的stack進行了配置，並且因爲是第一次設定，將stack[8]存放了task_func的地址，然後進入到task_func中echo”task1 Created”&amp;”return”後調用syscall回到了main函數。</li>
<li>當第二次呼叫create_task時，comment也有說明，因爲activate是從exception中返回，故將lr保存爲THREAD_PSP，而此時的func從stack[15]開始</li>
<li>爲何緊接着的stack[16]就要設epsr爲0x01000000？爲何processor可以認出這條指令是設置espr的？<br>The following can clear the T bit to 0: (1)instructionsBLX, BX and POP{PC} (2)restoration from the stacked xPSR value on an exception return (3)bit[0] of the vector value on an exception entry or reset. 所以需要再將epsr設爲thumb state。</li>
</ul>
<h3 id="05-TimerInterrupt"><a href="#05-TimerInterrupt" class="headerlink" title="05-TimerInterrupt"></a>05-TimerInterrupt</h3><ul>
<li>首先看啓動文件，多了pendsv和systick的定義，關於<a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0553a/BABBGBEC.html">Cortex-M3設備的異常類型</a>再複習一下</li>
<li>void _<em>attribute</em>_((interrupt)) systick_handler(void)<br>The compiler generates function entry and exit sequences suitable for use in an interrupt handler when this attribute is present. With Epiphany targets it may also generate a special section with code to initialize the interrupt vector table.(<a href="https://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html">https://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html</a>)</li>
</ul>
<h3 id="06-Preemptive"><a href="#06-Preemptive" class="headerlink" title="06-Preemptive"></a>06-Preemptive</h3><ul>
<li>在context_switch.s中對systick_handler定義了一樣的行爲，當systick exception觸發時，也會將進程切換到kernel mode。</li>
<li>一直沒找到delay()和systick有什麼直接聯繫，恍然大悟：當一個task在運行時，由於發生了systick exception，就會切換到kernel mode然後運行下一個task，這樣就如同preemptive。</li>
</ul>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system course</tag>
        <tag>embedded system</tag>
        <tag>arm</tag>
        <tag>os</tag>
        <tag>gnu</tag>
        <tag>context switch</tag>
      </tags>
  </entry>
  <entry>
    <title>Prefetcher小练习</title>
    <url>/2020/lab-prefetch-intro/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2019/watching-notes-revolution-os/">嵌入式笔记</a>第六篇，原文写于2015年。</p>
<span id="more"></span>



<h1 id="作業要求-B"><a href="#作業要求-B" class="headerlink" title="作業要求 (B)"></a><strong>作業要求</strong> <strong>(B)</strong></h1><ul>
<li>閱讀 Week #8 <a href="https://embedded2015.hackpad.com/ep/pad/static/7ZSsa98cSKw">效能分析: Prefetching</a> 提到的論文: “<a href="http://www.cc.gatech.edu/~hyesoon/lee_taco12.pdf">When</a><a href="http://www.cc.gatech.edu/~hyesoon/lee_taco12.pdf"> Prefetching Works, When It Doesn’t, and Why</a>”，在 Linux&#x2F;x86_64 (注意，要用 64-bit 系統，不能透過虛擬機器執行) 上編譯並執行 <a href="https://github.com/embedded2015/prefetcher">prefetcher</a>(<a href="https://www.facebook.com/notes/champ-yen/the-power-of-prefetching/1214833498543546">source</a>)<ul>
<li>說明 naive_transpose, sse_transpose, sse_prefetch_transpose 之間的效能差異，以及 prefetcher 對 cache 的影響</li>
</ul>
</li>
<li>在 github 上 fork <a href="https://github.com/embedded2015/prefetcher">prefetcher</a>，嘗試用 AVX 進一步提昇效能<ul>
<li>修改 Makefile，產生新的執行檔，分別對應於 naive_transpose, sse_transpose, sse_prefetch_transpose (學習 Homework #2 的做法)</li>
<li>用 perf 分析 cache miss&#x2F;hit</li>
<li>參考 <a href="http://arxiv.org/pdf/1211.0820.pdf">Performance of SSE and AVX Instruction Sets</a>，用 SSE&#x2F;AVX intrinsic 來改寫程式碼</li>
<li>詳細描述實驗設計，以及你的觀察</li>
</ul>
</li>
<li>建立新的 Hackpad，列於「<a href="https://paper.dropbox.com/doc/k9zCX0UmNzKYIPtcXMlnD">+作業區</a>」，需要標注「開發紀錄 (B)」</li>
</ul>
<h1 id="Learn-prefetcher"><a href="#Learn-prefetcher" class="headerlink" title="Learn prefetcher"></a>Learn prefetcher</h1><ul>
<li>先分析一下原始碼，首先是naive_transpose，其實現最簡單的矩陣轉置想法，從矩陣的左上角第一個元素開始，把舊矩陣中的元素按轉置後的順序存入新的矩陣中<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">naive_transpose</span><span class="params">(<span class="type">int</span> *src, <span class="type">int</span> *dst, <span class="type">int</span> w, <span class="type">int</span> h)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">0</span>; x &lt; w; x++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> y = <span class="number">0</span>; y &lt; h; y++)&#123;</span><br><span class="line">            *(dst + x*h + y) = *(src + y*w + x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>接著sse_prefetch_transpose，使用了Intel處理器SIMD的技術，在<a href="https://paper.dropbox.com/doc/qrEPXoXETqtGUHyPua3tl">+Week#1</a>有做簡單的整理，簡單說就是一次將4筆資料放入sse暫存器中，執行一條指令就可以完成4筆資料處理。<br>具體實現的過程參考了文章<a href="https://randombit.net/bitbashing/posts/integer_matrix_transpose_in_sse2.html">Programming trivia: 4x4 integer matrix transpose in SSE2</a>。<ul>
<li>SSE指令的格式：<br><img data-src="https://cdn.joouis.com/lab-prefetch-intro-1.png"></li>
<li><a href="https://msdn.microsoft.com/en-us/library/x8atst9d(v=vs.90).aspx">_mm_unpacklo_epi32(I0, I1)</a>讀入兩個128位暫存器後會使用他們的2個低32位值，返回[a0, b0, a1, b1]，_mm_unpackhi_epi32同理，而_mm_unpacklo_epi64則是一次取64位</li>
</ul>
</li>
<li>這種方法的效能改進在：<ul>
<li>一條指令處理4筆數據，要比4筆數據4條指令處理快</li>
<li>loop unrolling：<ul>
<li>執行loop循環的組合語言代碼執行次數會變少</li>
<li>branch prediction miss機率降低</li>
<li>Wikipedia還提到如果數據沒有相依性有機會使用並行處理，在這裡SIMD已經實現<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">sse_transpose</span><span class="params">(<span class="type">int</span> *src, <span class="type">int</span> *dst, <span class="type">int</span> w, <span class="type">int</span> h)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">0</span>; x &lt; w; x+=<span class="number">4</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> y = <span class="number">0</span>; y &lt; h; y+=<span class="number">4</span>)&#123;</span><br><span class="line">            __m128i I0 = _mm_loadu_si128 ((__m128i*)(src+y*w+x));</span><br><span class="line">            __m128i I1 = _mm_loadu_si128 ((__m128i*)(src+(y+<span class="number">1</span>)*w+x));</span><br><span class="line">            __m128i I2 = _mm_loadu_si128 ((__m128i*)(src+(y+<span class="number">2</span>)*w+x));</span><br><span class="line">            __m128i I3 = _mm_loadu_si128 ((__m128i*)(src+(y+<span class="number">3</span>)*w+x));</span><br><span class="line">            __m128i T0 = _mm_unpacklo_epi32(I0, I1);</span><br><span class="line">            __m128i T1 = _mm_unpacklo_epi32(I2, I3);</span><br><span class="line">            __m128i T2 = _mm_unpackhi_epi32(I0, I1);</span><br><span class="line">            __m128i T3 = _mm_unpackhi_epi32(I2, I3);</span><br><span class="line">            I0 = _mm_unpacklo_epi64(T0, T1);</span><br><span class="line">            I1 = _mm_unpackhi_epi64(T0, T1);</span><br><span class="line">            I2 = _mm_unpacklo_epi64(T2, T3);</span><br><span class="line">            I3 = _mm_unpackhi_epi64(T2, T3);</span><br><span class="line">            _mm_storeu_si128((__m128i*)(dst+(x*h)+y), I0);</span><br><span class="line">            _mm_storeu_si128((__m128i*)(dst+((x+<span class="number">1</span>)*h)+y), I1);</span><br><span class="line">            _mm_storeu_si128((__m128i*)(dst+((x+<span class="number">2</span>)*h)+y), I2);</span><br><span class="line">            _mm_storeu_si128((__m128i*)(dst+((x+<span class="number">3</span>)*h)+y), I3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
<li>最後是sse_prefetch_transpose，相比sse_transpose多使用了4次<a href="https://msdn.microsoft.com/en-us/library/84szxsww(v=vs.90).aspx">_mm_prefetch</a>指令<ul>
<li><code>void _mm_prefetch(char * p , int i )</code> 會將地址p的數據加載到cache的一條cache line，int i有_MM_HINT_T0, _MM_HINT_T1, _MM_HINT_T2和_MM_HINT_NTA共4種，表示了不同的prefetch方式：<ul>
<li>T0 - T2對應了L1 - L3 caches，NTA表示加載數據在L1 cache并標記為首先被替換的</li>
<li>實際將T1替換為T0和T2運行程式，運行的時間區別不大，可能是測量的方式不精准</li>
</ul>
</li>
</ul>
</li>
<li>為什麼PFDIST要設為8？實際運行結果是PFDIST＝4比PFDIST＝8平均慢10000us左右  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">sse_prefetch_transpose</span><span class="params">(<span class="type">int</span> *src, <span class="type">int</span> *dst, <span class="type">int</span> w, <span class="type">int</span> h)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">0</span>; x &lt; w; x+=<span class="number">4</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> y = <span class="number">0</span>; y &lt; h; y+=<span class="number">4</span>)&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PFDIST  8</span></span><br><span class="line"></span><br><span class="line">            _mm_prefetch(src+(y+PFDIST)*w+x, _MM_HINT_T1);</span><br><span class="line">            _mm_prefetch(src+(y+PFDIST+<span class="number">1</span>)*w+x, _MM_HINT_T1);</span><br><span class="line">            _mm_prefetch(src+(y+PFDIST+<span class="number">2</span>)*w+x, _MM_HINT_T1);</span><br><span class="line">            _mm_prefetch(src+(y+PFDIST+<span class="number">3</span>)*w+x, _MM_HINT_T1);</span><br><span class="line"></span><br><span class="line">            __m128i I0 = _mm_loadu_si128 ((__m128i*)(src+y*w+x));</span><br><span class="line">            __m128i I1 = _mm_loadu_si128 ((__m128i*)(src+(y+<span class="number">1</span>)*w+x));</span><br><span class="line">            __m128i I2 = _mm_loadu_si128 ((__m128i*)(src+(y+<span class="number">2</span>)*w+x));</span><br><span class="line">            __m128i I3 = _mm_loadu_si128 ((__m128i*)(src+(y+<span class="number">3</span>)*w+x));</span><br><span class="line">            __m128i T0 = _mm_unpacklo_epi32(I0, I1);</span><br><span class="line">            __m128i T1 = _mm_unpacklo_epi32(I2, I3);</span><br><span class="line">            __m128i T2 = _mm_unpackhi_epi32(I0, I1);</span><br><span class="line">            __m128i T3 = _mm_unpackhi_epi32(I2, I3);</span><br><span class="line">            I0 = _mm_unpacklo_epi64(T0, T1);</span><br><span class="line">            I1 = _mm_unpackhi_epi64(T0, T1);</span><br><span class="line">            I2 = _mm_unpacklo_epi64(T2, T3);</span><br><span class="line">            I3 = _mm_unpackhi_epi64(T2, T3);</span><br><span class="line">            _mm_storeu_si128((__m128i*)(dst+(x*h)+y), I0);</span><br><span class="line">            _mm_storeu_si128((__m128i*)(dst+((x+<span class="number">1</span>)*h)+y), I1);</span><br><span class="line">            _mm_storeu_si128((__m128i*)(dst+((x+<span class="number">2</span>)*h)+y), I2);</span><br><span class="line">            _mm_storeu_si128((__m128i*)(dst+((x+<span class="number">3</span>)*h)+y), I3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="Reproduce-Prefetcher-by-using-AVX"><a href="#Reproduce-Prefetcher-by-using-AVX" class="headerlink" title="Reproduce Prefetcher by using AVX"></a>Reproduce Prefetcher by using AVX</h1><h4 id="修改Makefile執行檔"><a href="#修改Makefile執行檔" class="headerlink" title="修改Makefile執行檔"></a>修改Makefile執行檔</h4><ul>
<li>在這裡使用了gcc -D來定義了兩個宏，一個”&quot;$@.h&quot;“用在<code>#include</code>時可以找到對應的頭文件，另一個”&quot;$@&quot;“是在printf時輸出對應的版本名稱<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">CFLAGS = -msse2 --std gnu99 -O0 -Wall</span><br><span class="line">EXEC = naive_transpose sse_transpose sse_prefetch_transpose</span><br><span class="line"><span class="section">all: <span class="variable">$(EXEC)</span> format</span></span><br><span class="line">SRCS_common = main.c</span><br><span class="line"><span class="section">naive_transpose:</span></span><br><span class="line">        <span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> -DIMPL=<span class="string">&quot;\&quot;<span class="variable">$@</span>.h\&quot;&quot;</span> -DSTR=<span class="string">&quot;\&quot;<span class="variable">$@</span>\&quot;&quot;</span> -o <span class="variable">$@</span> <span class="variable">$(SRCS_common)</span> <span class="variable">$@</span>.c</span><br><span class="line"><span class="section">sse_transpose:</span></span><br><span class="line">        <span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> -DIMPL=<span class="string">&quot;\&quot;<span class="variable">$@</span>.h\&quot;&quot;</span> -DSTR=<span class="string">&quot;\&quot;<span class="variable">$@</span>\&quot;&quot;</span> -o <span class="variable">$@</span> <span class="variable">$(SRCS_common)</span> <span class="variable">$@</span>.c</span><br><span class="line"><span class="section">sse_prefetch_transpose:</span></span><br><span class="line">        <span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> -DIMPL=<span class="string">&quot;\&quot;<span class="variable">$@</span>.h\&quot;&quot;</span> -DSTR=<span class="string">&quot;\&quot;<span class="variable">$@</span>\&quot;&quot;</span> -o <span class="variable">$@</span> <span class="variable">$(SRCS_common)</span> <span class="variable">$@</span>.c</span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">        <span class="variable">$(RM)</span> <span class="variable">$(EXEC)</span> perf.*</span><br><span class="line"><span class="section">format:</span></span><br><span class="line">        astyle --style=kr --indent=spaces=4 --indent-switches --suffix=none *.[ch]</span><br><span class="line"><span class="section">run: <span class="variable">$(EXEC)</span></span></span><br><span class="line">        ./naive_transpose</span><br><span class="line">        ./sse_transpose</span><br><span class="line">        ./sse_prefetch_transpose</span><br><span class="line">        make clean</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="使用Perf分析cache-miss-hit"><a href="#使用Perf分析cache-miss-hit" class="headerlink" title="使用Perf分析cache miss&#x2F;hit"></a>使用Perf分析cache miss&#x2F;hit</h4><ul>
<li>在運行Perf之前將main.c中的test part和打印全部刪掉，排除額外的程式碼以增加cache測量的準確率</li>
<li><code>echo &quot;echo 1 &gt; /proc/sys/vm/drop_caches&quot; | sudo sh</code><br><code>perf stat -r 100 -e cache-misses,cache-references,L1-dcache-load-misses,L1-dcache-store-misses,L1-dcache-prefetch-misses,L1-icache-load-misses ./phonebook_orig</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Performance counter stats for &#x27;./naive_transpose&#x27; (100 runs):</span><br><span class="line">          16857556      cache-misses     # 93.608 % of all cache refs      ( +-  0.06% )</span><br><span class="line">          18008720      cache-references           ( +-  0.01% )</span><br><span class="line">          21069717      L1-dcache-load-misses      ( +-  0.00% )</span><br><span class="line">          4255304      L1-dcache-store-misses     ( +-  0.00% )</span><br><span class="line">                0      L1-dcache-prefetch-misses</span><br><span class="line">            24305      L1-icache-load-misses      ( +-  0.46% )</span><br><span class="line">      0.352085215 seconds time elapsed            ( +-  0.04% )</span><br><span class="line"></span><br><span class="line">Performance counter stats for &#x27;./sse_transpose&#x27; (100 runs):</span><br><span class="line">          4334609      cache-misses              #   79.424 % of all cache refs      ( +-  0.03% )</span><br><span class="line">          5457532      cache-references                                              ( +-  0.02% )</span><br><span class="line">          8516824      L1-dcache-load-misses                                         ( +-  0.01% )</span><br><span class="line">          4292592      L1-dcache-store-misses                                        ( +-  0.03% )</span><br><span class="line">                0      L1-dcache-prefetch-misses</span><br><span class="line">            27101      L1-icache-load-misses                                         ( +-  0.37% )</span><br><span class="line">      0.242525082 seconds time elapsed                                          ( +-  0.04% )</span><br><span class="line"></span><br><span class="line">Performance counter stats for &#x27;./sse_prefetch_transpose&#x27; (100 runs):</span><br><span class="line">          4346864      cache-misses              #   79.615 % of all cache refs      ( +-  0.03% )</span><br><span class="line">          5459859      cache-references                                              ( +-  0.02% )</span><br><span class="line">          8533348      L1-dcache-load-misses                                         ( +-  0.02% )</span><br><span class="line">          4308308      L1-dcache-store-misses                                        ( +-  0.05% )</span><br><span class="line">                0      L1-dcache-prefetch-misses</span><br><span class="line">            24590      L1-icache-load-misses                                         ( +-  0.29% )</span><br><span class="line">      0.184224127 seconds time elapsed                                          ( +-  0.08% )</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="參考-Performance-of-SSE-and-AVX-Instruction-Sets，用-SSE-AVX-intrinsic-來改寫程式碼"><a href="#參考-Performance-of-SSE-and-AVX-Instruction-Sets，用-SSE-AVX-intrinsic-來改寫程式碼" class="headerlink" title="參考 Performance of SSE and AVX Instruction Sets，用 SSE&#x2F;AVX intrinsic 來改寫程式碼"></a>參考 <a href="http://arxiv.org/pdf/1211.0820.pdf">Performance of SSE and AVX Instruction Sets</a>，用 SSE&#x2F;AVX intrinsic 來改寫程式碼</h4><ul>
<li>兩份參考文件：<ul>
<li><a href="https://software.intel.com/sites/default/files/m/d/4/1/d/8/Intro_to_Intel_AVX.pdf">Introduction to Intel® Advanced Vector Extensions</a> 介紹了基本的AVX指令以及使用範例</li>
<li><a href="https://software.intel.com/sites/default/files/managed/07/b7/319433-023.pdf">Intel® Architecture Instruction Set Extensions Programming Reference</a>，2015&#x2F;08最新的文件，介紹了AVX-512指令集，目前支援的CPU僅有Xeon Phi Knights Landing, Xeon Skylake, Cannonlake</li>
<li>關於avx的intrinsic函式指令調用<a href="https://software.intel.com/zh-cn/node/582950">Intrinsics for Intel® Advanced Vector Extensions</a><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="type">int</span> x = <span class="number">0</span>; x &lt; w; x += <span class="number">8</span> ) &#123;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="type">int</span> y = <span class="number">0</span>; y &lt; h; y += <span class="number">8</span> ) &#123;</span><br><span class="line">        __m256i I0 = _mm256_loadu_si256((__m256i *)(src + (y + <span class="number">0</span>) * w + x));</span><br><span class="line">        __m256i I1 = _mm256_loadu_si256((__m256i *)(src + (y + <span class="number">1</span>) * w + x));</span><br><span class="line">        __m256i I2 = _mm256_loadu_si256((__m256i *)(src + (y + <span class="number">2</span>) * w + x));</span><br><span class="line">        __m256i I3 = _mm256_loadu_si256((__m256i *)(src + (y + <span class="number">3</span>) * w + x));</span><br><span class="line">        __m256i I4 = _mm256_loadu_si256((__m256i *)(src + (y + <span class="number">4</span>) * w + x));</span><br><span class="line">        __m256i I5 = _mm256_loadu_si256((__m256i *)(src + (y + <span class="number">5</span>) * w + x));</span><br><span class="line">        __m256i I6 = _mm256_loadu_si256((__m256i *)(src + (y + <span class="number">6</span>) * w + x));</span><br><span class="line">        __m256i I7 = _mm256_loadu_si256((__m256i *)(src + (y + <span class="number">7</span>) * w + x));</span><br><span class="line"></span><br><span class="line">        __m256i T0 = _mm256_unpacklo_epi32(I0, I1);</span><br><span class="line">        __m256i T1 = _mm256_unpackhi_epi32(I0, I1);</span><br><span class="line">        __m256i T2 = _mm256_unpacklo_epi32(I2, I3);</span><br><span class="line">        __m256i T3 = _mm256_unpackhi_epi32(I2, I3);</span><br><span class="line">        __m256i T4 = _mm256_unpacklo_epi32(I4, I5);</span><br><span class="line">        __m256i T5 = _mm256_unpackhi_epi32(I4, I5);</span><br><span class="line">        __m256i T6 = _mm256_unpacklo_epi32(I6, I7);</span><br><span class="line">        __m256i T7 = _mm256_unpackhi_epi32(I6, I7);</span><br><span class="line"></span><br><span class="line">        I0 = _mm256_unpacklo_epi64(T0, T2);</span><br><span class="line">        I1 = _mm256_unpackhi_epi64(T0, T2);</span><br><span class="line">        I2 = _mm256_unpacklo_epi64(T1, T3);</span><br><span class="line">        I3 = _mm256_unpackhi_epi64(T1, T3);</span><br><span class="line">        I4 = _mm256_unpacklo_epi64(T4, T6);</span><br><span class="line">        I5 = _mm256_unpackhi_epi64(T4, T6);</span><br><span class="line">        I6 = _mm256_unpacklo_epi64(T5, T7);</span><br><span class="line">        I7 = _mm256_unpackhi_epi64(T5, T7);</span><br><span class="line"></span><br><span class="line">        T0 = _mm256_permute2x128_si256(I0, I4, <span class="number">0x20</span>);</span><br><span class="line">        T1 = _mm256_permute2x128_si256(I1, I5, <span class="number">0x20</span>);</span><br><span class="line">        T2 = _mm256_permute2x128_si256(I2, I6, <span class="number">0x20</span>);</span><br><span class="line">        T3 = _mm256_permute2x128_si256(I3, I7, <span class="number">0x20</span>);</span><br><span class="line">        T4 = _mm256_permute2x128_si256(I0, I4, <span class="number">0x31</span>);</span><br><span class="line">        T5 = _mm256_permute2x128_si256(I1, I5, <span class="number">0x31</span>);</span><br><span class="line">        T6 = _mm256_permute2x128_si256(I2, I6, <span class="number">0x31</span>);</span><br><span class="line">        T7 = _mm256_permute2x128_si256(I3, I7, <span class="number">0x31</span>);</span><br><span class="line"></span><br><span class="line">        _mm256_storeu_si256((__m256i *)(dst + ((x + <span class="number">0</span>) * h) + y), T0);</span><br><span class="line">        _mm256_storeu_si256((__m256i *)(dst + ((x + <span class="number">1</span>) * h) + y), T1);</span><br><span class="line">        _mm256_storeu_si256((__m256i *)(dst + ((x + <span class="number">2</span>) * h) + y), T2);</span><br><span class="line">        _mm256_storeu_si256((__m256i *)(dst + ((x + <span class="number">3</span>) * h) + y), T3);</span><br><span class="line">        _mm256_storeu_si256((__m256i *)(dst + ((x + <span class="number">4</span>) * h) + y), T4);</span><br><span class="line">        _mm256_storeu_si256((__m256i *)(dst + ((x + <span class="number">5</span>) * h) + y), T5);</span><br><span class="line">        _mm256_storeu_si256((__m256i *)(dst + ((x + <span class="number">6</span>) * h) + y), T6);</span><br><span class="line">        _mm256_storeu_si256((__m256i *)(dst + ((x + <span class="number">7</span>) * h) + y), T7);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>AVX指令集是256-bit，所以這裡一次處理8個byte，loop一次加8</li>
<li>首先將依次將8行數組的元素載入到暫存器中</li>
<li><code>_mm256_unpacklo/hi_epi32</code>函式讀入兩個256-bit的數，將低&#x2F;高128-bit以32-bit為單位交錯排列，舉例：<br><code>__m256i A = [ A0, A1, A2, A3, A4, A5, A6, A7 ];</code><br><code>__m256i B = [ B0, B1, B2, B3, B4, B5, B6, B7 ];</code><br><code>__m256i C = _mm256_unpacklo_epi32(I0, I1) = [ A0, B0, A1, B1, A2, B2, A3, B3 ];</code></li>
<li><code>_mm256_unpacklo_epi64</code>同理</li>
<li>以下對比了sse、avx共4個版本<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Performance counter stats for &#x27;./sse_transpose&#x27; (100 runs):</span><br><span class="line">          4329716      cache-misses      #   79.312 % of all cache refs ( +-  0.03% )</span><br><span class="line">          5459067      cache-references    ( +-  0.02% )</span><br><span class="line">          8514863      L1-dcache-load-misses    ( +-  0.01% )</span><br><span class="line">          4290179      L1-dcache-store-misses    ( +-  0.03% )</span><br><span class="line">                0      L1-dcache-prefetch-misses</span><br><span class="line">            26387      L1-icache-load-misses     ( +-  0.46% )</span><br><span class="line">      0.242315241 seconds time elapsed        ( +-  0.04% )</span><br><span class="line"></span><br><span class="line">Performance counter stats for &#x27;./sse_prefetch_transpose&#x27; (100 runs):</span><br><span class="line">          4345707      cache-misses    #   79.577 % of all cache refs  ( +-  0.03% )</span><br><span class="line">          5460983      cache-references    ( +-  0.02% )</span><br><span class="line">          8532546      L1-dcache-load-misses      ( +-  0.02% )</span><br><span class="line">          4307174      L1-dcache-store-misses    ( +-  0.04% )</span><br><span class="line">                0      L1-dcache-prefetch-misses</span><br><span class="line">            24769      L1-icache-load-misses     ( +-  0.46% )</span><br><span class="line">      0.184028053 seconds time elapsed        ( +-  0.06% )</span><br><span class="line"></span><br><span class="line">Performance counter stats for &#x27;./avx_transpose&#x27; (100 runs):</span><br><span class="line">          3305343      cache-misses   #   74.670 % of all cache refs  ( +-  0.02% )</span><br><span class="line">          4426624      cache-references     ( +-  0.01% )</span><br><span class="line">          8043457      L1-dcache-load-misses    ( +-  0.02% )</span><br><span class="line">          4859334      L1-dcache-store-misses   ( +-  0.02% )</span><br><span class="line">                0      L1-dcache-prefetch-misses</span><br><span class="line">            25696      L1-icache-load-misses      ( +-  0.52% )</span><br><span class="line">      0.188154465 seconds time elapsed     ( +-  0.02% )</span><br><span class="line"></span><br><span class="line">Performance counter stats for &#x27;./avx_prefetch_transpose&#x27; (100 runs):</span><br><span class="line">          3320332      cache-misses  #   51.121 % of all cache refs ( +-  0.02% )</span><br><span class="line">          6495085      cache-references       ( +-  0.02% )</span><br><span class="line">          8076035      L1-dcache-load-misses    ( +-  0.02% )</span><br><span class="line">          4886925      L1-dcache-store-misses    ( +-  0.02% )</span><br><span class="line">                0      L1-dcache-prefetch-misses</span><br><span class="line">            26493      L1-icache-load-misses     ( +-  0.35% )</span><br><span class="line">      0.187412805 seconds time elapsed        ( +-  0.05% )</span><br></pre></td></tr></table></figure></li>
<li>從cache-miss來看avx版本有25%左右的提升，從執行時間上單純avx版比sse版有明顯提升，但輸sse_prefetch；而avx的prefetch版與avx原版幾乎無差別，還輸sse_prefetch</li>
<li>關於prefetch版，<strong>PFDIST</strong>取了8&#x2F;16&#x2F;32&#x2F;64，目前暫取16。看來需要去<a href="http://www.cc.gatech.edu/~hyesoon/lee_taco12.pdf">When Prefetching Works, When It Doesn’t, and Why</a>找答案了</li>
</ul>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul>
<li><a href="http://www.cc.gatech.edu/~hyesoon/lee_taco12.pdf">When Prefetching Works, When It Doesn’t, and Why</a></li>
<li><a href="http://arxiv.org/pdf/1211.0820.pdf">Performance of SSE and AVX Instruction Sets</a></li>
<li><a href="http://www.rapidtables.com/code/linux/gcc/gcc-d.htm">gcc</a><a href="http://www.rapidtables.com/code/linux/gcc/gcc-d.htm"> </a><a href="http://www.rapidtables.com/code/linux/gcc/gcc-d.htm">-D</a></li>
<li><a href="https://software.intel.com/sites/default/files/m/d/4/1/d/8/Intro_to_Intel_AVX.pdf">Introduction to Intel® Advanced Vector Extensions</a></li>
<li><a href="https://software.intel.com/sites/default/files/managed/07/b7/319433-023.pdf">Intel® Architecture Instruction Set Extensions Programming Reference</a></li>
<li><a href="http://www.codeproject.com/Articles/874396/Crunching-Numbers-with-AVX-and-AVX">Crunching Numbers with AVX and AVX2</a></li>
</ul>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system course</tag>
        <tag>prefetch</tag>
        <tag>avx</tag>
        <tag>sse</tag>
        <tag>streaming SIMD extensions</tag>
        <tag>instruction set</tag>
      </tags>
  </entry>
  <entry>
    <title>音乐基础速查笔记</title>
    <url>/2021/music-concepts-cheat-sheet/</url>
    <content><![CDATA[<h2 id="和弦"><a href="#和弦" class="headerlink" title="和弦"></a>和弦</h2><h3 id="七和弦"><a href="#七和弦" class="headerlink" title="七和弦"></a>七和弦</h3><table>
<thead>
<tr>
<th>和弦</th>
<th>英文名</th>
<th>音程关系</th>
<th>标记（以C和弦为例）</th>
</tr>
</thead>
<tbody><tr>
<td>大七和弦</td>
<td>Major seventh chord</td>
<td>1、3、5、7</td>
<td>Cmajor7、Cmaj7、Cma7、C△7</td>
</tr>
<tr>
<td>增大七和弦</td>
<td>Augmented major seventh chord</td>
<td>1、3、#5、7</td>
<td>Cmaj7#5、C△7#5</td>
</tr>
<tr>
<td>小七和弦</td>
<td>Minor seventh chord</td>
<td>1、b3、5、b7</td>
<td>Cminor7、Cmin7、Cmi7、Cm7、C-7</td>
</tr>
<tr>
<td>属七和弦</td>
<td>Dominant seventh chord</td>
<td>1、3、5、b7</td>
<td>Cdominat7、Cdom7、C7</td>
</tr>
<tr>
<td>半减七和弦</td>
<td>Half-diminished seventh chord</td>
<td>1、b3、b5、b7</td>
<td>Cm7b5、C-7b5、Cφ7</td>
</tr>
<tr>
<td>减七和弦</td>
<td>Diminished seventh chord</td>
<td>1、b3、b5、bb7</td>
<td>Cdimish7、Cdim7、Co7</td>
</tr>
<tr>
<td>小大七和弦</td>
<td>Minor major seventh chord</td>
<td>1、b3、5、7</td>
<td>CminMaj7、CmMaj7、CmM7</td>
</tr>
<tr>
<td>变化属七和弦</td>
<td>Alt chord</td>
<td>包含变化延伸音的属七和弦</td>
<td></td>
</tr>
</tbody></table>
<h3 id="斜线与转位和弦"><a href="#斜线与转位和弦" class="headerlink" title="斜线与转位和弦"></a>斜线与转位和弦</h3><ul>
<li>斜线和弦（Slash chord）：将和弦原有的根音换成其他音，如 Dm&#x2F;G 表示将 Dm 和弦的根音换成 G</li>
<li>转位和弦（Chord Inversions）：当和弦最低音为根音时称为原位和弦，最低音为其他构成音时称为转位和弦</li>
</ul>
<h3 id="密集与开放排列"><a href="#密集与开放排列" class="headerlink" title="密集与开放排列"></a>密集与开放排列</h3><ul>
<li>密集排列和弦（Close position chord）：和弦音的排列从最低音到最高音不超过一个八度</li>
<li>开放排列和弦（Open position chord）：和弦音的排列从最低音到最高音超过一个八度</li>
</ul>
<h3 id="Drop和弦"><a href="#Drop和弦" class="headerlink" title="Drop和弦"></a>Drop和弦</h3><ul>
<li>Drop2 chord：将密集排列七和弦第二高音降低一个八度</li>
<li>Drop3 chord：将密集排列七和弦第三高音降低一个八度</li>
<li>Drop2&amp;3 chord：将密集排列七和弦第二、三高音降低一个八度</li>
<li>Drop2&amp;4 chord：将密集排列七和弦第二、四高音降低一个八度</li>
</ul>
<h3 id="251进行"><a href="#251进行" class="headerlink" title="251进行"></a>251进行</h3><ul>
<li>大调 251 进行：大调顺阶和弦的二级、五级和一级的和弦进行，如 C 大调的 251 进行为 Dm7、G7、Cmaj7</li>
<li>小调 251 进行：爵士乐小调 251 即兴中，5 级和弦选择属和弦而非顺阶的小和弦，如 C 小调的 251 进行为 Dm7b5、G7、Cm7</li>
</ul>
<h3 id="重属和弦与三全音替代"><a href="#重属和弦与三全音替代" class="headerlink" title="重属和弦与三全音替代"></a>重属和弦与三全音替代</h3><ul>
<li>重（次）属和弦（Secondary dominant chord）：解决到主和弦以外的其他调内和弦（半减七、减七和弦除外）的属和弦</li>
<li>三全音替代（Tritone substitution）：使用距离原本属和弦根音三全音位置的属和弦替代</li>
</ul>
<h3 id="和弦琶音、延伸音"><a href="#和弦琶音、延伸音" class="headerlink" title="和弦琶音、延伸音"></a>和弦琶音、延伸音</h3><ul>
<li>和弦琶音（Arpeggio）：由和弦内音组成的一串音，通常用于即兴中构建乐句</li>
<li>和弦延伸音（Tension）：非和弦基础部分构成的音，为和弦增添了额外的色彩</li>
</ul>
<h2 id="音阶"><a href="#音阶" class="headerlink" title="音阶"></a>音阶</h2><h3 id="自然大小调"><a href="#自然大小调" class="headerlink" title="自然大小调"></a>自然大小调</h3><table>
<thead>
<tr>
<th>音阶</th>
<th>英文名</th>
<th>音程关系</th>
</tr>
</thead>
<tbody><tr>
<td>自然大调（I级）</td>
<td>Natural major scale, Ionian mode</td>
<td>1、2、3、4、5、6、7</td>
</tr>
<tr>
<td>大调II级调式</td>
<td>Dorian mode</td>
<td>1、2、b3、4、5、6、b7</td>
</tr>
<tr>
<td>大调III级调式</td>
<td>Phrygian mode</td>
<td>1、b2、b3、4、5、b6、b7</td>
</tr>
<tr>
<td>大调IV级调式</td>
<td>Lydian mode</td>
<td>1、2、3、#4、5、6、7</td>
</tr>
<tr>
<td>大调V级调式</td>
<td>Mixolydian mode</td>
<td>1、2、3、4、5、6、b7</td>
</tr>
<tr>
<td>自然小调、自然大调VI级</td>
<td>Natural minor scale, Aeolian mode</td>
<td>1、2、b3、4、5、b6、b7</td>
</tr>
<tr>
<td>大调VII级调式</td>
<td>Locrian mode</td>
<td>1、b2、b3、4、b5、b6、b7</td>
</tr>
</tbody></table>
<h3 id="和声小调"><a href="#和声小调" class="headerlink" title="和声小调"></a>和声小调</h3><table>
<thead>
<tr>
<th>音阶</th>
<th>英文名</th>
<th>音程关系</th>
<th>适用和弦</th>
</tr>
</thead>
<tbody><tr>
<td>和声小调（I级）</td>
<td>Harmonic minor</td>
<td>1、2、b3、4、5、b6、7</td>
<td>minMaj7</td>
</tr>
<tr>
<td>小调II级调式</td>
<td>Locrian 6</td>
<td>1、b2、b3、4、b5、6、b7</td>
<td>min7b5</td>
</tr>
<tr>
<td>小调III级调式</td>
<td>Ionian augmented&#x2F;#5</td>
<td>1、2、3、4、#5、6、7</td>
<td>maj7#5</td>
</tr>
<tr>
<td>小调IV级调式</td>
<td>Dorian #4</td>
<td>1、2、b3、#4、5、6、b7</td>
<td>min7</td>
</tr>
<tr>
<td>小调V级调式</td>
<td>Phrygian dominant</td>
<td>1、b2、3、4、5、b6、b7</td>
<td>dom7, susb9</td>
</tr>
<tr>
<td>小调VI级调式</td>
<td>Lydian #2</td>
<td>1、#2、3、#4、5、6、7</td>
<td>maj7</td>
</tr>
<tr>
<td>小调VII级调式</td>
<td>Super locrian b7</td>
<td>1、b2、b3、b4、b5、b6、bb7</td>
<td>dim7</td>
</tr>
</tbody></table>
<h3 id="旋律小调"><a href="#旋律小调" class="headerlink" title="旋律小调"></a>旋律小调</h3><p>TBC…</p>
<h3 id="其他常用音阶"><a href="#其他常用音阶" class="headerlink" title="其他常用音阶"></a>其他常用音阶</h3><table>
<thead>
<tr>
<th>音阶</th>
<th>英文名</th>
<th>音程关系</th>
</tr>
</thead>
<tbody><tr>
<td>大调五声音阶</td>
<td>Major pentatonic scale</td>
<td>1、2、3、5、6</td>
</tr>
<tr>
<td>小调五声音阶</td>
<td>Minor pentatonic scale</td>
<td>1、b3、4、5、b7</td>
</tr>
<tr>
<td>大调布鲁斯音阶</td>
<td>Major blues scale</td>
<td>1、2、b3、3、5、6</td>
</tr>
<tr>
<td>小调布鲁斯音阶</td>
<td>Minor blues scale</td>
<td>1、b3、4、#4、5、b7</td>
</tr>
<tr>
<td>全半减音阶</td>
<td>Whole half diminished scale</td>
<td>1、2、b3、4、b5、#5、6、7</td>
</tr>
<tr>
<td>半全减音阶</td>
<td>Half whole diminished scale</td>
<td>1、b9、#9、3、#11、5、13、b7</td>
</tr>
<tr>
<td>全音阶</td>
<td>Whole tone scale</td>
<td>1、2、3、#4、#5、#6</td>
</tr>
<tr>
<td>增音阶</td>
<td>Augmented scale</td>
<td>1、b3、3、5、#5、7</td>
</tr>
<tr>
<td></td>
<td>Bebop dorian</td>
<td>1、2、b3、3、4、5、6、b7</td>
</tr>
<tr>
<td></td>
<td>Bebop dominant</td>
<td>1、2、3、4、5、6、b7、7</td>
</tr>
<tr>
<td></td>
<td>Bebop major</td>
<td>1、2、3、4、5、#5、6、7</td>
</tr>
<tr>
<td></td>
<td>Bebop melodic minor</td>
<td>1、2、b3、4、5、#5、6、7</td>
</tr>
</tbody></table>
<h3 id="音程推导"><a href="#音程推导" class="headerlink" title="音程推导"></a>音程推导</h3><p><img data-src="https://cdn.joouis.com/music-concepts-cheat-sheet-1.jpg" alt="intervals-calculation-1"></p>
<p><img data-src="https://cdn.joouis.com/music-concepts-cheat-sheet-2.jpg" alt="intervals-calculation-2"></p>
]]></content>
      <categories>
        <category>爱乐之城</category>
      </categories>
      <tags>
        <tag>music</tag>
        <tag>note</tag>
        <tag>chords</tag>
        <tag>scales</tag>
        <tag>harmony</tag>
        <tag>cheat sheet</tag>
        <tag>intervals</tag>
      </tags>
  </entry>
  <entry>
    <title>Microsoft Hackathon 2019 Winner</title>
    <url>/2019/microsoft-hackathon-2019-winner/</url>
    <content><![CDATA[<p><img data-src="https://cdn.joouis.com/microsoft-hackathon-2019-winner-1.avif"></p>
<h3 id="Biang"><a href="#Biang" class="headerlink" title="Biang!!!"></a><strong>Biang!!!</strong></h3><span id="more"></span>

<br />

<p>有时候过程不对，但结果对了。</p>
<p>Sometimes you did wrong thing or nothing, but you got something.</p>
<p>有时候付出很多，期待的结果没拿到，却机缘巧合收获意外惊喜。</p>
<p>Sometimes you did a lot, got surprise rather than what you expected.</p>
<p>只能说，享受当下吧，并在下一刻忘掉这些，继续追逐自己原本的计划。</p>
<p>Enjoy the moment, then forget about it, keep on your plan for the future.</p>
<br />

]]></content>
      <categories>
        <category>技术人生谈</category>
      </categories>
      <tags>
        <tag>microsoft</tag>
        <tag>TechTalk</tag>
        <tag>hackathon</tag>
        <tag>reward</tag>
      </tags>
  </entry>
  <entry>
    <title>我的 Ubuntu 系统配置</title>
    <url>/2016/my-configuration-for-ubuntu-distribution/</url>
    <content><![CDATA[<p>安装 Ubuntu 几次便会形成一套 SOP，在此做一个整理。</p>
<span id="more"></span>

<h1 id="给新系统减肥"><a href="#给新系统减肥" class="headerlink" title="给新系统减肥"></a>给新系统减肥</h1><hr>
<ul>
<li>修改 terminal 配色、字体大小…</li>
<li>通过 Tweak 设置桌面显示图标（个人癖好）</li>
<li>删除无用软件（只是列举几个而已)<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove unity-webapps-common thunderbird evolution</span><br></pre></td></tr></table></figure></li>
<li>各种更新<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -f</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get dist-upgrade</span><br><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure></li>
<li>下载安装 Chrome，搜狗拼音输入法，vim，cgdb，git</li>
</ul>
<h1 id="Terminal-配置"><a href="#Terminal-配置" class="headerlink" title="Terminal 配置"></a>Terminal 配置</h1><hr>
<p>首先将我的 <strong><a href="https://github.com/Joouis/Joou-s-Config">配置文件</a></strong> 克隆到电脑上，然后将里面的东西都复制到自己的用户目录下。如果没有使用 TMUX 软件则不必复制 .tmux.conf 文件。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> .bashrc .vimrc .gitconfig .tmux.conf ~/.</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">source</span> .bashrc</span><br></pre></td></tr></table></figure>

<h2 id="VIM-配置"><a href="#VIM-配置" class="headerlink" title="VIM 配置"></a>VIM 配置</h2><ol>
<li><p>安装 VIM Plugin 管理插件 <a href="https://github.com/VundleVim/Vundle.vim">Vundle</a>；</p>
</li>
<li><p>进入 VIM 并输入<code>:VundleInstall</code>；</p>
</li>
<li><p>使用 Pathogen 插件；</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim</span><br></pre></td></tr></table></figure></li>
<li><p>安装 <a href="https://github.com/drmingdrmer/xptemplate">xptemplate</a> 插件（自动补全功能）。直接将其项目克隆到家目录下的<code>.vim</code>文件夹中即可；</p>
</li>
<li><p>安装 <a href="http://ctags.sourceforge.net/">ctags</a>，下载源码编译即可，初始化直接在目录下进入 vim 按<code>ctrl &amp; F12</code>，使用直接在代码上用<code>ctrl &amp; ]</code>追踪，<code>ctrl &amp; t</code>返回；</p>
</li>
<li><p>安装 cscope，直接通过<code>apt-get</code>即可，初始化代码如下，使用上覆盖了 ctags 的操作，并且可以使用<code>ctrl &amp; \ + s</code>查找当前光标所在符号出现过位置（更多指令请<code>man cscope</code>）；</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">cscope -Rbq -f &lt;name&gt;.out</span><br><span class="line"><span class="comment"># Enter vi</span></span><br><span class="line">:cs add &lt;name&gt;.out</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="清除临时文件"><a href="#清除临时文件" class="headerlink" title="清除临时文件"></a>清除临时文件</h2><p>以<code>.un~</code>结尾的临时文件还蛮讨厌的，像我个人有强迫症，看到就会想删掉，可以输入以下命令来打扫。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">find . -name <span class="string">&quot;*~&quot;</span> &gt; ToBeClear.sh</span><br><span class="line"><span class="built_in">chmod</span> +x ToBeClear.sh</span><br><span class="line"><span class="comment"># Add rm to the head of ToBeClear.sh by vim, sort multi-lines to one line by &quot;shift j&quot;</span></span><br><span class="line">./ToBeClear.sh</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记小抄</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>github</tag>
        <tag>ubuntu</tag>
        <tag>vim</tag>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>2023大阪东京走马观花五日流水账（上）</title>
    <url>/2023/my-first-trip-to-japan-1/</url>
    <content><![CDATA[<p>身为拖延症重症患者，这篇四月底出行的旅行笔记不出意外地拖到了年底。前几天本想抢到John Mayer在东京Blue Note的跨年演出票再去东京玩一趟，可惜BN座位太少又缺乏其线上抢票经验，今年应该只有四月这一次日本行。只能补上这篇流水账，温习一下短短几天的日本时光。尽管有没计划好的行程把人折腾得不行，但整体来说瑕不掩瑜，是一次美好的旅行。</p>
<p>写这篇文章花了十几个小时，挑选了近两百张照片，说实话是一件费时费力的事。想必正在阅读本文的你也得花上一点时间才能看完三篇文章的所有内容。也想过以后是不是直接录视频、剪辑成Vlog上传到B站、YouTube，如果要做到精益求精工作量只会更大吧。并且年更型选手不需要流量更不需要变现（也不敢想），写给自己的回忆，图文记录应该足够。一年还能写上一篇笔记，对我来说已经是一个不小的目标~</p>
<p>最后要说明得是文中时间均使用当地时间，在国内是国内时间，在日本则是日本时间，两者有一小时时差。</p>
<h2 id="04-20出发前的失眠夜"><a href="#04-20出发前的失眠夜" class="headerlink" title="04.20出发前的失眠夜"></a>04.20出发前的失眠夜</h2><p>此次和公司同事Eyama约好一同出行，我们提前订好了往返机票、酒店以及演唱会的门票，并且制定了大致的行程。由于去程航班中午出发，早上十点就得值机，在Eyama的邀请下我前一天晚上直接睡他家客房，第二天一早七点出发自驾前往上海浦东机场附近的停车场。之所以选择开车去是因为返程航班晚上十一点才到达，公共交通基本都收班了，还是自己开车回苏州靠得住。20号晚餐吃得很爽，Eyama师傅作为拿到中级厨师证的资深爱好者，做得一手好饭，我们经常来他家聚餐。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-1.avif" alt="那天晚上四人聚餐的一道硬菜"></p>
<p>不过这一晚我几乎没睡着：可能是不习惯早睡，也可能因为床板太硬；不知为何房门不能完全关紧，从厕所窗外传来的大街上飘荡的回响听得一清二楚；他家的两只猫猫时不时钻进房间视察一下。总之就这样熬到了第二天清早…</p>
<h2 id="04-21出发"><a href="#04-21出发" class="headerlink" title="04.21出发"></a>04.21出发</h2><p>楼下简单吃了个早饭，便利店买几罐咖啡，我们即刻出发。今天是周五，之前担心会遇到早高峰堵车，不过运气不错一路畅通。Eyama开车，我虽然困得不行还是陪他聊了一路音乐。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-2.avif" alt="恐怕只有在苏州开车才懂的梗"></p>
<p>浦东机场卫生间外的数据大屏。现在只要上云，都要冠以“智慧” “AI” “大数据”这些噱头。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-3.avif"></p>
<p>值机后时间绰绰有余，我们来到贵宾厅小憩一下，吃点东西补充能量。出关时国内海关的工作人员在我说完去日本旅游、四五天就回后，莫名其妙来了一句“不去美国玩啊？”，我整个人懵了一下。虽然护照里有十年美签，但这是什么奇怪的联想。配合上他那似笑非笑的表情，属实让人不舒服。“不去！”。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-4.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-5.avif"></p>
<p>日本时间下午三点抵达大阪关西国际机场，入关的人不多，不过后来看网上说这几天有些时段也是要排长队。我办得是五年多次往返旅游签证，单次入境最多可以待90天。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-6.avif"></p>
<p>按照当地政策，如果已经在国内接种了三针疫苗，则不用再做核酸。直接在微信小程序“防疫健康码国际版”上获取《国际旅行健康证明》，出机场时出示给工作人员看即可。此外还有一个环节需要在机场的大屏设备上登记一些东西，这才过半年已经忘了是干什么的 @_@</p>
<p>在搭电车去大阪市中心前，我们原本准备取点日元备用，看完机场机器上的汇率后立马劝退。Eyama已经换上提前在淘宝买的流量卡，问了下日本当地的朋友说市区便利店的汇率不错，于是我俩都只在Apple Pay上给Suica充了点钱，先坐电车到市区再说。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-7.avif"></p>
<h2 id="04-21初识大阪，入住心斋桥"><a href="#04-21初识大阪，入住心斋桥" class="headerlink" title="04.21初识大阪，入住心斋桥"></a>04.21初识大阪，入住心斋桥</h2><p>关西机场建在一个岛上，去市区的第一步就是过海。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-8.avif"></p>
<p>日本的酒店都是我订的（Eyama负责选餐厅），我们今晚住在心斋桥边上的东横INN酒店。电车到达难波站后，看距离不是很远我们决定步行过去。这几天Eyama都只提了一个内置保温层的大袋子，里面非常离谱地装了一位深圳朋友做得糕点，要带去东京给一群他们共同的朋友。我非常无语这群东京的人好意思让Eyama从深圳-苏州-大阪-东京这么带一路，同时这也苦了我的行李箱。因为大多时候他都把袋子放行李箱上，然后主动提出拖着箱子走。尽管路上跟他说过几次，但是一旦走得久点，Eyama就会在过马路时下意识通过拉杆直接提起箱子通过台阶，这样的后果就是回苏州时拉杆已经摇摇晃晃、命不久矣。后半段还是我自己管好箱子吧。</p>
<p>初到大阪的第一个深刻印象就是出租车打蜡保养得非常新。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-9.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-10.avif"></p>
<p>室外22°气候凉爽，风稍微有点大。去酒店的路基本就沿着左侧这座高架桥一路向北。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-11.avif"></p>
<p>沿路看到的Livehouse，演出类型主要是爵士、放克和布鲁斯。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-12.avif"></p>
<p>日本特色之K car，没想到还有越野版。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-13.avif"></p>
<p>豪车在心斋桥附近还挺常见。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-14.avif"></p>
<p>这座高架是阪神高速道路。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-15.avif"></p>
<p>电话亭和停车计费器。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-16.avif"></p>
<p>东横INN酒店楼下就是一个停车场，这里也有随处可见的自动贩售机。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-17.avif"></p>
<p>这就是我们今天过夜的东横INN酒店，前同事推荐，是日本的一家连锁品牌。出门就是地铁，价格不贵还包含早餐，性价比很高。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-18.avif"></p>
<p>很复古的电梯。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-19.avif"></p>
<p>房间面积虽然不大但干净整洁。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-20.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-21.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-22.avif"></p>
<p>卫生间面积很小，基本上只能一个人落脚，但是存在很多巧思设计提升空间利用率。这就是日本吧~</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-23.avif"></p>
<h2 id="04-21道顿掘逛吃"><a href="#04-21道顿掘逛吃" class="headerlink" title="04.21道顿掘逛吃"></a>04.21道顿掘逛吃</h2><p>放好东西，我们再次出发走去道顿掘逛逛，吃点当地特色小吃。</p>
<p>路边这个宠物医院还挺洋气。另外大阪街头骑自行车的人非常多。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-24.avif"></p>
<p>路过一家7-11顺便取了四万日元，并拍照留念🤣。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-25.avif"></p>
<p>药妆店也是随处可见。普锐斯倒是国内越来越稀少的车型。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-26.avif"></p>
<p>这是什么建筑你知道吗？</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-27.avif"></p>
<p>逐渐靠近道顿掘商圈。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-28.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-29.avif"></p>
<p>河道两旁很安静。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-30.avif"></p>
<p>这里面也有不少酒店。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-31.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-32.avif"></p>
<p>河上的一座桥。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-33.avif"></p>
<p>走到另一段又见一个牌子。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-34.avif"></p>
<p>远处这个梯形大楼令人瞩目，此外这条大道上有不少奢侈品店。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-35.avif"></p>
<p>这种招牌还挺可爱的。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-36.avif"></p>
<p>哪里都有兰州牛肉面！</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-37.avif"></p>
<p>过了刚才能看到尖角大厦的主干道，东边的商业街人山人海、异常热闹。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-38.avif"></p>
<p>逛了好一会，也该出手了。我们决定试试这家排队人超多的章鱼烧店。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-39.avif"></p>
<p>没想到小小章鱼烧也有定制款售票机。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-40.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-41.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-42.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-43.avif"></p>
<p>最终成品如下，味道不错，口感较嫩。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-44.avif"></p>
<p>后面Eyama提议再来点串，而我想留点肚子吃正餐。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-45.avif"></p>
<p>傍晚的河道，夕阳余晖，而大楼陆续亮起灯光。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-46.avif"></p>
<p>牛郎的广告，销售额破亿的“亿男”，有点搞笑。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-47.avif"></p>
<p>来到道顿掘，自然要打卡Glico跑男。桥上拍照的、跟广告牌合影的人超级多！我们打完卡赶紧离开。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-48.avif"></p>
<p>这家招聘画得实在可爱！</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-49.avif"></p>
<p>我们原本准备吃一家烤肉店，但排队人数众多，一眼瞥到隔壁这家365酒场，网上评价也不错，那就这家吧。事实证明味道和氛围都不错，我们相当满意！</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-50.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-51.avif"></p>
<p>这家店看上去不大，实际还有地下一整层，有不少日本上班族在此畅饮畅谈。Eyama给我科普，日本人在这种场合喝酒为主，只会点少量菜下酒，而我们这种桌上除了两杯酒外全是菜的，一看就是外国人😅。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-52.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-53.avif"></p>
<p>墙上的海报同样有特色。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-54.avif"></p>
<p>扫码点餐，顺便附上WIFI账密。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-55.avif"></p>
<p>啤酒很清爽，食物的整体口味也不错，基本没怎么踩雷。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-56.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-57.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-58.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-59.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-60.avif"></p>
<p>意犹未尽，再来一杯乌龙茶啤酒。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-61.avif"></p>
<p>这个炒面是正宗大阪口味，非常咸，我不太行。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-62.avif"></p>
<p>走前去了个厕所，又是日本特色的迷你洗手池和电动马桶圈。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-63.avif"></p>
<p>前面Eyama说过日本人在居酒屋以喝酒为主，然而他们并不是不饿，而是会在散场之后再站在拉面店门口嗦碗面😅。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-64.avif"></p>
<p>吃饱走回酒店，沿路夜景很好，满满的都会感。</p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-65.avif"></p>
<p><img data-src="https://cdn.joouis.com/my-first-trip-to-japan-1-66.avif"></p>
<p>睡前看了下酒店房间的电视有什么节目，果不其然有成人分类，并且需要付费观看。前一晚一直没睡好，今天赶了大半天路，明晚还要坐夜间巴士（并且还有未知的特种兵行程），睡了睡了。</p>
<h2 id="下一集"><a href="#下一集" class="headerlink" title="下一集"></a>下一集</h2><p>《<a href="https://joouis.com/2023/my-first-trip-to-japan-2/">2023大阪东京走马观花五日流水账（中）</a>》</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>food</tag>
        <tag>japan</tag>
        <tag>okasa</tag>
        <tag>tokyo</tag>
      </tags>
  </entry>
  <entry>
    <title>2023大阪东京走马观花五日流水账（下）</title>
    <url>/2023/my-first-trip-to-japan-3/</url>
    <content><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>《<a href="https://joouis.com/2023/my-first-trip-to-japan-2/">2023 大阪东京走马观花五日游（中）</a>》</p>
<h2 id="04-24-东京微软办公室长什么样？"><a href="#04-24-东京微软办公室长什么样？" class="headerlink" title="04.24 东京微软办公室长什么样？"></a>04.24 东京微软办公室长什么样？</h2><p>一觉睡到九点半对我来说不算什么，但对Eyama而言够晚了，他也是真累了。中午Eyama约了他之前在Bing的一位同事姐姐带我们参观微软品川办公室。办公室就在品川站旁边，地理位置非常便捷。不过我们并没有绕一圈去品川站，还是沿着昨晚回来的路线，R线转临海线到天王洲岛站下车。考虑到剩余路程不长，并且地图上看这一带由好几个小岛连接而成，景色应该不错，因此我们直接步行到微软办公室。</p>
<p>沿途环境很优美，并且周一工作时间人不多。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38350&authkey=!AAEMrYXGAe4oUXw&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38351&authkey=!AMprAKyWoBiaW8U&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38353&authkey=!ADjHVUbQLtXwRXw&width=2000&height=1500"></p>
<p>约莫二十分钟走到微软大楼。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38354&authkey=!ANpJthUC4kJxdD8&width=2000&height=1500"></p>
<p>电梯上来就是一个透明玻璃屋的纪念品店，我们离开前逛了一下，有意思的礼品不多。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38362&authkey=!AFFUUXHjSI2YzxU&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38363&authkey=!AIvT09lj1GCQETg&width=1500&height=2000"></p>
<p>我背着小包出门，把工牌忘在酒店的书包里了，只能登记访客进入。而Eyama被前台小姐姐赋予了永久进入品川办公室的权限 &#x3D; &#x3D;+</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38356&authkey=!AKzdfGAFRm8-xO8&width=1500&height=2000"></p>
<p>Eyama的前同事Tomoko小姐姐是我厂的一名产品经理，人很亲切。接到我们之后正好是饭点，先带我们简单吃个工作餐。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38357&authkey=!APEP3w2CxoBfZaQ&width=2000&height=1500"></p>
<p>东京办公室的设计主题有点像是热带丛林，办公室的整体环境和国内差不多。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38358&authkey=!AJ-Tn4dSdNCy7FI&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38359&authkey=!AIkfio1KkC8Y2b0&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38360&authkey=!AF7l8VqUIjb5PG0&width=2000&height=1500"></p>
<p>餐厅应该都比苏州分公司的强（吧）。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38361&authkey=!APmY3uYF7nk2Dps&width=2000&height=1500"></p>
<p>Tomoko把我们带到Eyama前团队所在的区域和老同事打招呼后就因为工作先离开了，我们相约苏州办公室再见。三四年过去了，Eyama的同事还有好几位在原来的团队，大家随意叙旧聊了好一会。隔壁居然有个做机器人的小哥在用我们组的机器学习产品，和他简单交流后表示有问题随时Teams上ping我😎。</p>
<p>离开前再拍一张，整体来说这边是很传统外企风的办公室。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38364&authkey=!ANmNk7BQ73sxk7g&width=1500&height=2000"></p>
<h2 id="04-24-中古琴行初体验"><a href="#04-24-中古琴行初体验" class="headerlink" title="04.24 中古琴行初体验"></a>04.24 中古琴行初体验</h2><p>离开微软后我们到品川站坐地铁前往涩谷，去那边的Ikebe琴行寻找在大阪没看到的中古琴。一路都在想带把合适的琴回去，把这次日本行的费用给挣回来。Ikebe的涩谷分店距离车站很近，一栋商业楼里有一层全是中古琴，店的面积也不算小，有点意思。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38369&authkey=!AAhkSdADzfxJLCo&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38368&authkey=!AK05nog-5MtiW50&width=2000&height=1500"></p>
<p>居然还能见到Warmoth的拼琴。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38367&authkey=!AGoAC2E7Qxuh--o&width=1500&height=2000"></p>
<p>我一眼就发现了之前在网上相中的吉他，向店员提出了试琴的请求。店员二话不说拿下琴接好音箱，调音之后递给我就接着忙去了。体验非常棒！</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38365&authkey=!AMh7PeXMCn5bDt4&width=2000&height=1500"></p>
<p>琴的音色没什么好说的，经典335之声。正面品相尚可，但其他地方有一些明显的磕碰。咨询价格才知道网上的标价似乎是店里的进货价，实际售价要比标价高出不少，一下子就没比国内便宜多少了。好吧，看来回去还得多做做功课，这次看看就好。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38366&authkey=!ANgfwklvFItNOM0&width=1500&height=2000"></p>
<h2 id="04-24-自助核酸，银座采购"><a href="#04-24-自助核酸，银座采购" class="headerlink" title="04.24 自助核酸，银座采购"></a>04.24 自助核酸，银座采购</h2><p>离开琴行后有件非常重要的事情，那就是做核酸。说来也不太走运，五月开始回国就不需要核酸证明，我们恰好处在四月的尾巴，还得花钱找一次麻烦。中午吃饭时Tomoko帮我们查询到了涩谷站附近的核酸点，并协助我们完成了线上预约。走去核酸检测站的路上，觉得这个上坡很有澳门街道的味道。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38370&authkey=!AK_U93jca5bImBo&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38371&authkey=!ANJXHfDHBb2mv5U&width=1500&height=2000"></p>
<p>日本做核酸可不便宜，跟国内20年到21年时医院的价格差不多。里面的工作人员态度不是很好，是这次旅途中罕见的不太友善的日本人。当然我们也有点紧张，这边的核酸是自己操作检测，万一由于操作不当被认定为无效检测进而影响回程航班，那将是一场灾难。好在第二天下午返回大阪的路上，我们各自收到了阴性结果的检测报告。</p>
<p>在网上了解日本核酸的过程中，我还发现了一个短暂的灰色产业：闲鱼上居然有人帮忙伪造核酸检测报告！核酸检测报告上只有基本信息和检测结果，这意味着仿造的成本极低；而登机前航司只会查看报告，并不会去网上查验真伪，约等于走个过场。只能说有些人胆子真的大！</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38372&authkey=!AAV7Yfc7mfdvLVU&width=1500&height=2000"></p>
<p>做完核酸三点不到，而Eric的演唱会六点才入场，时间充裕我们先路过银座给Eyama女友以及他老板代购。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38373&authkey=!AGE-2c6Kfmx4nlE&width=1500&height=2000"></p>
<p>也不记得从多早以前起便知道银座这个名字，到了后的直接观感就是购物中心，满街的奢侈品店。不少店还配有会中文的店员，简单了解才知道原本就是中国人。另外这里的店员绝对是我们在日本遇到英文最好的那批人，果然为了赚钱还得多学几门语言🤣。我们回地铁站的路上还遇到了看起来像精神不正常的流浪汉，边走边咒骂，时不时扇自己巴掌，好在对路人没什么攻击性。</p>
<p>乡巴佬头一次听说MIKIMOTO这个品牌，据说创始人是世界上第一个成功培育珍珠的人，因此这家珠宝店因珍珠闻名。我们来这儿是帮Eyama老板代购，跟导购小哥聊得过程中，Eyama开玩笑说帮老板买东西是为了升职，同为东亚人的日本小哥秒懂，后面自如使用“for promotion~”这个梗，只能说大家都深受传统东亚职场文化荼毒已久 XD</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38375&authkey=!AKA7Y3VKta9EZQc&width=1500&height=2000"></p>
<h2 id="04-24-吉他之神的演唱会！"><a href="#04-24-吉他之神的演唱会！" class="headerlink" title="04.24 吉他之神的演唱会！"></a>04.24 吉他之神的演唱会！</h2><p>买完东西已经五点出头，中间花了不少时间在微信沟通上。等我们到武道馆时已经五点半，看起来是没时间吃正餐了，便利店饭团解决吧。吃饭团前腹中感到不适，立马冲去路边的公共厕所大号。结果这个厕所着实让我震惊，非常干净，没什么异味。要是偏远地段或者高级商场里的厕所就算了，这就是一个普通的路边厕所，并且靠近九段下地铁站，人流和使用量非常大，下午五点半居然能保持这么好？！当下在微信上跟对象说，虽然听起来像国内公知说的话，但这个厕所甚至比我们家的还干净…</p>
<p>出来后还发现马路对面居然是靖国神社，那正好把这泡屎送给供奉在里面的战犯们~</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38377&authkey=!AGapmSW76yVdeNI&width=1500&height=2000"></p>
<p>六点差几分，武道馆场外已经排起了长队，我们也抓紧时间入场，不过等坐进去才发现里面大多数座位还空着呢，再晚半小时都完全来得及。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38378&authkey=!AEbBAttJ_1Rboi8&width=2000&height=1500"></p>
<p>听说日本的音乐人都以能在武道馆开个人演唱会为荣，其地位类似香港的红馆。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38380&authkey=!ACObAWlTuGM35Jo&width=2000&height=1500"></p>
<p>“ERIC CLAPTON LIVE AT BUDOKAN 2023”，我们今晚是此次老克东京演出的最后一场。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38381&authkey=!ANrh5nBCRWAyNbE&width=2000&height=1500"></p>
<p>入座后发现超过一半以上的座位还空着。武道馆不大，座位还是老式的塑料板凳，更多是一种象征吧。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38382&authkey=!AEPwmPImvGldQrE&width=2000&height=1500"></p>
<p>年初手机从S21U升级到S23U，号称演唱会神器，客观说10倍光学变焦也只是看得到，距离看得清还有一段差距。但确实比大部分手机强不少，整体差强人意吧。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38384&authkey=!AHzAWUu-NwBmNwE&width=2000&height=1500"></p>
<p>一眼望过去老年粉丝还真不少，Eric跟随Cream乐队在上世纪六十年代就闻名全球，有这么多老年粉丝也正常。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38387&authkey=!ANyvgES9R9OV_d4&width=2000&height=1500"></p>
<p>六点五十，工作人员上台进行最后的调音检查工作。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38388&authkey=!ALo_DP25GGCmDTI&width=1500&height=2000"></p>
<p>七点准时开演，一个半小时的听觉盛宴。我们当晚发现举起手机的观众很少，后来才知道日本的很多演出不允许拍摄。不过这一场没有看到禁止告示，姑且认为没有问题吧。下面浅放一些演出照片，YouTube上可以搜到其他场次的全场录像。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38392&authkey=!AAKEsk7b-K4mqFk&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38394&authkey=!AAPmJ6PsOQf5QEg&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38396&authkey=!AC4zc7FAyecECD0&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38397&authkey=!AKhwgm0Wxtr7yJY&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38399&authkey=!AKTbWnBRVzZGUT0&width=1500&height=2000"></p>
<p>在几首电吉他曲目后换木吉他表演，中间还说了几句话感谢歌迷一直以来的支持。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38405&authkey=!ABi0NrX-CQ6Le_U&width=1500&height=2000"></p>
<p>等演到《Tears in Heaven》时，全场观众自发打开手机闪光灯跟随节奏摇摆起来，场面很温情。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38406&authkey=!AHH4ik_WeihJ0ZQ&width=2000&height=1500"></p>
<p>我并非Eric的铁粉，之前也只听过他的一些广为流传的作品，更别说他的巡演乐队。但是当下就能感觉到乐手们非常厉害，各个卧虎藏龙，尤其是最左边的键盘手，solo的旋律和节奏都一顶一。演出结束后上网搜寻才知道这居然是一支“老龄乐队”：最年轻的吉他手Doyle Bramhall II都已54岁，键盘手Chris Stainton更是79岁高龄，有着赫赫履历的一群大师！总觉得光头佬很眼熟，看到名字直拍大腿，原来是Nathan East——音乐史上参与录音最多的贝斯手之一。之前总是在网上的各种演出视频中见到，没想到他也是Eric的老伙伴。这场演出绝对物超所值！</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38409&authkey=!AET5unzMZUczX4I&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38413&authkey=!AA8PjhHE4rS5oI0&width=2000&height=1500"></p>
<p>演出一个半小时就结束了，意犹未尽，完全听不够。在大家的安可声中Eric和乐队只返场了一次，他与另一位键盘手Paul Carrack各唱一首歌便彻底谢幕。原本以为作为东京演唱会的最后一场老克会有更多表演回馈粉丝，不过了解他们的年龄后表示理解，这个岁数还能在舞台上近乎完美地表演一个半小时，很难要求更多。</p>
<p>这是我第一次出国看演唱会，也是第一次现场看全球顶级巨星、吉他英雄的演出，今生难忘！当时在朋友圈感叹道：</p>
<blockquote>
<p>圆梦2023之老克演唱会，顶级的老克、顶级的乐队、顶级的观众，几乎完美的观看体验！不是老克的粉丝，但传奇的魅力无法阻挡！今晚最佳个人投《I shot the sheriff》，但用《Wonderful tonight》给日本之行画下句号再合适不过。</p>
<p>震撼，精彩！</p>
</blockquote>
<p>大家有序退场后，我们与Eyama的朋友一起吃了顿印度菜，顺便了解了一点日本大学生毕业后的工作生活状况。听上去名校毕业生在国际大公司工作光鲜亮丽，实际在东京这样的大都市甚至会入不敷出。赚得多花得也多，和北上深挺像的。</p>
<p>依稀记得这是永田町站的换乘电梯。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38416&authkey=!AOxnXGJWd1L735U&width=1500&height=2000"></p>
<p>今天完成来日本最重要的行程，一整个大满足。洗完澡放松地坐在床上跟Eyama再干一杯，把剩下的零食消灭掉，明天就要回国啰。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38418&authkey=!AK2ie56ZUql_esI&width=1500&height=2000"></p>
<h2 id="04-25-东京Google办公室长什么样？"><a href="#04-25-东京Google办公室长什么样？" class="headerlink" title="04.25 东京Google办公室长什么样？"></a>04.25 东京Google办公室长什么样？</h2><p>东京的最后一个行程也尤为精彩，那便是参观谷歌在涩谷的办公室。来之前我们本想在涩谷站取返回大阪的新干线高铁票，但不知为何Visa卡付款一直有问题，远程求助Lq君无果，她直接杀下楼帮我们重买两张票。再一看行李寄存柜的价格，算了还是托管在办公室的前台吧。</p>
<p>和贵软的中年企业风相比，谷歌办公室的风格更加年轻时尚，符合我们对互联网大厂的期待。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38419&authkey=!AFbrtScq1PlmxE8&width=2000&height=1500"></p>
<p>音乐室空间不小，设备偏入门等级。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38420&authkey=!ABiDIu5LmGdpNc8&width=1500&height=2000"></p>
<p>走廊靠墙的谷歌日语键盘展示区域很有趣，用大大小小几个键盘模仿摆出一台架子鼓，桌下还有两个踏板。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38421&authkey=!AFfCJCYmHT7YTdY&width=2000&height=1500"></p>
<p>落地窗外的风景，甚至能看到东京铁塔，简直是电视剧里才会出现的场景。本IT民工羡慕哭了😭😭😭。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38422&authkey=!APvdgVx53WKCEDQ&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38423&authkey=!AHYoQnin0AmsFos&width=2000&height=1500"></p>
<p>Google的食堂毫无疑问秒杀贵软，无论是东京还是国内的几个办公室。并且食堂有好几个，包含西餐和日式餐点。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38424&authkey=!AD3nSVayBpuROQI&width=2000&height=1500"></p>
<p>用餐景色也这么顶。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38425&authkey=!AKPEBj3RDAHfeaE&width=2000&height=1500"></p>
<p>日式拉面食堂门口有一台售票机，实际不要钱~</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38426&authkey=!ALOKiluLggmlUs0&width=1500&height=2000"></p>
<p>所有食堂免费不说，种类丰富，碳水和蛋白质管够。水果有也好几种，吃完主食后才去拿。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38427&authkey=!AKfIjH9s-fd2Hiw&width=2000&height=1500"></p>
<p>娱乐室倒没什么特别的，就是这个攀岩墙应该是给小朋友玩得吧。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38429&authkey=!AElZmbKsxVq5-ng&width=2000&height=1500"></p>
<p>直到我们走后几个月，Lq才搞明白跳舞机和打碟机该怎么玩。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38430&authkey=!AKb6JV3nmA3dBoU&width=1500&height=2000"></p>
<p>贵软唯一能与之一战得可能只有pantry了…</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38431&authkey=!AHsFCIF_MDoW6mk&width=2000&height=1500"></p>
<p>感谢Lq大佬这几天在东京的照顾，大感恩~</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38544&authkey=!AH6AMiu0HKkY43k&width=1500&height=2000"></p>
<h3 id="04-25-返程"><a href="#04-25-返程" class="headerlink" title="04.25 返程"></a>04.25 返程</h3><p>最后剩下返程之旅。我们先坐地铁到品川，接着乘坐新干线返回大阪。不得不说当初拒绝Eyama乘坐夜间大巴往返是多么明智的决定，虽然新干线不便宜，但舒适度比夜间大巴高出无数个档次，何况参观谷歌办公室的体验更是难得。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38433&authkey=!AGTlTTC3tnxYWHg&width=2000&height=1500"></p>
<p>新干线列车和国内的高铁感觉差不多。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38435&authkey=!APLhYWgpCU0Yp2Y&width=2000&height=1500"></p>
<p>到达新大阪站后转机场快线，还看到一辆Hello Kitty主题的列车。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38436&authkey=!AAeauYU0chiCXVI&width=2000&height=1500"></p>
<p>我们原本要坐到关西空港的特急列车，不知怎么又上错车，到大阪后停了十多分钟开始返程新大阪才发现不对劲，赶忙查到下一班特急并成功赶上。也幸亏最初订新干线时多预留了一个半小时的时间。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38437&authkey=!ABdMswJypwfm6sY&width=2000&height=1500"></p>
<p>抵达关西机场后发现网上介绍的美食区域基本都在装修，只剩寥寥个位数的门店还在营业。这家拉面店的炸物好吃。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38438&authkey=!AGiuawhksq1-4-w&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38439&authkey=!AD63jHBbuiF1mDQ&width=2000&height=1500"></p>
<p>值机前Eyama去免税药妆店按照他对象给出的清单采购物品，而我嘛“来都来了”，问好免税门槛之后凭直觉买了点平时可能会用到的药，比如大正口腔溃疡贴。只是好像没比国内便宜多少，应该是我没做好功课。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38440&authkey=!AEIwCuJtmB9Mr_8&width=2000&height=1500"></p>
<p>值机时还遇到一点小麻烦，航司要求所有乘客出示纸质版的核酸检测报告，Eyama有点走不动了，只好让他看着行李我去找便利店打印。结果航站楼内的便利店没有打印机，店员告诉我要去对面楼的全家才有。火急火燎跑过去之后，前面有个国人小姐姐正在操作，但她的苹果手机连不上打印机，而我的三星没问题但身上没有硬币现金。她主动帮我投了币，我也义不容辞帮她打印了证明。</p>
<p>我俩风尘仆仆赶回值机柜台时，原本排着的长队已经走光，我们随后也顺利办完手续登机。落地上海已是夜里十一点半，等到停车场的接驳车把我们接回停车场差不多十二点。来时是Eyama开得车，回程就由我来一路狂飙了。因为是Eyama的车，开回苏州他家小区门口之后，我还需要再打车花费约半小时才能到家。苏州没有机场真得太伤，一口气赶十二小时的路太伤。</p>
<p>无论如何，第一次日本之行到此圆满告一段落，除了没有背一把吉他回来外其余目标全都达成。增长了很多见识，对日本IT业职场也有了一丁点浅薄的认知。感慨对于有钱人来说，在日本当一个外国人（不融入当地文化）生活很爽，既有发达国家的基建、产业优势，同时又兼具安全、好服务等一些欧美国家被诟病缺乏的东西。</p>
<p>五年多次签证不能白办，以后还会常来看看~</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>food</tag>
        <tag>japan</tag>
        <tag>okasa</tag>
        <tag>tokyo</tag>
      </tags>
  </entry>
  <entry>
    <title>2023大阪东京走马观花五日流水账（中）</title>
    <url>/2023/my-first-trip-to-japan-2/</url>
    <content><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>《<a href="https://joouis.com/2023/my-first-trip-to-japan-1/">2023 大阪东京走马观花五日游（上）</a>》</p>
<h2 id="04-22-徒步往返大阪城"><a href="#04-22-徒步往返大阪城" class="headerlink" title="04.22 徒步往返大阪城"></a>04.22 徒步往返大阪城</h2><p>今天是未曾设想的超级特种兵的一天，且听我慢慢道来。</p>
<p>早上八点五十，赶在酒店早餐收摊之前浅尝了一下，只能说很有地方特色 :)</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38256&authkey=!AMMGM0j9ywYgSPU&width=2000&height=1500"></p>
<p>吃完我们便出发前往今日唯一景点——大阪城。需要说明从心斋桥往返大阪城我们几乎全程步行，因为Eyama对Hello Cycling的电动自行车有莫名的执念，沿路查看每个停车点有无车辆。结果所有网点都没有超过一辆可以正常使用的自行车，导致我们走了绝大多数路程。随后由于距离近、走街串巷，依然徒步在心斋桥附近逛琴行、逛商店街以及找吃的。最终手机上破纪录地显示今天走了<strong>18.78公里</strong>…</p>
<p>祸不单行，到了晚上我开始感到脸烫头晕，一开始还以为过度疲劳导致发烧，后面几天才意识到，我居然晒伤了！还是太年轻，完全没想到大阪的紫外线如此强烈… 而Eyama，他戴了帽子😂。</p>
<p>那么开始今天的city walk吧。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38257&authkey=!APTUx8LDhl7td0M&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38258&authkey=!ANCCEz0NMX2HgsI&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38259&authkey=!AMwZdjDUU3k3CdY&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38260&authkey=!AJcoVWeeIfeRIlE&width=1500&height=2000"></p>
<p>这个红绿灯旁边有个按钮，如需过马路要提前按一下，不然一直是红灯。我们就这样傻傻等了好一会才意识到不对劲😂。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38261&authkey=!AFpC-CdKD9reP6s&width=1500&height=2000"></p>
<p>还有中文解释，说明咱国人游客不少。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38262&authkey=!ADy3FwR9cDr78m8&width=1500&height=2000"></p>
<p>感觉大阪不算拥挤，街道宽敞，还能偶遇这样的小公园。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38263&authkey=!AGkWD0cbArvjRYw&width=2000&height=1500"></p>
<p>这里原本要触发一个支线任务，那就是Eyama计划在去大阪城的沿途探寻一家Tabelog评分很高的店，就在这个小公园旁边。我们到店时间11点不到，想着这么早到应该不用排队，结果店家告诉我们需要预约… 支线任务失败 :(</p>
<p>这不仅需要Eyama当下再从Tabelog找一家附近的店，同时也无意中加大了当日行走量以及为晒伤埋下伏笔。在公园阴凉处稍息片刻，Eyama决定午餐吃一家步行十几分钟距离的大阪烧，既然选择权交给他我自然同意。</p>
<p>到店差点破防，今日店内不接客。好在店家还做外卖，我们可以买了带去附近的7-11吃。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38267&authkey=!AJHciR1rYWAJja4&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38265&authkey=!AIgQiFvquI98zrE&width=1500&height=2000"></p>
<p>两份炒面的味道其实差不多，就是加料带来区别。和昨晚的炒面类似，闻着很香，但吃起来特别咸。我俩都狂喝水，最后也没全吃完。只能说关西风味不太适合我们。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38268&authkey=!AJXlGUg54vvfEDQ&width=2000&height=1500"></p>
<p>我们顶着中午十二点的大太阳继续前往大阪城。途中路过大阪历史博物馆，下次一定。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38270&authkey=!AJf4NkK4z5sHzzs&width=2000&height=1500"></p>
<p>大阪警察本部就在大阪城对面。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38271&authkey=!ADyUtitYZiyPlJw&width=1500&height=2000"></p>
<p>隔着护城河远眺大阪城。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38273&authkey=!AAmUgfOjcqaMnzc&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38275&authkey=!ACXiNc9o0P19M4M&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38277&authkey=!ALqLOw8UEwXuRvY&width=2000&height=1500"></p>
<p>城门外就能看到大阪城中央的天守阁。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38278&authkey=!APi27tUvYXDjDh4&width=2000&height=1500"></p>
<p>银民水井户，据说是给老百姓用的水井，水特别清凉。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38279&authkey=!AOERO_9Wdo9EMtI&width=2000&height=1500"></p>
<p>四月春天，郁郁葱葱。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38280&authkey=!ANYd0o-O3nywS2s&width=2000&height=1500"></p>
<p>天守阁下不少游客拍照，我跟Eyama都没什么兴趣上去一探究竟，同时开始感到些许劳累，远远观望拍照就算来过了。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38281&authkey=!AMw0ME4TN7tSRPk&width=1500&height=2000"></p>
<p>天守阁边上有一栋小楼，包含纪念品商店、展览厅等设施。我们在里面休息片刻，便返程前往心斋桥的Ikebe琴行，中途当然免不了找自行车直至放弃🙃。</p>
<h2 id="04-22-日本逛琴行初体验"><a href="#04-22-日本逛琴行初体验" class="headerlink" title="04.22 日本逛琴行初体验"></a>04.22 日本逛琴行初体验</h2><p>逛琴行自然是我的提议，这次旅行我们接连考察了大阪和东京的Ikebe分店。在网上看了许久的逛琴行节目，并且经常能在闲鱼上刷到职业卖家在日本收得中古琴，我自然也想体验一把捡漏。于是乎提前在网上查到这家日本较大的连锁琴行，并在其官网看好几把电吉他等着线下验证。</p>
<p>IKebe心斋桥的分店略显拥挤。一楼是各种配件以及单块效果器，感觉价格并没有比国内便宜。最大的收获是见到一块售价三万多人民币（698000 JPY）的金马Klon，拍完才发现标价牌上写着 “No Picture”（抱歉！），就不放出来了。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38283&authkey=!AL68FZOCWUY1kus&width=2000&height=1500"></p>
<p>二楼是电木吉他区，都是一些比较亲民的型号，因此直接摆在外面。印象中还有一个被透明玻璃墙隔出来的小房间，里面则全是相对高端的电吉他，都是大牌，倒没什么罕见的款式。可能也是因为现在国内资讯发达，同时有钱人一多各种奇珍异宝都能出现在闲鱼上，我们这些玩家不知不觉跟着涨了许多见识。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38285&authkey=!AL7CNv7ggl74Wt4&width=2000&height=1500"></p>
<p>询问店员才知道官网页面上有信息说明某一把吉他在哪家分店，而我想看的几把都在东京，加上当下已经累了，第一次逛琴行就这样草草结束啦。</p>
<h2 id="04-22-从高分咖啡店到高分荞麦面店"><a href="#04-22-从高分咖啡店到高分荞麦面店" class="headerlink" title="04.22 从高分咖啡店到高分荞麦面店"></a>04.22 从高分咖啡店到高分荞麦面店</h2><p>我们早上离开酒店前已经办理了退房，行李则寄存在酒店，毕竟临近地铁晚上去大阪车站方便。回酒店之前我跟Eyama分开行动，他想吃点东西补充能量，而我想买杯咖啡休息一下。在Google Map上看到附近有家评分非常高的Mel Coffee，单程步行十分钟，此时已经不太走得动，犹豫片刻本着“来都来了”的指导思想还是冲了。</p>
<p>这家店门面不大，到的时候已经有几个人在排队，店员拿着菜单挨个询问客人点单。比较有趣的是菜单分日文和英文两种，店员看到我时一句话没问直接递给我英文版，犀利预判我不是日本人😆。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38287&authkey=!ANOtDsz0-5B6150&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38286&authkey=!APg8f6jEhsVWWpA&width=1500&height=2000"></p>
<p>我们在大阪遇到的绝大多数服务业者都几乎不懂英文，这家咖啡店也不例外。沟通不太顺利的情况下，我盲选了一手价格居中、名字最长（之一）的Guatamala El Platanillo Geisha。然而我不太能喝出咖啡的好坏，欣赏水平还停留在香醇微甜的“初级阶段”，因此很难评价这杯咖啡到底如何，印象中属于不难喝但也不好喝的那种。随咖啡还有一张卡片，介绍了这款咖啡的来头，就当喝个文化吧。最搞笑的是店员不懂英文但会几句汉语，可能没少接待中国游客哈哈。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38288&authkey=!AKWpDw7OXCoEBEk&width=1500&height=2000"></p>
<p>由于店里没有座位，我端着热腾腾的咖啡回到酒店，此时临近四点，Eyama早已饱食一顿回来。在酒店大厅休息到五点，我们拖着行李出发大阪车站，准确说是先去吃一家Tabelog高评分的荞麦面店后再去车站。</p>
<p>这家名为蕎斬的店在新地商业街的地下一层，门口只有一盏灯笼作为招牌，加上到得太早还没营业亮灯，我们丝毫没有发现店铺就在眼前 😅。同时这一层有好几家店的门上都贴着由“大阪府风俗环境净化协会”出具的未成年不得入内警示，我们一度怀疑找错了地方（这是什么日本电影的场景？！）。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38291&authkey=!ALgWHh96SC3WiSU&width=1500&height=2000"></p>
<p>回到一层后我们又询问了路过的工作人员，确认地址没错，正巧碰上荞麦面店员出来，我们才反应过来！店员也是顺便点亮招牌。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38297&authkey=!ALFNlL0yebjsoN4&width=1500&height=2000"></p>
<p>这家荞麦面店非常小，只有L字形两排座椅。但味道真的没话说，我俩点了三种口味的面分享，都没有踩雷。另外看到老板给隔壁桌客人倒乌龙茶，询问才知道是收费的，一杯居然要六百日元！“来都来了”，我也要了一杯，不得不说确实好喝。当下劝Eyama也来一杯，既然来消费就一次到位，结果他还是没舍得😂。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38293&authkey=!AKuVmirTtzIfXyc&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38294&authkey=!ALIfTwujixmsAlA&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38295&authkey=!ACDgyDDlU6sSOWM&width=2000&height=1500"></p>
<p>味道实在太棒，也因为中午的大阪烧没吃饱，我们又加点一碗面。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38296&authkey=!AFpbp3v78SpNQkU&width=2000&height=1500"></p>
<p>美食真的有治愈能力，如同前一晚，我们吃得很满足，也跟老板、隔壁桌大叔聊得很开心（主要靠Eyama蹩脚的日文和他们勉强能听懂一点英文LOL）。下次一定还来，还点乌龙茶 XDD</p>
<h2 id="04-22-夜间大巴-梦魇"><a href="#04-22-夜间大巴-梦魇" class="headerlink" title="04.22 夜间大巴&#x3D;梦魇"></a>04.22 夜间大巴&#x3D;梦魇</h2><p>荞麦面店离大阪车站非常近，只花一刻钟我们就拖着行李箱来到大阪车站的候车厅。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38298&authkey=!AJwvtz6XDkSjHO4&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38301&authkey=!AFDJn-acElt5Gx4&width=2000&height=1500"></p>
<p>这里就要介绍我们去东京搭乘的交通工具——夜间大巴。毫无疑问这是Eyama同学的提议，他看完网上的介绍后非常心动：一方面是新奇的体验，另一方面睡到东京可以省去一晚酒店钱。最初规划行程时，他在YouTube上找到旅行博主拍下的体验视频，看上去静谧舒适，我承认我也动心了。但考虑到大巴座椅无法完全放倒，以及在台湾多次乘坐长途大巴的经验，总感觉实际不会像视频里表现得那么舒服。我坚持去东京时体验一次即可，回程必须新干线。事实证明我的担忧是正确的，视频里看起来的舒适都是假象，除了拥挤的座椅很难翻身外，最致命的是大巴隔音非常差，吵得人难以入睡。</p>
<p>之前有提到，今天本就异常疲惫，加之被晒伤，上车前我已经开始头晕，还以为是发烧。原本计划在候车厅再喝点小酒吃个宵夜，我也毫无胃口只能喝点热饮。这一夜简直折磨，以致于到东京站我选择直接打车去酒店，希望能早点休息。但是并没能如愿，这是后话。</p>
<p>我们到大阪站候车厅时才七点，Eyama决定先去附近的商场为他女朋友看下Cocah包，我直接蔫了吧唧地待在候车厅玩手机。等他回来后我们去车站隔壁的便利店买了点宵夜，我顺便买了支牙刷，一会上车前刷牙、用漱口水。这只牙膏回国时因为忘了托运，还被安检人员收走了🙂。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38299&authkey=!AE_X_FXfnrO-1Kk&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38300&authkey=!AJUJiB5FlVXj1aM&width=1500&height=2000"></p>
<p>十点五十左右，候车厅广播和电视屏幕开始通知上车。上车前把行李箱交给工作人员后会给你一张凭证，下车时需要凭这张票领行李箱，很靠谱的小细节。我们的车票是在网上提前预订的，上车时直接向工作人员出示电子票据即可。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38303&authkey=!AE9GIEqj6kRAD2Q&width=1500&height=2000"></p>
<p>这就是我今晚的“床铺”，毛毯、眼罩等细节其实很不错，但大巴发动之后的噪音实在是太恼人。另外座位本身也不大，我都觉得略窄，何况身材更高大的Eyama。并且当你前面的人放倒座椅后，会占用你腿部上方的空间，也就是说前面人的躺下后你也得跟着躺下，不然会被挤得动弹不得。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38304&authkey=!AFR3CEEwmD0NgA0&width=1500&height=2000"></p>
<p>没有办法，就算预料到今夜无眠，也只能选择坐下。伴随着头痛和浑身酸疼，我想这可能是人生中最后一次乘坐夜间大巴。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38305&authkey=!AApzYpOCgPaMEmA&width=1500&height=2000"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38514&authkey=!AKQRGW1G-pt2Dl8&width=1080&height=2316"></p>
<h2 id="04-23-品川豪宅小憩"><a href="#04-23-品川豪宅小憩" class="headerlink" title="04.23 品川豪宅小憩"></a>04.23 品川豪宅小憩</h2><p>早上七点夜间大巴准时抵达东京站，此时的东京站已是人来人往。我在大巴上大概只睡了三四个小时，下车的那一刻整个人都是飘的，脸也依然很烫。Eyama本想坐地铁去酒店，我实在是扛不住，直接说去打车算我的。我们在东京的两天都住在丰洲市场附近的日航旗下酒店Hotel JAL City Tokyo Toyosu，主要原因是Eyama想一大早冲去丰洲市场逛吃海产，这家酒店步行十分即可。此外从地图上看酒店到品川区的直线距离不远，去拜访微软和谷歌的办公室应该还算方便。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38306&authkey=!ACr5af2MRek3-6o&width=2000&height=1500"></p>
<p>日本的出租车都开得很快，大约一刻钟便到酒店。只可惜酒店前台告知无法提前入住，看起来生意确实很好，大堂过往的住客非常多。或许受疫情和签证的影响，在大量国人暂时无法前往日本旅游的当下，我们观察到最多的外国游客是韩国人，无论在大阪的道顿掘、大阪城还是江东区的这家酒店以及附近的地铁站。酒店大堂旁就是餐厅，一大早自然吵闹得很，坐在大堂的椅子上想睡也睡不着。萎靡地坐到八点多，我让Eyama先出去玩，我看着行李等入住，反正以现在的身体状况今天肯定是废掉了。不过Eyama也是在大厅找了个角落玩手机，除了关心我之外，虽然嘴上说夜间大巴睡得还行，其实同样累得够呛，从他后面两天不太能走很久就看得出😉。</p>
<p>大概到了十点，救星Lq大佬登场！</p>
<p>Lq是我们组北京的前同事，当年因为交接DRI工作逐渐熟络起来。后来她离职去了Google Tokyo，又因疫情滞留在上海办公一段时间，来苏州面基吃饭赏湖景，大家结下深厚友谊。去年上海放开之后她终于办理好手续登陆东京，这次来前也约好请她带我们参观谷歌的办公室。</p>
<p>在微信上跟她说明情况之后，她表示可以去她家休息，她去公寓的自习室学习（准备日语考试）。这对我来说无疑是救命稻草，立马出发，Eyama也跟我一起坐公交去市区吃东西。这里还有个小插曲，到大阪的第一天取完现金后我要分给Eyama，他表示没带小包不方便装钱，况且绝大多数时间都是一起行动没必要。结果他中午在一家人气小店排了很长的队伍后发现店家只收现金，欲哭无泪。</p>
<p>Lq住在五反田附近，公交车坐到中央区后再转地铁。高轮台地铁站，看起来有些年头。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38309&authkey=!AIPIKdzA-j8S6EQ&width=1500&height=2000"></p>
<p>从五反田地铁出来后还要走小十分钟，环境不错，据Lq说这一带是日本old money的居住区。嗯，所以她也是old money XD</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38310&authkey=!AFVBWjtC77GVtGU&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38311&authkey=!ALifW5320Dz8YgE&width=1500&height=2000"></p>
<p>高档公寓，我的最爱。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38312&authkey=!ANCGq-x89v1kKNQ&width=1963&height=1472"></p>
<p>Lq戴着口罩从大楼侧门出现，一时间竟没认出来。简单介绍完屋内设施之后她就光速撤离，值得一提的是她提前换了一套新的床单被套，简直不要太贴心！大佬的豪宅也令人印象深刻，简约但不简单，尤其是超大阳台，直接全体起立。租金每月大概一万人民币，并且有政府和公司的政策支持可以计入减税，只能说太值了。可能是我要求低，觉得屋子看起来没有问题，但Lq表示很乱，按照她的要求浅浅码一下地上的物品（桌下那个豆沙包太可爱所以放过它）。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38516&authkey=!AGWedR8ciIjmkBU&width=2000&height=1500"></p>
<p>家人们，肥仔的快乐，谁懂啊。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38319&authkey=!ACJJrZ9uyXLtgjU&width=2000&height=1500"></p>
<p>马桶上的洗手池设计非常巧妙，冲完马桶后洗手水直接加入水箱，这很环保。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38316&authkey=!APZIaClJ4sVlG98&width=1500&height=2000"></p>
<p>昨天走了那么久，又在车上睡了一夜，自然洗个澡再睡觉。拿衣服时发现书包里还装着昨晚因为不舒服没喝的酒精饮料，悄咪咪放进了Lq家的冰箱👻。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38318&authkey=!AJfvflaC_IMuKS8&width=1500&height=2000"></p>
<p>眼睛一闭一睁已经快两点，其实只睡了两个多小时，但感觉活了过来。睡前就定好闹钟，因为晚上跟Eyama的东京朋友们约了网红烤肉店，午饭也不能太晚吃。Lq带我去附近的商场吃了烤牛舌套餐，味道不错，不过聊天才是重点。年初做新项目一直加班，跟她同步了组里的近况，也听她分享了一些现在团队的见闻。吃饭时还有个打扮精致的日本小姐姐似乎在面试，难道是来应聘服务员？</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38320&authkey=!AInyBE3Xm2fGt0I&width=2000&height=1500"></p>
<h2 id="04-23-台湾烤肉YYDS"><a href="#04-23-台湾烤肉YYDS" class="headerlink" title="04.23 台湾烤肉YYDS"></a>04.23 台湾烤肉YYDS</h2><p>东京这两天有点降温，吃完饭想说去旁边的优衣库看看外套，结果一进门就看到穿着西装的模特，不愧是日本啊哪里都在卖工作服。在咖啡店坐到四点一刻，Eyama说他们已经到烤肉店门口排队，我们可以出发过去。即使排得那么早，我们也等到六点才上桌，真的非常夸张！</p>
<p>烤肉店在足立区，略偏远，我们地铁转出租车一小时才到。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38323&authkey=!ANGNe2GJKsMPKqg&width=2000&height=1500"></p>
<p>Tabelog评分高达4.25的Sutaminaen烤肉店，老板娘是台湾人，所以菜品里还有卤肉饭。久违的台湾烤肉😭！</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38324&authkey=!ACnLZn3kPB4KF6s&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38338&authkey=!ANjjrL3kua8ELIk&width=2000&height=1500"></p>
<p>菜还没上，那么先干杯吧🍻~ Eyama的几位朋友都是中国人，来自天南地北，职业背景也各不相同。据说他们在一位旅居日本的美食博主的微信群里结识，那位美食博主给这家店打过广告，几位朋友中也有认识老板娘的常客，因此送了我们不少菜品。感恩~</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38326&authkey=!ACwpIuzmnDNywXs&width=2000&height=1500"></p>
<p>这一顿吃肉根本停不下来，开玩笑跟Eyama的朋友“控诉”，前两天他都只带我吃碳水，想吃肉想哭了哈哈。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38327&authkey=!APXJeokDephICA8&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38328&authkey=!AIzRmX6Pcwc3VSE&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38329&authkey=!ABTvpway8MJgmy4&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38330&authkey=!AHJnNU_S_EJrTCg&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38331&authkey=!AP0zVFowPXmnAsk&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38333&authkey=!AMhR7mtI40OgU1Y&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38334&authkey=!AB4yqDWf9GvE9Yw&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38335&authkey=!AAT-a9aNcy0vzKU&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38337&authkey=!APeurzxaDChywwc&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38339&authkey=!AAfhFEqHn7FECzo&width=2000&height=1500"></p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38341&authkey=!AEJAoS4F-Ezyazk&width=2000&height=1500"></p>
<p>酒足饭饱走出烤肉店，想起台湾中秋节吃烤肉的习俗，抬头看了看今晚的月亮。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38517&authkey=!AIJbeRUdpNhXixg&width=3000&height=4000"></p>
<h2 id="04-23-终于入住酒店"><a href="#04-23-终于入住酒店" class="headerlink" title="04.23 终于入住酒店"></a>04.23 终于入住酒店</h2><p>饭后Eyama跟朋友们去KTV唱歌，我送Lq回家顺便拿包，再搭地铁回酒店办理入住。在五反田坐车时体会到了东京地铁的复杂，也可能是累傻了，先是想到大崎转乘临海线不知怎么坐到了户越银座，折返回去坐临海线又等了好久一班才发车。折腾了快两小时才到酒店。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38343&authkey=!AMfFUgSYdEMvETE&width=2000&height=1500"></p>
<p>临海线到国际展示场后，还得出站步行五分钟转乘R线（Rinkai Line）再坐三站。不过第一次搭乘熟悉之后，我们第二天再去品川便轻车熟路。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38344&authkey=!AHYWMDJnjqTy5E4&width=2000&height=1500"></p>
<p>我们住得是日航酒店的标间，设施很新，也很整洁，就是不出意料的面积不大，好在我们也只是回来睡个觉。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38346&authkey=!APPOykDWdtV-VY8&width=2000&height=1500"></p>
<p>吃完烤肉一身味道，正好酒店房间内有备除臭喷雾，试了下效果非常好，可谓是解决了我的“痒点”。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38417&authkey=!ALHpioX79eDQn-Q&width=1500&height=2000"></p>
<p>哦对了，约Lq和Eyama的朋友们一起聚餐还有一个原因，那就是要找她拿之前在日本网络平台购买得Eric Clapton的演唱会门票。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38348&authkey=!AO_oriBNfA9geRg&width=2000&height=1500"></p>
<p>走前Lq还顺手送我一份伴手礼，说是她出去旅游时买的，看着很像农副产品，回国后才知道是类似徐福记的煎饼，很香的小零嘴。</p>
<p><img data-src="https://onedrive.live.com/embed?resid=7A756318060FAEEC!38349&authkey=!AFB5Q-2_SO-_K9s&width=1500&height=2000"></p>
<p>受特种兵行程拖累的一天总算要结束，见到老朋友以及烤肉吃到饱都十分开心。后面的节奏终于回归正常，明天将参观微软东京办公室、逛琴行并观看吉他之神老克的演唱会。</p>
<h2 id="下一集"><a href="#下一集" class="headerlink" title="下一集"></a>下一集</h2><p>《<a href="https://joouis.com/2023/my-first-trip-to-japan-3/">2023大阪东京走马观花五日流水账（下）</a>》</p>
]]></content>
      <categories>
        <category>人生游记</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>travel</tag>
        <tag>holiday</tag>
        <tag>food</tag>
        <tag>japan</tag>
        <tag>okasa</tag>
        <tag>tokyo</tag>
      </tags>
  </entry>
  <entry>
    <title>小练习：通过反汇编一段C代码观察栈行为</title>
    <url>/2019/observe-stack-behavior-by-disassembling-a-simple-c-code/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2019/watching-notes-revolution-os/">嵌入式笔记</a>第二篇，原文写于2015年。</p>
<p>深入了解计算机的底层行为是软件工程师的内功之一，有助于理解程序代码是如何被执行的。本文的练习小而完整，不需要太多背景知识，因此摘选出来与大家分享。</p>
<span id="more"></span>



<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><ul>
<li>在學習Linux kernel分析的基礎課程時有分析到C代碼執行時stack的行爲，那麼這裏做一個最簡單的實驗，通過把C代碼反彙編成ASM代碼，來看堆棧的操作情況。</li>
<li>備註：<ul>
<li>直接用的<strong>64-bit</strong>環境，<code>gcc -S -o main.s main.c</code>（因爲網路大多都是32-bit的分析，照做沒新意）</li>
<li>也可以用GDB來看，覺得有點殺雞用牛刀XDD</li>
</ul>
</li>
</ul>
<h2 id="源代碼和編譯出來的代碼"><a href="#源代碼和編譯出來的代碼" class="headerlink" title="源代碼和編譯出來的代碼"></a>源代碼和編譯出來的代碼</h2><ul>
<li>源代碼：<br><img data-src="https://cdn.joouis.com/observe-stack-behavior-by-disassembling-a-simple-c-code-1.png"></li>
<li>反編譯出來的代碼（64-bit）：<br><img data-src="https://cdn.joouis.com/observe-stack-behavior-by-disassembling-a-simple-c-code-2.png"></li>
</ul>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ul>
<li>首先，可以看到一件事是：編譯出來的組合語言是32-bit和64-bit混合的，應該是針對寄存器的bit不同指令做的相應的使用。</li>
<li>指令從第14行開始也就是main函數第一條指令開始執行，首先是把<code>%rbp</code>寄存器的值壓入棧內，保存當前工作的棧基指。</li>
<li>接着把<code>rsp</code>的地址賦給<code>rbp</code>，含義是初始化一個新的stack。</li>
<li>第16行是預設的空間，GCC下<code>-O1</code>指令似乎可以優化。</li>
<li>第17、18行將<code>a(1,2)</code>中的兩個參數分別存到<code>esi</code>和<code>edi</code>寄存器中，這個地方需要說明的是X86-32中會使用push將實參存入stack內，如下圖（原<code>main.c</code>反編譯成 32-bit ASM 代碼）：<br><img data-src="https://cdn.joouis.com/observe-stack-behavior-by-disassembling-a-simple-c-code-3.png"><ul>
<li>而在 x86-64 中，如果參數在6個以內，GCC 就可以利用寄存器來存儲參數值；超過6個的參數，還是通過上述操作實現，這裏給我們了至少兩個啓發：<ul>
<li>儘量使用6個以下的參數列表。</li>
<li>傳大的數值時儘量使用指針或引用，因爲寄存器只有64位並且只能存整形數值。</li>
</ul>
</li>
</ul>
</li>
<li>然後就呼叫<code>a</code>函數了，call其實也分爲兩個動作：<ul>
<li>第一個是把當前<code>rip</code>的值保存。</li>
<li>把<code>a</code>函數的指令初始地址給<code>rip</code>。</li>
</ul>
</li>
<li><code>a</code>函數也是同理，先保存當前的<code>rbp</code>然後初始化新的stack。</li>
<li>第4、5行，就將保存在<code>esi</code>和<code>edi</code>內的值按順序放入<code>-24(%ebp)</code>和<code>-20(%ebp)</code>內。這可以說明，<strong>在X86-64中，實參入棧和賦值給形參都是在子函數代碼段完成的</strong>。</li>
<li>第6到8行就是從stack中取出參數到通用寄存器完成加法運算。</li>
<li>第9、10行是算出的值會先從<code>eax</code>存到<code>-4(%rbp)</code>，即給tmp變量賦值。</li>
<li>然後再將<code>tmp</code>的值給<code>eax</code>寄存器，函數的返回值默認使用<code>eax</code>寄存器返回給上一級函數。</li>
<li>第11行將<code>rbp</code>出棧，然後第12行ret就是把之前保存的<code>rip</code>出棧。</li>
<li>回到第20行指令，將<code>eax</code>的值給<code>-4(%rbp)</code>，也就是給變量i。</li>
<li>爲了<code>return 0</code>把0給<code>eax</code>。</li>
<li>因爲是main函數，所以最後是leave（leave: Releases the local stack storage created by the previous ENTER instruction.）。</li>
</ul>
<h2 id="流程圖"><a href="#流程圖" class="headerlink" title="流程圖"></a>流程圖</h2><p><img data-src="https://cdn.joouis.com/observe-stack-behavior-by-disassembling-a-simple-c-code-4.png"></p>
<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul>
<li><a href="http://www.searchtb.com/2013/03/x86-64_register_and_function_frame.html">http://www.searchtb.com/2013/03/x86-64_register_and_function_frame.html</a></li>
<li><a href="http://en.wikipedia.org/wiki/X86_instruction_listings">http://en.wikipedia.org/wiki/X86_instruction_listings</a></li>
</ul>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system course</tag>
        <tag>stack</tag>
        <tag>assembly</tag>
        <tag>disassemble</tag>
        <tag>c</tag>
        <tag>gcc</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 笔记</title>
    <url>/2017/mysql-note/</url>
    <content><![CDATA[<p>这是一篇关于 MySQL 的语法笔记，主要供自己和新手们查看。</p>
<span id="more"></span>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>写在最前面…当然是不要重复造轮子！做笔记也是如此！So ~ 先引用一发：</p>
<ul>
<li><strong><a href="http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html">21分钟 MySQL 入门教程</a></strong></li>
</ul>
<h2 id="遣词造句"><a href="#遣词造句" class="headerlink" title="遣词造句"></a>遣词造句</h2><p>像翻译英语句子一样来记录语法。</p>
<h4 id="按用户名查询用户的所有昵称"><a href="#按用户名查询用户的所有昵称" class="headerlink" title="按用户名查询用户的所有昵称"></a>按用户名查询用户的所有昵称</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(nick) <span class="keyword">FROM</span> TABLE_SAMPLE <span class="keyword">WHERE</span> name <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> name <span class="keyword">FROM</span> TABLE_SAMPLE <span class="keyword">GROUP</span> <span class="keyword">BY</span> name)</span><br></pre></td></tr></table></figure>

<h4 id="按月以及平台查询用户数"><a href="#按月以及平台查询用户数" class="headerlink" title="按月以及平台查询用户数"></a>按月以及平台查询用户数</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">DATE_FORMAT(<span class="type">time</span>, <span class="string">&#x27;%Y-%m&#x27;</span>) months, <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span>(uid)) <span class="keyword">AS</span> user_count</span><br><span class="line"><span class="keyword">FROM</span> TABLE_SAMPLE <span class="keyword">GROUP</span> <span class="keyword">BY</span> months, platforms</span><br></pre></td></tr></table></figure>

<h4 id="查询时间单位的数据总和"><a href="#查询时间单位的数据总和" class="headerlink" title="查询时间单位的数据总和"></a>查询时间单位的数据总和</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 每分钟</span><br><span class="line">SELECT</span><br><span class="line">SUM(data) AS sum</span><br><span class="line">FROM TABLE_SAMPLE GROUP BY YEAR(time), MONTH(time), DAY(time), HOUR(time), MINUTE(time)</span><br><span class="line"></span><br><span class="line"># 每10分钟</span><br><span class="line">SELECT</span><br><span class="line">SUM(data) AS sum</span><br><span class="line">FROM TABLE_SAMPLE GROUP BY YEAR(time), MONTH(time), DAY(time), HOUR(time), FLOOR(MINUTE(time)/10)</span><br><span class="line"></span><br><span class="line"># 每小时</span><br><span class="line">SELECT</span><br><span class="line">SUM(data) AS sum</span><br><span class="line">FROM TABLE_SAMPLE GROUP BY YEAR(time), MONTH(time), DAY(time), HOUR(time)</span><br><span class="line"></span><br><span class="line"># 后面依此类推...</span><br></pre></td></tr></table></figure>

<h4 id="查询每小时的数据总和"><a href="#查询每小时的数据总和" class="headerlink" title="查询每小时的数据总和"></a>查询每小时的数据总和</h4><h4 id="一次查询里查询多样数据"><a href="#一次查询里查询多样数据" class="headerlink" title="一次查询里查询多样数据"></a>一次查询里查询多样数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">(<span class="keyword">SELECT</span> uid <span class="keyword">FROM</span> TABLE_SAMPLE_1 <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;我最帅&#x27;</span>) <span class="keyword">AS</span> uid,</span><br><span class="line">(<span class="keyword">SELECT</span> height <span class="keyword">FROM</span> TABLE_SAMPLE_2 <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;我最帅&#x27;</span>) <span class="keyword">AS</span> height</span><br></pre></td></tr></table></figure>

<h4 id="一次更新多条数据"><a href="#一次更新多条数据" class="headerlink" title="一次更新多条数据"></a>一次更新多条数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> TABLE_SAMPLE</span><br><span class="line"><span class="keyword">SET</span> credit <span class="operator">=</span> credit <span class="operator">+</span> <span class="keyword">CASE</span></span><br><span class="line">  <span class="keyword">WHEN</span> name <span class="operator">=</span> <span class="string">&#x27;我最帅&#x27;</span> <span class="keyword">THEN</span> <span class="number">1000</span></span><br><span class="line">  <span class="keyword">WHEN</span> name <span class="operator">=</span> <span class="string">&#x27;我不帅&#x27;</span> <span class="keyword">THEN</span> <span class="number">0</span> <span class="keyword">END</span>,</span><br><span class="line">  <span class="type">time</span> <span class="operator">=</span> <span class="built_in">CURRENT_DATE</span></span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">IN</span> (<span class="string">&#x27;我最帅&#x27;</span>, <span class="string">&#x27;我不帅&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="一次插入多条数据"><a href="#一次插入多条数据" class="headerlink" title="一次插入多条数据"></a>一次插入多条数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TABLE_SAMPLE (name, credit)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;我最帅&#x27;</span>, <span class="number">1000</span>), (<span class="string">&#x27;我不帅&#x27;</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure>


<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul>
<li>字串存在： <code>LOCATE(你要查的字符串，对应的域) &gt; 0</code></li>
<li>字串连接：<code>CONCAT(STR1, STR2, ...)</code> ， <code>CONCAT_WS</code> 第一个参数是分隔符</li>
<li>时间：<code>FROM_UNIXTIME</code> 和 <code>UNIX_TIMESTAMP</code></li>
<li>查看倒数第 20 到 30 笔数据：<code>ORDER BY id DESC LIMIT 20, 30</code></li>
<li>日期：<code>CURDATE() = DATE(NOW())</code></li>
</ul>
]]></content>
      <categories>
        <category>笔记小抄</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>note</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Online notes of John Chou</title>
    <url>/2016/online-notes-of-john-chou/</url>
    <content><![CDATA[<h1 id="公开课学习笔记"><a href="#公开课学习笔记" class="headerlink" title="公开课学习笔记"></a>公开课学习笔记</h1><hr>
<h2 id="Operating-Systems"><a href="#Operating-Systems" class="headerlink" title="Operating Systems"></a>Operating Systems</h2><ul>
<li>From: <a href="https://www.coursera.org/course/os">Coursera</a></li>
<li>Instructor：Chen Xiangqun (Peking University)</li>
<li>Lang：Simplified Chinese</li>
<li>State：12 &#x2F; 12</li>
<li><a href="https://hackpad.com/Operating-Systems-QPGckPU3RdZ">Note</a><span id="more"></span></li>
</ul>
<h1 id="Jserv-指导的嵌入式课程"><a href="#Jserv-指导的嵌入式课程" class="headerlink" title="Jserv 指导的嵌入式课程"></a>Jserv 指导的嵌入式课程</h1><hr>
<h2 id="Embedded-Graphics"><a href="#Embedded-Graphics" class="headerlink" title="Embedded Graphics"></a>Embedded Graphics</h2><ul>
<li><a href="https://paper.dropbox.com/doc/Embedded-Graphics-Entry-cVe71Nm0Kk8OLJlN6Gst2">Entry</a></li>
</ul>
<h2 id="课程资料"><a href="#课程资料" class="headerlink" title="课程资料"></a>课程资料</h2><ul>
<li><a href="http://wiki.csie.ncku.edu.tw/">WIKI</a></li>
<li><a href="https://charles620016.hackpad.com/2015--9ltlOMDQHF5">2015 嵌入式系统课程资料整理</a></li>
<li><a href="https://embedded2015.hackpad.com/-C--ThcIjpAhRuO">「你所不知道的 C 语言」系列讲座</a></li>
<li><a href="https://jservsummer2015.hackpad.com/8cFyQFQDI7A">计算机组织结构</a></li>
<li><a href="https://stm32f429.hackpad.com/NOTE-WbiooOfkaoR">环境搭建</a></li>
</ul>
<h2 id="2015-Q1-Q2"><a href="#2015-Q1-Q2" class="headerlink" title="2015 Q1-Q2"></a>2015 Q1-Q2</h2><ul>
<li><a href="https://embedded2015.hackpad.com/PITFzQ3GhbH">Week 2</a>：环境搭建、ARM Architecture</li>
<li><a href="https://embedded2015.hackpad.com/Week3--Ss4svVnH2ux">Week 3</a>：FreeRTOS</li>
<li><a href="https://embedded2015.hackpad.com/Week4--OpKQXepPhau">Week 4</a>：Visualization for scheduling</li>
<li><a href="https://embedded2015.hackpad.com/NoteWeek5-MlgKnMDHw4C#:h=%E8%A8%B1%E5%AF%8C%E7%9A%93%E6%95%99%E6%8E%88%E7%9A%84-Linux-%E6%A0%B8%E5%BF%83%E6%95%99%E6%9D%90">Week 5</a>：许富皓教授的 Linux 核心教材</li>
<li><a href="https://embedded2015.hackpad.com/Week-7-8--ID8HJ3uW0MO">Week 7 &amp; Week 8</a>：STM32程序开发：以GNU Toolchain为例、Mini ARM OS</li>
<li><a href="https://embedded2015.hackpad.com/Week-9-GDB-CGDB-pflT0kcqaIY#:h">Week 9</a>：GDB &amp; CGDB 使用</li>
<li>RT-Thread：<ul>
<li><a href="http://wiki.csie.ncku.edu.tw/embedded/rt-thread">Wiki</a></li>
<li><a href="https://rt-thread.hackpad.com/RT-Thread-on-Beaglebone-Black-i93C7gRxZuW">Hackpad</a></li>
</ul>
</li>
<li><a href="https://embedded2015.hackpad.com/Disassemble-a-simple-C-code-to-analyse-the-stack-behavior-euHF5qBGSaM">Addition</a>：Disassemble a simple C code to analyse the stack behavior</li>
</ul>
<h2 id="2015-Q3-Q4"><a href="#2015-Q3-Q4" class="headerlink" title="2015 Q3-Q4"></a>2015 Q3-Q4</h2><ul>
<li><a href="https://embedded2015.hackpad.com/Week1--33Vj9rizmv2">HW_1</a>：GNUPlot、GProf、SIMD</li>
<li><a href="https://embedded2015.hackpad.com/Week2--4z5TKk8W9ML">HW_2</a>：Assert、ARM Architecture、Perf、Phonebook 搜寻</li>
<li><a href="https://embedded2015.hackpad.com/Week3--QTwzZuTz35V">HW_3</a>：Quiz from Leetcode</li>
<li><a href="https://embedded2015.hackpad.com/Week5--dxQlPW2CwLi">HW_4</a>：Calling convention、Compiler 基础</li>
<li><a href="https://embedded2015.hackpad.com/Week6--YxRcynvEYAK">HW_5</a>：补全之前的作业</li>
<li><a href="https://embedded2015.hackpad.com/Week7--6mVDBogdssM">HW_6</a>：基础理论</li>
<li><a href="https://embedded2015.hackpad.com/Week8--VGN4PI1cUxh">HW_7</a>：SIMD(SSE, AVX)、prefetch</li>
<li><a href="http://wiki.csie.ncku.edu.tw/embedded/2015q3h9">HW_9</a>：阅读资料、提出问题 (GPIO&#x2F;ADC&#x2F;USART&#x2F;SPI&#x2F;Flash&#x2F;I2C&#x2F;USB)</li>
<li><a href="http://wiki.csie.ncku.edu.tw/User/Joou">HW_10</a>：个人简历</li>
<li><a href="https://hackpad.com/8gIhwyW2swE">补考</a></li>
<li>μVisor:<ul>
<li><a href="http://wiki.csie.ncku.edu.tw/embedded/team2015-10">WIKI</a></li>
<li><a href="https://embedded2015.hackpad.com/uVisor-Uv1A8aXk1DM">Hackpad</a></li>
</ul>
</li>
</ul>
<h1 id="通用笔记"><a href="#通用笔记" class="headerlink" title="通用笔记"></a>通用笔记</h1><hr>
<h2 id="面试相关"><a href="#面试相关" class="headerlink" title="面试相关"></a>面试相关</h2><ul>
<li><a href="https://hackpad.com/vUn4TbzLTCj#:h=%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F">面试题目</a></li>
<li><a href="https://paper.dropbox.com/doc/1Inc6vxQ6pYdIUvWzPOwx">嵌入式的面試題</a></li>
</ul>
]]></content>
      <categories>
        <category>笔记小抄</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>note</tag>
        <tag>embedded</tag>
        <tag>CS</tag>
        <tag>collaborate</tag>
      </tags>
  </entry>
  <entry>
    <title>论一个倒计时器的性能优化之路</title>
    <url>/2018/optimization-road-of-count-down-timer/</url>
    <content><![CDATA[<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>回顾这半年，扛需求能力越来越强，业务代码也是越写越多。但稍一认真看看这些当时为了满足快速上线所码的东西，问题其实还是不少。这次就从一个简单的计时器说起。</p>
<span id="more"></span>

<h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><h3 id="问题很明显"><a href="#问题很明显" class="headerlink" title="问题很明显"></a>问题很明显</h3><p>倒计时器组件在一个活动列表页面里被使用，列表中每一项都是一个促销活动入口。倒计时器位于每个活动区块的左上方，提醒用户该活动还有多久结束，如下动图所示（测试设备 SONY E5663，后同）。</p>
<p><img data-src="https://cdn.joouis.com/optimization-road-of-count-down-timer-1.gif"></p>
<p>当页面滑动时，可以明显看到计时器停止，这意味着页面并没有刷新。直到松手后一两秒才恢复计时，且不稳定，又卡顿了一到两秒。</p>
<p>如此明显的问题吓得笔者赶紧去后台查阅了该页面 PV 和 UV 数据，虽说不多，但还是有一批忠实用户每天访问，这可怎么对得起我们的衣食父母…！即便测试用的设备性能羸弱，更换 Chrome 模拟器以及 17 年的安卓旗舰机再次测试并未出现如此卡顿现象，但我们无法挑选客户使用的设备，只能从技术角度解决问题，尽量提升用户体验。BTW，这台 SONY 测试机就是由东南亚的业务方同学提供，应该是当地用户的常用机型之一。</p>
<h3 id="打脸与自我打脸"><a href="#打脸与自我打脸" class="headerlink" title="打脸与自我打脸"></a>打脸与自我打脸</h3><p>倒计时器组件的更新逻辑抽象如下，简单概括就是使用 <code>setInterval</code> 定时更新 React 组件的状态以实现倒数时间的更新：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Original version */</span></span><br><span class="line"><span class="title function_">componentWillMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">timer</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> toUpdate = <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">list</span>.<span class="title function_">slice</span>();</span><br><span class="line">      <span class="keyword">if</span> (toUpdate.<span class="property">length</span>) &#123;</span><br><span class="line">        toUpdate.<span class="title function_">forEach</span>(<span class="function"><span class="params">i</span> =&gt;</span> &#123;</span><br><span class="line">          i.<span class="property">leftTime</span> = <span class="title class_">Tools</span>.<span class="title function_">getLastTime</span>(i.<span class="property">endTime</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">list</span>: toUpdate &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>不得不说，贴出这么一段槽点满满的代码是极其需要勇气的，这…居然是我写的？</p>
<p><img data-src="https://cdn.joouis.com/optimization-road-of-count-down-timer-2.jpg"></p>
<p>那么开始分（tu）析（cao）吧，让我们自上而下依次盘点：</p>
<ol>
<li>这段逻辑代码放在 <code>componentWillMount</code> 生命周期钩子里执行并不合适，其因有二：在 <code>componentWillMount</code> 阶段还未加载真实的 DOM 节点，此时就开始更新数据没有什么意义；React 的 Reconciliation 算法以及目前最新的 Fiber 调度器算法会对渲染的开始或停止过程进行优化，例如合并几次渲染过程为一次，这可能会导致 <code>componentWillMount</code> 被频繁调用。</li>
<li>每次更新数据后都将触发一次渲染 SOP，这无疑加大了性能开销。当动画刷新遇上大量运算，一首《凉凉》送给低端手机。</li>
<li>这样计时方式真的准吗？例如 <code>setInterval</code> 的精准性，又例如 <code>setState</code> 方法的使用。</li>
</ol>
<p>顺着这个思路，赶紧来改代码吧！</p>
<h2 id="提升更新效率"><a href="#提升更新效率" class="headerlink" title="提升更新效率"></a>提升更新效率</h2><h3 id="更新速度有多慢？"><a href="#更新速度有多慢？" class="headerlink" title="更新速度有多慢？"></a>更新速度有多慢？</h3><p>首先花几秒钟把这段代码挪到 <code>componentDidMount()</code> 钩子里。</p>
<p>接下来，既然页面在 MBP 的 Chrome 模拟器上访问没有问题，那么可以做个简单的对比实验，看看手机与笔记本模拟器的性能差距。使用 <code>performance.now</code> 测量更新一次所花费的时间，示例代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* First version, profile the performance */</span></span><br><span class="line"><span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">timer</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> startT = performance.<span class="title function_">now</span>();</span><br><span class="line">      <span class="keyword">const</span> toUpdate = <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">list</span>.<span class="title function_">slice</span>();</span><br><span class="line">      <span class="keyword">if</span> (toUpdate.<span class="property">length</span>) &#123;</span><br><span class="line">        toUpdate.<span class="title function_">forEach</span>(<span class="function"><span class="params">i</span> =&gt;</span> &#123;</span><br><span class="line">          i.<span class="property">leftTime</span> = <span class="title class_">Tools</span>.<span class="title function_">getLastTime</span>(i.<span class="property">endTime</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">list</span>: toUpdate &#125;, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">		  <span class="keyword">const</span> endT = performance.<span class="title function_">now</span>();</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Actually end:&#x27;</span>)</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(endT - startT);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">const</span> seemsEndT = performance.<span class="title function_">now</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Seems end:&#x27;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(seemsEndT - startT);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从下方两张截图可以看到测试机与模拟器的性能相差十倍左右，且测试机的运算时间波动较大（下方上图为模拟器数据，下图为测试机数据）：</p>
<p><img data-src="https://cdn.joouis.com/optimization-road-of-count-down-timer-3.png" alt="模拟器数据"></p>
<p><img data-src="https://cdn.joouis.com/optimization-road-of-count-down-timer-4.png" alt="测试机数据"></p>
<p>其实上面的埋点代码添加在 <code>setState</code> 的回调函数里，就明显能说明一个问题：<code>setState</code> 方法并不保证同步渲染更新，尽管截图中的时序看上去是同步的。</p>
<p>重点是，整个更新渲染的周期非常长，即使降低至 30Hz 的流畅画面要求，一帧可用的渲染时间也只有不到 34 毫秒，还不是业务代码独享！ 之所以渲染速度慢，是因为调用一次 <code>setState</code> 方法会依次执行 React 生命周期中的 4 个函数：<code>shouldComponentUpdate</code>、<code>componentWillUpdate</code>、<code>render</code> 和 <code>componentDidUpdate</code> （如下图所示）。</p>
<p><img data-src="https://cdn.joouis.com/optimization-road-of-count-down-timer-5.png" alt="Source: https://bit.ly/2Pb6sn5"></p>
<h3 id="直接撸-DOM，要啥-jQuery"><a href="#直接撸-DOM，要啥-jQuery" class="headerlink" title="直接撸 DOM，要啥 jQuery"></a>直接撸 DOM，要啥 jQuery</h3><p>为了性能，这里采用最为简单粗暴的方法，直接更新 DOM 节点的 HTML 值：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Second version, operate DOM directly instead of setState() */</span></span><br><span class="line"><span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">timer</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> startT = performance.<span class="title function_">now</span>();</span><br><span class="line">      <span class="keyword">const</span> toUpdate = <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">list</span>.<span class="title function_">slice</span>();</span><br><span class="line">      <span class="keyword">if</span> (toUpdate.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> nodes = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.count-down-timer&#x27;</span>);</span><br><span class="line">        toUpdate.<span class="title function_">forEach</span>(<span class="function"><span class="params">i</span> =&gt;</span> &#123;</span><br><span class="line">          i.<span class="property">leftTime</span> = <span class="title class_">Tools</span>.<span class="title function_">getLastTime</span>(i.<span class="property">endTime</span>);</span><br><span class="line">          nodes[index].<span class="property">innerHTML</span> = item.<span class="property">registerLeftTime</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">const</span> endT = performance.<span class="title function_">now</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(seemsEndT - startT);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>让我们来看看效果如何：模拟器上的平均刷新时间有下降但没那么夸张，而测试机上的表现天差地别，非常丝滑！</p>
<p><img data-src="https://cdn.joouis.com/optimization-road-of-count-down-timer-6.png"></p>
<p><img data-src="https://cdn.joouis.com/optimization-road-of-count-down-timer-7.gif"></p>
<h2 id="更好的更新策略"><a href="#更好的更新策略" class="headerlink" title="更好的更新策略"></a>更好的更新策略</h2><p>定时器最重要的功能就是确保时间准确，如果时间都不准了，那也就该洗洗睡了。除去与服务端同步校时之类的方案，还是继续讨论如何在 Web 前端领域力求计时准确。</p>
<h3 id="并不精准的-setInterval"><a href="#并不精准的-setInterval" class="headerlink" title="并不精准的 setInterval"></a>并不精准的 <code>setInterval</code></h3><p>在修复前文提到的 <code>setState</code> 缺陷之后，最明显的问题莫过于 <code>setInterval</code> 的使用。写一个定时任务，不少小伙伴第一反应想到的也是 <code>setTimeout</code> 和 <code>setInterval</code> 函数，但是它们真的足够精确吗？这就要从 JS 的<strong>任务队列</strong>及<strong>微任务队列</strong>（也有称 <strong>macrotask queue</strong> 和 <strong>microtask queue</strong>）说起了…</p>
<p>咳咳，我们言简意赅总结下：JS 主线程执行时有一个栈存储运行时的函数相关变量，遇到函数时会先入栈执行完后再出栈（废话）。当遇到 <code>setTimeout</code> <code>setInterval</code>  <code>requestAnimationFrame</code> 以及 I&#x2F;O 操作时，这些函数会立刻返回一个值（如 <code>setInterval</code> 返回一个 <code>intervalID</code> ）保证主线程继续执行，而异步操作则由浏览器的其它线程维护。当异步操作完成时，浏览器会将其回调函数插入主线程的<strong>任务队列</strong>中，当主线程执行完当前栈的逻辑后，才会依次执行<strong>任务队列</strong>中的任务。</p>
<p>但是在每个任务之间，还有一个<strong>微任务队列</strong>的存在。在当前任务执行完后，将先执行<strong>微任务队列</strong>中的所有任务，例如 <code>Promise</code> <code>process.nextTick</code> 等操作。</p>
<p>也就是说当 <code>setInterval(fn, 1000)</code> 等待 1 秒钟后，<code>fn</code> 函数会被插入<strong>任务队列</strong>中，但并不一定会立刻执行，还需要等待当前任务以及<strong>微任务队列</strong>中的所有任务执行完。长此以往，使用 <code>setInterval</code> 的计时器超时将越来越严重。</p>
<p>感兴趣的朋友可以查看<a href="https://html.spec.whatwg.org/multipage/webappapis.html#event-loop-processing-model">权威的 HTML 标准文档</a>，或者观看以下省流版动图。</p>
<p><img data-src="https://cdn.joouis.com/optimization-road-of-count-down-timer-8.gif"></p>
<p>所以回归正题，不用 <code>setInterval</code> 那用啥？</p>
<h3 id="天王盖地虎，我有-rAF"><a href="#天王盖地虎，我有-rAF" class="headerlink" title="天王盖地虎，我有 rAF"></a>天王盖地虎，我有 <code>rAF</code></h3><p>解铃还须系铃人，既然我们的代码执行时间在主线程中无法得到保证，那么还是要从更高抽象层级的浏览器中寻求办法。好在目前主流浏览器都已提供一个在重绘前执行动画相关函数的接口 <code>requestAnimationFrame</code>，用来更新计时器再合适不过。改造如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Third version, use rAF instead of setInterval */</span></span><br><span class="line"><span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> lastTime = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">__updateCountDownTimer</span>(<span class="params">timestamp</span>) &#123;</span><br><span class="line">    lastTime = lastTime || timestamp;</span><br><span class="line">    <span class="keyword">const</span> tickInterval = timestamp - lastTime;</span><br><span class="line">    <span class="keyword">if</span> (tickInterval &gt;= <span class="number">1000</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> toUpdate = <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">list</span>.<span class="title function_">slice</span>();</span><br><span class="line">      <span class="keyword">if</span> (toUpdate.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> nodes = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.count-down-timer&#x27;</span>);</span><br><span class="line">        toUpdate.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">          item.<span class="property">leftTime</span> = <span class="title class_">Tools</span>.<span class="title function_">getLastTime</span>(item.<span class="property">endTime</span>);</span><br><span class="line">          nodes[index].<span class="property">innerHTML</span> = item.<span class="property">leftTime</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      lastTime = timestamp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(_updateCountDownTimer.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">timer</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="title function_">requestAnimationFrame</span>(__updateCountDownTimer.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>那么这样实现足够精准了吗？打印出每次更新的时间戳瞅瞅（上图为模拟器数据，下图为测试机数据）。</p>
<p><img data-src="https://cdn.joouis.com/optimization-road-of-count-down-timer-9.png" alt="模拟器数据"></p>
<p><img data-src="https://cdn.joouis.com/optimization-road-of-count-down-timer-10.png" alt="测试机数据"></p>
<p>可以看到模拟器上已经相当精准，每秒的误差在 +0.15 毫秒左右，也就是运行将近 2 小时会有 1 秒的误差，笔者觉得完全可以接受。不过测试机上的误差就有点大了，每秒的误差在 +10 毫秒左右，虽然笔者觉得也可以接受（很少有人会在活动页停留很久），但本着工（tai）匠（gang）精神，想想是否还能优化呢？</p>
<h3 id="正向反馈拯救采样频率"><a href="#正向反馈拯救采样频率" class="headerlink" title="正向反馈拯救采样频率"></a>正向反馈拯救采样频率</h3><p>好奇心使笔者打印出了测试机调用 <code>rAF</code> 的时间间隔，绝大多数间隔在 16.6 毫秒左右，意味着手机 webview 也是 60Hz 的刷新频率；不过也存在少数间隔时间远超正常刷新时间，达到了 30 ~ 70 毫秒，如果触发滑动操作可能会超过 100 毫秒。不得不说，测试机就要挑这么烂的 Orz…</p>
<p>仔细想想，测试机上的计时误差本质是采样频率并未一直满足 60Hz，当某一次采样时间超过 16.6 毫秒且刚好需要刷新动画时，就会产生误差。同时每次误差都是超时而非提前，这样就在延时的道路上越走越远了。</p>
<p>那么反向思考，每当触发更新事件时，超时时段（超过 1 秒的时间）是已知的。如果将其补偿到下一次计时中，应该能减缓误差的扩大速度。代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Fourth version, use rAF instead of setInterval */</span></span><br><span class="line"><span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> lastTime = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="variable constant_">DELAY_INTERVAL</span> = <span class="number">1000</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">__updateCountDownTimer</span>(<span class="params">timestamp</span>) &#123;</span><br><span class="line">    lastTime = lastTime || timestamp;</span><br><span class="line">    <span class="keyword">const</span> tickInterval = timestamp - lastTime;</span><br><span class="line">    <span class="keyword">if</span> (tickInterval &gt;= <span class="variable constant_">DELAY_INTERVAL</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> toUpdate = <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">list</span>.<span class="title function_">slice</span>();</span><br><span class="line">      <span class="keyword">if</span> (toUpdate.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> nodes = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.count-down-timer&#x27;</span>);</span><br><span class="line">        toUpdate.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">          item.<span class="property">leftTime</span> = <span class="title class_">Tools</span>.<span class="title function_">getLastTime</span>(item.<span class="property">endTime</span>);</span><br><span class="line">          nodes[index].<span class="property">innerHTML</span> = item.<span class="property">leftTime</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      lastTime = timestamp + (tickInterval - <span class="variable constant_">DELAY_INTERVAL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(_updateCountDownTimer.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">timer</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="title function_">requestAnimationFrame</span>(__updateCountDownTimer.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>观察测试手机打印的时间，发现此法完全是可行的。每当超时间隔超过正常的刷新频率 16.6 毫秒时，相当于赶上了下一次采样窗口的伊始，因此会被校正。相比手机上每隔两三秒校正一次，PC 模拟器的采样时间变化显得尤为明显，在最后与大家分享。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">1685.99</span>, <span class="number">2686.13</span>, <span class="number">3686.27</span>, <span class="number">4686.410000000001</span>, <span class="number">5719.888</span>, <span class="number">6686.69</span>, <span class="number">7686.83</span>, <span class="number">8686.970000000001</span>, <span class="number">9687.11</span>, <span class="number">10687.443</span>, <span class="number">11687.583</span>, <span class="number">12687.723</span>, <span class="number">13687.863</span>, <span class="number">14688.003</span>, <span class="number">15688.143</span>, <span class="number">16688.283</span>, <span class="number">17688.423</span>, <span class="number">18688.563</span>, <span class="number">19688.703</span>, <span class="number">20688.842999999997</span>, <span class="number">21689.214</span>, <span class="number">22689.354000000003</span>, <span class="number">23689.494</span>, <span class="number">24689.634000000002</span>, <span class="number">25689.774</span>, <span class="number">26689.914</span>, <span class="number">27690.054</span>, <span class="number">28690.194000000003</span>, <span class="number">29690.334</span>, <span class="number">30690.474</span>, <span class="number">31690.863</span>, <span class="number">32691.003</span>, <span class="number">33691.143</span>, <span class="number">34691.282999999996</span>, <span class="number">35691.423</span>, <span class="number">36691.563</span>, <span class="number">37691.702999999994</span>, <span class="number">38691.843</span>, <span class="number">39691.983</span>, <span class="number">40692.123</span>, <span class="number">41692.473</span>, <span class="number">42692.613000000005</span>, <span class="number">43692.753000000004</span>, <span class="number">44692.893</span>, <span class="number">45693.033</span>, <span class="number">46693.173</span>, <span class="number">47693.313</span>, <span class="number">48693.453</span>, <span class="number">49693.593</span>, <span class="number">50693.733</span>, <span class="number">51694.159</span>, <span class="number">52694.299</span>, <span class="number">53694.439000000006</span>, <span class="number">54694.579</span>, <span class="number">55694.719</span>, <span class="number">56694.859000000004</span>, <span class="number">57694.999</span>, <span class="number">58695.138999999996</span>, <span class="number">59695.279</span>, <span class="number">60695.419</span>, <span class="number">61712.443</span>, <span class="number">62695.914000000004</span>, <span class="number">63696.054</span>, <span class="number">64696.194</span>, <span class="number">65696.33399999999</span>, <span class="number">66696.474</span>, <span class="number">67696.614</span>, <span class="number">68696.754</span>, <span class="number">69696.894</span>, <span class="number">70697.034</span>, <span class="number">71697.423</span>, <span class="number">72697.56300000001</span>, <span class="number">73697.70300000001</span>, <span class="number">74697.84300000001</span>, <span class="number">75697.983</span>, <span class="number">76698.12299999999</span>, <span class="number">77698.26299999999</span>, <span class="number">78698.403</span>, <span class="number">79698.543</span>, <span class="number">80698.683</span>, <span class="number">81699.02399999999</span>, <span class="number">82699.16399999999</span>, <span class="number">83699.304</span>, <span class="number">84699.444</span>, <span class="number">85699.584</span>, <span class="number">86699.724</span>, <span class="number">87699.864</span>, <span class="number">88700.004</span>, <span class="number">89700.144</span>, <span class="number">90700.284</span>, <span class="number">91700.424</span>, <span class="number">92700.781</span>, <span class="number">93700.92099999999</span>, <span class="number">94701.061</span>, <span class="number">95701.201</span>, <span class="number">96701.341</span>, <span class="number">97701.481</span>, <span class="number">98701.621</span>, <span class="number">99701.761</span>, <span class="number">100701.90100000001</span>, <span class="number">101702.041</span>, <span class="number">102702.426</span>, <span class="number">103685.897</span>, <span class="number">104686.037</span>, ...</span><br></pre></td></tr></table></figure>



<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/">Tasks, microtasks, queues and schedules</a></li>
<li><a href="https://www.quora.com/How-does-a-single-thread-handle-asynchronous-code-in-JavaScript">How does a single thread handle asynchronous code in JavaScript?</a></li>
<li><a href="https://html.spec.whatwg.org/multipage/webappapis.html#event-loop-processing-model">HTML Living Standard — Last Updated 25 May 2018</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame">window.requestAnimationFrame()</a></li>
</ul>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>javascript</tag>
        <tag>react</tag>
        <tag>optimization</tag>
        <tag>counter</tag>
      </tags>
  </entry>
  <entry>
    <title>三星Note9与米10Pro拍照对比</title>
    <url>/2020/photos-comparison-between-note9-and-mi10pro/</url>
    <content><![CDATA[<p>在正文开始前，请允许我碎碎念一下。</p>
<p>我从小喜欢数码产品，各种拆解、修复，初中开始靠使电烙铁拿奖中考加分… 一直以来身边人购置数码产品或者遇到问题都会咨询我，但我好像越长大越懒得折腾这些东西，热情逐渐被岁月磨灭（？）。难得有兴趣在换手机时做个简短的对比评测，就借此机会多写一点吧。</p>
<span id="more"></span>


<h2 id="我的玩机历史"><a href="#我的玩机历史" class="headerlink" title="我的玩机历史"></a>我的玩机历史</h2><p>我从高中开始放飞自我，因为囊中羞涩主要倒腾各种二手手机，在此之前只玩过小灵通和MOTO V3（向永恒的Razor系列致敬！）。那会正是诺基亚如日中天的时候，Symbian S40&#x2F;S60v3平台的手机相对保值，也就蹭同学的手机玩，在二手市场中没有性价比可言。我则从Sony（黑白机）、Sony Ericsson（自研系统和Symbian OS）、MOTO（自研Linux系统和Windows Phone）、三星（自研系统、Symbian OS 和 Windows Phone）、HP（Windows Phone）到多普达以及 HTC 贴各种运营商牌的Windows Phone，各种体验、刷机、维修和转卖，度过了高中三年时光。这些手机便宜，但绝大多数内置强大的操作系统，更具体讲可以安装各种应用软件，在还是GPRS网络和Java小游戏的年代已经具备一定的可玩性。</p>
<p>记得高三那年 iPhone 3GS发布，当时还觉得平平无奇，就是贵。而初次见到HTC Hero G3被鲜艳的大屏和UI震撼到了，开始入坑Android。大学时主要有两台神机令我印象深刻，持有时间最长。</p>
<p>第一部是MOTO Defy，简直是当时的性价比之王，两千元左右的价格配置全面，陪我度过了两年的时光。还记得那时候就开始玩Real Racing 3，没想到这款游戏在近10年后的今天仍然占据着Android热门赛车游戏的一席之地，还被EA收购了。</p>
<p>第二部则是LG G2，这部手机是当时全球最窄边框的智能手机，外观在今天看来仍不过时，非常的“现代化”。除此之外，性能不必多说，还有两大卖点。一是LCD的屏幕出自自家LG Display，是全球最好的LCD屏幕没有之一，iPhone也用的它家屏幕，这和我后来选三星类似。另一卖点则是用上了OIS光学防抖的摄像头，这个配置如今司空见惯，但在当年真是鹤立鸡群的技术，拍照素质自然秒杀其他手机一截。这也是我第一次玩韩版机，到三星时代因为指纹支付问题以及蛋疼的系统已经不再碰它们了。</p>
<p>随后就有点平淡无奇，不爱折腾了，就开始保持品牌忠诚度。我选手机的标准很明确，当下旗舰机保证基本门槛，在此基础上依照拍照、屏幕、 续航、扬声器、是否支持无线充电（从S7E尝到甜头开始）、是否支持IP68防尘防水（依然是从S7E开始提高要求）为顺序做挑选。实际的换机轨迹在G2之后是G Pro 2、G3和G4，直到G4出现大面积主板故障，同时三星的双相位对角、曲面屏开始惊艳市场后，入坑S7E、S8+和Note9。</p>
<h2 id="关于米10-Pro"><a href="#关于米10-Pro" class="headerlink" title="关于米10 Pro"></a>关于米10 Pro</h2><p>去年差点入坑1+7 Pro，不过之前玩过二手的1+3T对拍照表现不太满意，以及看过1+7 Pro的各种评测，觉得不少细节还是差点意思（如在2019年仍不支持无线充电），于是放弃。直到今年初，三星的系统“负优化”在玩30帧“王者荣耀”时竟然会偶尔卡顿，续航也开始退化，决定换其他厂牌，考察一圈最终选择米10 Pro。</p>
<p>其实这个选择挺容易做的，MIUI的优化加各种顶配硬件不仅玩游戏体验远胜Note9，屏幕还是三星家的A货，双扬声器在每次B站评测中总能引来《全体起立》（毫不夸张讲是我到目前为止听过最棒的手机外放）的弹幕，以及今天要对比的DXO评分124分的拍照功能，基本上很难找到对手。说起来我对价格不算太敏感，也考虑过S20+甚至S20 Ultra，不过想到那个“慢吞吞”的One UI还是算了吧，S20 Ultra还被一众测评指出固件并不完善。</p>
<p>一开始抱着不好用就再卖掉的心态使了两天米10 Pro，结果它毫无悬念的在绝大多数方面体验完胜Note9，导致后者被我秒出。除了上述的优点外，米10 Pro的背面磨砂玻璃手感很不错，挖孔屏实际带来的干扰也比我想象中要小不少，果然是看习惯就好。而Note9还能胜过米10 Pro的地方有二：</p>
<ul>
<li>系统更纯净，也就是大家吐槽已久的MIUI广告问题。确实通过各种设置可以关掉绝大多数MIUI上的广告，只是我不太理解把这些“狗屁膏药”贴在自己旗舰上真的能增加更多营收吗，要知道这一点劝退了不少人。而我个人认为这会培养消费者对小米品牌的负面认知，这些“狗皮膏药”始终让小米看起来不像真旗舰机。据说把系统改成英文就没这困扰了，um… 🙄 。</li>
<li>品控不太好。每年网上吐槽小米手机质量的声音不少，例如出名的断流问题。我对这些问题算是比较包容的态度，实际我手上这台也还没遇到断流等“硬伤”问题。不过我遇到了一个玩机这么多年头次见的小问题，屏幕边缘居然有黑胶，这会导致裸机状态下手感大打折扣。而我作为一个轻度强迫症患者，看到这个瑕疵也是不能忍，弄了半天却没法完全弄掉。还好戴套之后眼不见心不烦。</li>
</ul>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-0.avif"></p>
<h2 id="拍照对比总结"><a href="#拍照对比总结" class="headerlink" title="拍照对比总结"></a>拍照对比总结</h2><p>回归正题，DXO上米10 Pro的评分比三星Note9高了足足21分，那么实际成片效果是否如此，就用我五一前几天随手拍的一些样张作为对比吧。三星Note9的固件是4月最新的版本，已经用上Android 10，后续的OTA更新基本都是安全补丁，印象中没看到相机方面的优化；而米 10 Pro的固件是MIUI 11.0.16.0稳定版。</p>
<p>先说结论，拍照方面无论是成像素质还是拍摄场景的多面性，米10 Pro都毫无疑问比Note9强得多，照片文件大小前者是后者的一倍左右，而前者的超广角镜头和多倍混合光学变焦也是后者无法企及的。Note9唯一值得说道还是它的调色，暖色调、高饱和度、高对比度，某些场景下拍出的照片第一眼讨喜。此外米10 Pro偶尔会出现白平衡不准的情况，后面会有照片说明。</p>
<p>那么开始看照片吧。默认同一内容的两张照片<strong>Note9在前、米10 Pro在后</strong>，均使用默认配置项，大概也就是使用主摄像头、开启AI场景识别优化。我会基于过去玩单反（Pentax配三饼干）的经验简单评价照片，并选出我更喜欢的一边。这是一件非常主观的事，不过鄙人拍照的初衷就是记录生活、愉悦自己 :)</p>
<h2 id="样张对比"><a href="#样张对比" class="headerlink" title="样张对比"></a>样张对比</h2><p>公寓的走廊，很明显米 10 Pro 的主摄视角比 Note9 广一些。不过这种题材通常也不会有人关注细节，平手。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-1-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-1-m.avif"></p>
<p>电梯里，弱光环境下米10 Pro的曝光第一眼更好看，细看文字都能看得清，差距不大，米10 Pro险胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-2-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-2-m.avif"></p>
<p>工作日的餐厅和午餐。Note9 的调色显得食物更有食欲，但米 10 Pro这种更接近食物原本色彩的调色风格我觉得也不错，平手。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-3-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-3-m.avif"></p>
<p>视角更广的米 10 Pro更有优势，同时明亮的调色观感比Note9更好，细节就不对比了没有悬念。米10 Pro胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-4-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-4-m.avif"></p>
<p>杂乱的工位 😅 。平手。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-5-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-5-m.avif"></p>
<p>办公室走廊，两者都支持HDR，不过米 10 Pro的宽容度更高，观感也更好，胜出。值得一提的是右侧边缘的文字Note9更为清晰。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-6-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-6-m.avif"></p>
<p>书报架，这种文艺主题显然是Note9的主场，调色更讨喜，胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-7-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-7-m.avif"></p>
<p>兰州拉面之红烧牛肉面，超好吃。这一次我反而觉得Note9的高饱和、高对比不如米10 Pro的成片看起来更舒服，嗯就是很主观的评价，米10 Pro险胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-8-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-8-m.avif"></p>
<p>在此期间把 Roland Micro Cube GX音箱给卖了，因为有了这个小箱子——过年前在香港买的Boss Katana Mini。米10 Pro的视角更有优势，同时也把音箱外壳材质的纹理拍得明显更清晰，胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-9-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-9-m.avif"></p>
<p>最近油价大跌，加油站除了降价外又开始搞加油满￥200送机洗的活动。随手来一张，平局。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-10-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-10-m.avif"></p>
<p>到了本文老大哥Note9的高光时刻，完胜米10 Pro的一颗柠檬，色泽完美，而后者的白平衡居然完全跑偏…</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-11-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-11-m.avif"></p>
<p>看来提前下载Snapseed是个明智的决定。下图只调了白平衡参数，基本就是肉眼所见的柠檬外观，不过还是没有Note9的那张看起来诱人 😂。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-11-m-fixed.avif"></p>
<p>切柠檬是为了配干邑，作为一个业余爱好者，我毫不掩饰地承认我都用可乐搭配，自己喜欢最重要！这里Note9的深色调反而没有米10 Pro的看起来可口，后者胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-12-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-12-m.avif"></p>
<p>和同事去泡汤、写代码、打桌游，这家会所无论地理位置还是装潢水平在苏州都数一数二。Note9的照片涂抹感有点严重，这点也经常被各大数码评测节目提到。很明显米10 Pro拍出来的泳池更为清澈好看，也更接近真实观感，胜出。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-13-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-13-m.avif"></p>
<p>米10 Pro的宽容度同时保留了高光和暗部细节，完胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-14-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-14-m.avif"></p>
<p>Note9的色调更温馨一点，米10 Pro的视角加分，平手。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-15-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-15-m.avif"></p>
<p>我更喜欢Note9的调色，更显豪华感，高光的压制也不输小老弟，胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-16-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-16-m.avif"></p>
<p>又是调色和视角的各有所长，平手。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-17-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-17-m.avif"></p>
<p>朋友一直推荐这家的炒牛河好吃，确实不错！我更喜欢米10 Pro的炒蛋颜色，前者有点酱油放多了的感觉… 米10 Pro险胜吧。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-18-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-18-m.avif"></p>
<p>Splendor真的超级好玩！之前听朋友们说过几次，这次初次上手就赢了他们，嘿嘿 😝。没人会在意画质吧，平手。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-19-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-19-m.avif"></p>
<p>尽管Note9还是有涂抹的痕迹，但成片更显环境高级感，米10 Pro有点偏冷了，前者险胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-20-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-20-m.avif"></p>
<p>米10 Pro的高光处理更出色，整体色彩也更讨喜，胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-21-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-21-m.avif"></p>
<p>这张照片里Note9还是会有酱油放多、画面过于浓郁的问题，米10 Pro上那根葱、还有上方冒着热气模糊的感觉更讨喜，后者胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-22-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-22-m.avif"></p>
<p>虽然米10 Pro的细节更多，但炫光问题令人捉急，Note9胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-23-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-23-m.avif"></p>
<p><strong>苏州除了是大家传统印象中的旅游城市外，其实更是一座工厂城市，大大小小的工厂散落苏州的各个区、市。这些工厂托起了中国的实体经济，而每年来自全国各地的年轻人被输送到这些厂里做工，每月做六休一、算上各种加班费也只能赚几千块钱，他们才是绝大多数“后浪”。</strong>我不喜欢Note9的色彩，仿佛在看“旧照片”，后者胜。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-24-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-24-m.avif"></p>
<p>我的爱琴。面向朋友圈拍照肯定是Note9胜，第一眼太讨喜，不过吉他还是值得放大看细节的，这时候米10 Pro就扳回一城。平手。</p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-25-n.avif"></p>
<p><img data-src="https://cdn.joouis.com/photos-comparison-between-note9-and-mi10pro-25-m.avif"></p>
<p>总的来说米10 Pro拍照能力在Note9之上，符合我的预期，能让我将Note9安心出掉，也算是不负小米想打进高端价位市场的初心。配合一众出色的硬件和成熟的MIUI优化，不愧是今年的“真香机”！</p>
<p>希望小米的股价也能快点涨起来，不要坐实了“年轻人第一支被套牢的股票”之名😂 —— 来自一位在结尾突然想起自己是小米股东的年轻人 Orz</p>
]]></content>
      <categories>
        <category>数码体验</category>
      </categories>
      <tags>
        <tag>mobile</tag>
        <tag>photo</tag>
        <tag>comparison</tag>
        <tag>samsung</tag>
        <tag>xiaomi</tag>
        <tag>note9</tag>
        <tag>mi10 pro</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年我想练的歌单</title>
    <url>/2022/playlist-want-to-play-in-2022/</url>
    <content><![CDATA[<p>虽然2022年已经过去俩月半，但“想练”意味着不一定能啃下来，先把目标都列下来再看看到年底具体能有哪些斩获吧😅。清单数量限定在十首左右，因此选择的都是我个人非常喜欢同时也具备一定技术难度、需要花时间去琢磨的曲目。每一首都在我工作或深夜单曲循环过无数遍，一定好听且耐听。这个清单也符合我一直以来的“杂食”风格，流行歌、爵士以及一些现代融合的风格都有，曲目按首字母排序，偏好无先后顺序。</p>
<span id="more"></span>



<h2 id="爱我还是他-李荣浩"><a href="#爱我还是他-李荣浩" class="headerlink" title="爱我还是他 - 李荣浩"></a>爱我还是他 - 李荣浩</h2><ul>
<li>原曲：<a href="https://youtu.be/xanYQbxMY7A">YouTube</a></li>
<li>碎碎念：手指机能是目前的最大瓶颈之一，目标能原速演奏。此外能接上唱更好… 老大的歌百听不厌。</li>
<li>参考资料：<ul>
<li><a href="https://www.bilibili.com/video/BV14z4y1y7aP">李荣浩那段技惊四座《爱我还是他》的吉他SOLO</a></li>
<li><a href="https://www.bilibili.com/video/BV17Z4y137oX">从李荣浩《爱我还是他》🎸电吉他 solo 中学到的十件事</a></li>
</ul>
</li>
</ul>
<h2 id="Autumn-leaves-Eric-Clapton"><a href="#Autumn-leaves-Eric-Clapton" class="headerlink" title="Autumn leaves - Eric Clapton"></a>Autumn leaves - Eric Clapton</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/UQlFOX0YKlQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<ul>
<li>原曲：<a href="https://youtu.be/UQlFOX0YKlQ">YouTube</a>、<a href="https://www.bilibili.com/video/BV14R4y1W7DM">Bilibili</a></li>
<li>碎碎念：吉他solo包含木吉他和电吉他两段，难度不是很大，可以自己扒下来，要注意音色和演奏情感。Chet Baker那一版也是单曲循环无数次，想起去年上课好像学了很多，又好像什么都忘了… 欸，明年清单再列上吧。</li>
<li>参考资料：<ul>
<li><a href="https://www.bilibili.com/video/BV1GQ4y1q7P6">【吉他教学】弹琴没细节？手把手教你保证细节拉满！Autumn Leaves</a></li>
</ul>
</li>
</ul>
<h2 id="Covered-in-rain-John-Mayer"><a href="#Covered-in-rain-John-Mayer" class="headerlink" title="Covered in rain - John Mayer"></a>Covered in rain - John Mayer</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/DYHng61lftA" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<ul>
<li>原曲：<a href="https://youtu.be/DYHng61lftA">YouTube</a>、<a href="https://www.bilibili.com/video/BV1iW411i7Us">Bilibili</a></li>
<li>碎碎念：可以说是从小听到大的歌曲，脑海中基本可以“全文背诵”。通过这首歌，第一次感受到电吉他solo堆砌起来的充沛叙事感和情感。毫无疑问JM是我心中的吉他英雄，因为他喜欢上吉他。我并不反感市场化或商业化，作品如果全是技巧没有感情，或全是感情没有旋律性，都不是我的菜。我觉得JM就是把这几件事结合得出类拔萃的天才，至于一些商业化带来的八卦以及他的”stupid mouth”，我不关心。</li>
<li>参考资料：应该非常多，暂未搜寻。</li>
</ul>
<h2 id="Europa-Carlos-Santana"><a href="#Europa-Carlos-Santana" class="headerlink" title="Europa - Carlos Santana"></a>Europa - Carlos Santana</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/aAfylWv_uBc" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<ul>
<li>原曲：<a href="https://youtu.be/aAfylWv_uBc">YouTube</a>、<a href="https://www.bilibili.com/video/BV1Ps411D7Fr">Bilibili</a></li>
<li>碎碎念：又一支从小听到大的曲子，“全文背诵”什么的后面就不提了。除了这首曲子外，像《Game of love》、《Smooth》等歌也是往后想扒和练得目标。</li>
<li>参考资料：应该非常多，暂未搜寻。</li>
</ul>
<h2 id="Gravity-John-Mayer"><a href="#Gravity-John-Mayer" class="headerlink" title="Gravity - John Mayer"></a>Gravity - John Mayer</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/Fo4746XZgw8" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<ul>
<li>原曲：<a href="https://youtu.be/Fo4746XZgw8">YouTube</a>、<a href="https://www.bilibili.com/video/BV13X4y1K7aN">Bilibili</a></li>
<li>碎碎念：这首曲子没什么好说的了吧，从技巧到音色，有朝一日必须拿下。</li>
<li>参考资料：应该非常多，暂未搜寻。</li>
</ul>
<h2 id="How-insensitive-Wes-Montgomery"><a href="#How-insensitive-Wes-Montgomery" class="headerlink" title="How insensitive - Wes Montgomery"></a>How insensitive - Wes Montgomery</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/jdO6wP3CqqQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<ul>
<li>原曲：<a href="https://youtu.be/jdO6wP3CqqQ">YouTube</a>、<a href="https://www.bilibili.com/video/BV1K54y1j7T2">Bilibili</a></li>
<li>碎碎念：对于爵士乐我比较喜欢标准曲和bossa nova风格，说白了也都是流行歌过来的，只不过有更多丰富的语言词汇去表达情感。这首曲子也算从小听到大，除了非常好听之外，也是标准曲中为数不多用吉他演奏的最广为流传的版本，必须冲一发。</li>
<li>参考资料：应该非常多，暂未搜寻。</li>
</ul>
<h2 id="Kyoto-Tomo-Fujita"><a href="#Kyoto-Tomo-Fujita" class="headerlink" title="Kyoto - Tomo Fujita"></a>Kyoto - Tomo Fujita</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/4dupGktvi0s" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<ul>
<li>原曲：<a href="https://youtu.be/4dupGktvi0s">YouTube</a>、<a href="https://www.bilibili.com/video/BV1Jb411C7Wy">Bilibili</a></li>
<li>碎碎念：去年偶然在油管上听到的曲子，旋律很抓耳朵，情感细腻，同时Tomo在他自己的频道上也放了多个不同风味的版本。感觉不是很难，适合现阶段学习和练习。</li>
<li>参考资料：<ul>
<li><a href="https://youtu.be/587i4Cv-Zs0">Tomo Fujita - KYOTO</a></li>
<li><a href="https://youtu.be/Rh_bv5Z8jQE">Tomo Fujita - KYOTO JAM - 1967 Gibson ES-335</a></li>
</ul>
</li>
</ul>
<h2 id="Little-Wing-Stevie-Ray-Vaughan"><a href="#Little-Wing-Stevie-Ray-Vaughan" class="headerlink" title="Little Wing - Stevie Ray Vaughan"></a>Little Wing - Stevie Ray Vaughan</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/An4uDegHB8s" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<ul>
<li>原曲：<a href="https://youtu.be/An4uDegHB8s">YouTube</a></li>
<li>碎碎念：在这首歌和JM的《Bold as love》之间犹豫了一会，不过两首都是Jimi Hendrix的歌，练会哪首另一首应该也能很快能掌握。说实话我对Jimi的作品到目前为止没多少感觉，但SRV和JM演绎的版本立马能抓住我的耳朵，也听了很多年，该好好研究一下。</li>
<li>参考资料：应该非常多，暂未搜寻。</li>
</ul>
<h2 id="Plastic-love-Mariya-Takeuchi"><a href="#Plastic-love-Mariya-Takeuchi" class="headerlink" title="Plastic love - Mariya Takeuchi"></a>Plastic love - Mariya Takeuchi</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/9Gj47G2e1Jc" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<ul>
<li>原曲：<a href="https://youtu.be/9Gj47G2e1Jc">YouTube</a>、<a href="https://www.bilibili.com/video/BV1E3411k7sp">Bilibili</a></li>
<li>碎碎念：非常喜欢city pop风格，旋律和编曲百听不厌，这种纸醉金迷的都会氛围感，令人沉迷… 这首歌用来练习funk吉他正好，此外应该也有一些表演机会，毕竟是更有市场的音乐。</li>
<li>参考资料：应该非常多，暂未搜寻。</li>
</ul>
<h2 id="South-of-the-river-Tom-Misch"><a href="#South-of-the-river-Tom-Misch" class="headerlink" title="South of the river - Tom Misch"></a>South of the river - Tom Misch</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/NdJHvUTWx6c" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<ul>
<li>原曲：<a href="https://youtu.be/NdJHvUTWx6c">YouTube</a>、<a href="https://www.bilibili.com/video/BV1dW411x7tA">Bilibili</a></li>
<li>碎碎念：Tom Misch是我20年的最大发现，基本上每首歌都很好听，融合了funk和爵士的元素兼具音乐性和技术性，网上也有人称他为英国JM… 🤣。这首歌的节奏吉他和键盘solo都想扒一下，弹出那种音乐带给人最简单的快乐（如果看过MV就会秒懂）。</li>
<li>参考资料：<ul>
<li><a href="https://www.bilibili.com/video/BV1BZ4y1w77B">用吉他弹键盘solo是什么效果？South of the River（Cover）</a></li>
</ul>
</li>
</ul>
<h2 id="There-will-never-be-another-you-Arturo-Sandoval"><a href="#There-will-never-be-another-you-Arturo-Sandoval" class="headerlink" title="There will never be another you - Arturo Sandoval"></a>There will never be another you - Arturo Sandoval</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/z1nOfbQ_GwU" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<ul>
<li>原曲：<a href="https://youtu.be/z1nOfbQ_GwU">YouTube</a>、<a href="https://www.bilibili.com/video/BV1Yq4y1h7Eh">Bilibili</a></li>
<li>碎碎念：很犹豫是否要放一首真正意义上的爵士标准曲，《How insensitive》可以看做练一首有“标准答案的指弹曲目”，而到了爵士标准曲，除了扒大师的谱外，即兴是必不可少的一部分。这就没有了标准答案，于是变成很难花费一年半载便能达到大师们那种好听水平的一件事。完美主义多少害了我，对于特别喜欢的作品，不太敢迈出第一步（JM的歌我也一首没练过）。但这首歌对我有太多的回忆，该逼自己成长了。</li>
<li>参考资料：<ul>
<li><a href="https://www.bilibili.com/video/BV1154y1Y7ME">《新不了情+There will never be another you》成大爵士乐社</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>爱乐之城</category>
      </categories>
      <tags>
        <tag>playlist</tag>
        <tag>爱我还是他</tag>
        <tag>李荣浩</tag>
        <tag>autumn leaves</tag>
        <tag>eric clapton</tag>
        <tag>covered in rain</tag>
        <tag>john mayer</tag>
        <tag>europa</tag>
        <tag>carlos santana</tag>
        <tag>gravity</tag>
        <tag>how insensitive</tag>
        <tag>wes montgomery</tag>
        <tag>kyoto</tag>
        <tag>tomo fujita</tag>
        <tag>little wing</tag>
        <tag>srv</tag>
        <tag>plastic love</tag>
        <tag>mariya takeuchi</tag>
        <tag>south of the river</tag>
        <tag>tom misch</tag>
        <tag>there will never be another you</tag>
        <tag>arturo sandoval</tag>
      </tags>
  </entry>
  <entry>
    <title>Qwen2.5 vs. GPT-4o - Unlocking Coding Potential with Cline</title>
    <url>/2025/qwen25-vs-gpt4o-with-cline/</url>
    <content><![CDATA[<h3 id="Key-Takeaways"><a href="#Key-Takeaways" class="headerlink" title="Key Takeaways:"></a>Key Takeaways:</h3><ul>
<li>The locally deployed open-source model Qwen2.5-72B outperforms GPT-4o with Cline.</li>
<li>A more general instruction-tuned model is preferable over coding&#x2F;math-specific versions when using Cline.</li>
<li>Improvements in model performance could enhance other tools, such as OpenHands, which I plan to try next.</li>
</ul>
<h3 id="Exploring-the-Coding-Agent-Landscape"><a href="#Exploring-the-Coding-Agent-Landscape" class="headerlink" title="Exploring the Coding Agent Landscape"></a>Exploring the Coding Agent Landscape</h3><p>Recently, one of the hottest topics has been coding agents. Our team explored the Cursor and Windsurf editors (both forks of VS Code) and found them to be amazing! Their capabilities, including code quality, response speed, automation, and less human feedback, are superior to the GitHub Copilot extension on VS Code. It’s not surprising that Cursor and Windsurf can easily outperform GitHub Copilot (and Cline + GPT-4o which I’ll introduce soon), as these products have comprehensive optimizations, including post-trained models, customized prompts, RAG, etc. However, they also come with privacy and security risks.</p>
<p>To adopt a coding assistant while meeting compliance requirements, the Cline extension with the GPT-4o service provided by Azure AI is an excellent option. We are grateful for the leadership team’s encouragement and support in utilizing this tool.</p>
<h3 id="My-Short-Journey-with-Cline-AOAI-GPT-4o"><a href="#My-Short-Journey-with-Cline-AOAI-GPT-4o" class="headerlink" title="My Short Journey with Cline + AOAI GPT-4o"></a>My Short Journey with Cline + AOAI GPT-4o</h3><p>I started using Cline + AOAI GPT-4o to replace Cursor right after the callout email. However, like my teammates, I found its performance below expectations. The setup process was complicated with unclear configurations and TPM rate limits, and its capabilities were far inferior to Cursor&#x2F;Windsurf. It also suffered from stability issues, including extended hangups (over 5 minutes) and code 500 request errors. The downgraded experience was disappointing for an aspiring engineer.</p>
<p>GPT-4o should be the best model we can use so far, we can only choose AOAI models from the base model list. Although o1-preview is also on the list, applications are required, and there is a lengthy wait for approval. While creating the GPT-4o deployment on Azure AI Foundry, I noticed that fine-tuned models were “available”. This made me wonder if other models on Azure AI might be both compliant and superior to GPT-4o. Public leaderboards could answer the performance question, though verification would take effort. Azure AI only offers fine-tuning tool, which isn’t ideal for our case. Azure AI Foundry’s Model catalog presents another opportunity with its many popular models, but I lacked both quota and budget to experiment. Faced with either using a mediocre tool or leaving an idea unverified, I decided to locally deploy the open-source Qwen2.5 model.</p>
<h3 id="Deployment-and-Testing"><a href="#Deployment-and-Testing" class="headerlink" title="Deployment and Testing"></a>Deployment and Testing</h3><p>I deployed the official Qwen2.5-72B-Instruct-AWQ model using vLLM, and the process went smoothly. Even configuring Cline proved easier than with AOAI. For smaller tasks, the model performs on par with GPT-4o. For project-level challenges like “write a Tetris game for the web using TypeScript”, its planning and reasoning capabilities surpass GPT-4o. I tested both models a few times for this task - Qwen2.5 consistently provided similar, rough, and workable versions with few rounds of human feedback, while GPT-4o only succeeded once. Both outputs were buggy and required multiple rounds of instructions to refine.</p>
<p>The response speed for both models is about the same, which is acceptable to me. The token usage for Qwen2.5 always shows as 0, which might be a bug, but the log sizes for both models are comparable. While scaling up usage might reveal new challenges, the service and quality of Qwen2.5 currently meet my needs.</p>
<p>Initially, I tried Qwen2.5-Coder-32B-Instruct because of its high download ranking and coding purpose, but it occasionally struggled with Cline prompts. There is <a href="https://www.reddit.com/r/LocalLLaMA/comments/1gpqhgu/qwen_25_32b_coder_doesnt_handle_the_cline_prompt/">similar issue</a> discussed on Reddit. I also noticed that Cline supports DeepSeek, which has received glowing feedback from colleagues about its DeepSeek-V3 commercial version. However, its MoE architecture with 685B parameters makes it impractical for typical personal use.</p>
<h3 id="Scaling-Up-for-Team-Deployment"><a href="#Scaling-Up-for-Team-Deployment" class="headerlink" title="Scaling Up for Team Deployment"></a>Scaling Up for Team Deployment</h3><p>I’m happy with my local server now, but how can I generalize it to the whole team? I guess the solution still lies with Azure AI model service. Interestingly, while Phi-4 is a Microsoft model, we’re unable to use it directly on Azure AI. Perhaps Microsoft is too deeply tied to OpenAI. If it’s possible to reallocate a portion of the AOAI compute quotas to deploy some of these wonderful open-source models, things would be different.</p>
]]></content>
      <tags>
        <tag>large language model</tag>
        <tag>llm</tag>
        <tag>gpt</tag>
        <tag>open source</tag>
        <tag>agent</tag>
        <tag>coding assistant</tag>
        <tag>gpt-4o</tag>
        <tag>qwen2.5</tag>
        <tag>cline</tag>
        <tag>windsurf</tag>
        <tag>cursor</tag>
        <tag>azure ai</tag>
      </tags>
  </entry>
  <entry>
    <title>读书简记：《万历十五年》</title>
    <url>/2018/reading-notes-1587/</url>
    <content><![CDATA[<p>很早之前就慕名买了《万历十五年》这本书，直到这个国庆假期才花了四天的时间一鼓作气读完。读得过程中便不自觉感慨一些片段写得非常精彩，全文读毕只能说这是我在 2018 年读过最精彩的一本书。</p>
<span id="more"></span>

<p>这本书的内容用一句话概述即讲述了中国从古至今的政治学问。虽然书中分析得是明朝万历皇帝执政时期的政治、经济、军事等情况，但身为读者，你丝毫不会觉得内容过时，反而有种今日不也是如此的既视感。可以说中华五千年的历史，有些本质并没有发生巨大的改变，有些文化也是周而复始。因此通过这本书，可以体会到什么是 “以铜为镜，可以正衣冠；以古为镜，可以知兴替”。</p>
<p>作为一本历史书籍，作者黄仁宇以纪录片旁白的口吻讲述明朝历史，非常生动，好比在听评书一般。剧情上由人及事，又因事提人，大量穿插，显得内容非常连贯紧凑而节奏适中。虽说书名是万历十五年这一具体年份，但实际全书覆盖了万历皇帝执政的整个时期，从登基直至作古，在此之中还介绍、分析了一些从明朝创始以来就有而到万历年间的情况。这是黄仁宇闻名于世的“大世界观”的分析手法，强调不要单纯去分析一时的问题，而是向前推演，从长久的时间维度解读社会症结。</p>
<p>书中一针见血地阐述了偌大一个帝国国家机构的运作机制，更为巧妙的是，能站在不同角色如皇帝万历、类似丞相的首辅张居正、将领黄继光、文学家李贽等人的立场来分析他们是如何在这样一个帝国中做出自己的人生选择，同时通过他们介绍明代的政治、经济、军事、哲学等方面文化。</p>
<p>在这几位中，如果说臣子们的人生选择多少都有些迫不得已，那么万历皇帝真的是令人佩服。既然有的事情反抗不了，作为活着的祖宗，就佛系僵持着一切吧，保守自己内心的一份坚持，而不是一直妥协。</p>
<p>造成明代灭亡最根本的问题，一言以蔽之就是太多事情用道德代替法律来处理。明代的管理者们号称为人民服务，追求精神上的奉献与仁德，却与物质需求发生极大的冲突。似乎有点眼熟不是吗？</p>
<p>最后，虽然书中批判了封建时期中国的许多问题，不过黄仁宇也在附录中通过他人之言表达了对新中国的期盼之情。他特意提及《万历十五年》英文本《富序》中有下面一段：</p>
<blockquote>
<p>Historians may re-examine the mistakes of the past in the hope of providing warnings for the future, but at the same time caution their readers to preserve what is of value. Presumably, for China the experiences of both East and West must be drawn upon. It is essential that the historian lay everything on the table.</p>
</blockquote>
<p>不要因为目前的堰塞，忽视中国伟大的地方。</p>
<p>这实在是史学家们难能可贵的精神。</p>
]]></content>
      <categories>
        <category>读书简记</category>
      </categories>
      <tags>
        <tag>history</tag>
        <tag>politics</tag>
      </tags>
  </entry>
  <entry>
    <title>读书简记：《极限控制》</title>
    <url>/2018/reading-notes-extreme-ownership/</url>
    <content><![CDATA[<p>《极限控制》这本书是从同事手里收来的，买得时候以为是讲战争故事，读得过程中才发现是本讲解领导力的书。中文翻译得一般，尤其是书名（原书名为 <strong>Extreme Ownership</strong>）起得让人摸不着头脑，有点烂名字毁了一本书的既视感。</p>
<p>虽然是误打误撞买得书，我却很乐意将它读完，因为工程师太需要学习一些管理技巧，但平时又不怎么有机会接触到这些东西。从正向看一是帮助管理自己，二是即使一直做技术也会逐渐开始带团队、成为 TL，如何带好一个团队、最大化其战斗力是一门学问；反向说来，从实习到工作发现有不少技术过人的工程师是非常厉害的 IC （Individual Contributor），但可能并非优秀的老板，是管理和沟通成为了他们的绊脚石。</p>
<span id="more"></span>

<p>书中通过每一个战争案例总结出一点或多点道理，在此摘抄几条我比较有感触的结论。</p>
<ul>
<li>关于制定规划</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 任务分析</span><br><span class="line"><span class="bullet">  -</span> 理解高层下达的任务、意图，以及分析任务的目标</span><br><span class="line"><span class="bullet">  -</span> 自行考虑你所希望达成的目标</span><br><span class="line"><span class="bullet">2.</span> 确认参与任务的人力、可利用的资源，确定合适的时间</span><br><span class="line"><span class="bullet">3.</span> 分散规划权</span><br><span class="line"><span class="bullet">  -</span> 允许主要相关之人制定相应的行动步骤</span><br><span class="line"><span class="bullet">4.</span> 确定行动步骤</span><br><span class="line"><span class="bullet">  -</span> 主要关注最重要的步骤</span><br><span class="line"><span class="bullet">5.</span> 允许主要负责人为所选的步骤制订计划</span><br><span class="line"><span class="bullet">6.</span> 为行动的每一步可能出现的意外情况做出计划</span><br><span class="line"><span class="bullet">7.</span> 尽可能控制可控的风险</span><br><span class="line"><span class="bullet">8.</span> 将主要的任务分派给主要的相关负责者</span><br><span class="line"><span class="bullet">  -</span> 退后一步，成为指挥天才</span><br><span class="line"><span class="bullet">9.</span> 就已经出现的情况对计划进行检验，提出质疑，确保这一计划仍然适用于当前的局面</span><br><span class="line"><span class="bullet">10.</span> 简单明了地将这一计划通告所有参与行动的人及支援行动的人</span><br><span class="line"><span class="bullet">  -</span> 强调“指挥官的意图”</span><br><span class="line"><span class="bullet">  -</span> 参与集团讨论，并提问</span><br><span class="line"><span class="bullet">11.</span> 结束任务之后做“战后汇报”</span><br><span class="line"><span class="bullet">  -</span> 总结经验教训，并将它们用于以后的行动规划中</span><br></pre></td></tr></table></figure>

<ul>
<li>关于沟通</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 无论向上级报备情况，还是向下级传达命令，你都应该采取负责任的态度</span><br><span class="line"><span class="bullet">-</span> 若某人没有做你期望的事，首先检讨自己，看看怎样做才能达成所愿</span><br><span class="line"><span class="bullet">-</span> 不要向上级询问应该怎么做，而是要告诉他们你准备做什么</span><br></pre></td></tr></table></figure>

<ul>
<li>关于“优秀的人”的对立统一</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 自信而不自大</span><br><span class="line"><span class="bullet">-</span> 勇敢而不莽撞</span><br><span class="line"><span class="bullet">-</span> 关心细节却不会为之左右</span><br><span class="line"><span class="bullet">-</span> 坚强且有耐力</span><br><span class="line"><span class="bullet">-</span> 善于指挥也要乐于服从</span><br><span class="line"><span class="bullet">-</span> 果敢而不专横</span><br><span class="line"><span class="bullet">-</span> 平静而不沉默</span><br><span class="line"><span class="bullet">-</span> 冷静而不呆板，有逻辑而不乏情趣</span><br><span class="line"><span class="bullet">-</span> 跟伙伴打成一片，但不能太过亲近，让其他人取代了你，更不能让坏人取代了你</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>读书简记</category>
      </categories>
      <tags>
        <tag>management</tag>
        <tag>leadership</tag>
        <tag>ownership</tag>
      </tags>
  </entry>
  <entry>
    <title>读书简记：《非暴力沟通》</title>
    <url>/2019/reading-notes-nonviolent-communication/</url>
    <content><![CDATA[<p>2018 年末尾终于读完了《非暴力沟通》，之所以说“终于”是因为这本书是 15 年在台湾时一位师姐送的，当时出于某些原因一直没拆封看，但又一直没舍得送人或卖掉，就这么随我一路回到了大陆，从杭州到了苏州。18 年的下半年我开始重拾阅读的乐趣，小时候没有手机、电脑和互联网，最大乐趣之一就是读书，管它三教还是九流，只要好看我都照单全收。因此在那个时代，我从《傲慢与偏见》《简爱》《三国演义》等经典名著看到了《小兵传奇》《何以笙箫默》《诛仙》等网络小说，甚至还认识了侯龙涛、少年阿宾等人物…咳咳。</p>
<p>回到本书，我一开始的期望值其实非常低，有点担心它是一本“洗脑”的书（书一直是塑封状态，我没法大致翻阅）。不过开始阅读后却出乎我的意料，迅速意识到这是一本非常优秀的教材，可以帮助我们在生活中更加有效地沟通，从而推动以致达成我们的目标。书中提出了非暴力沟通的四个要素，即观察、感受、需要和请求，将它们串联起来的流程非常具备逻辑性，是一套思路清晰的沟通方法论。更具体一点说，因为我们不善于表达或带有某些情绪，经常会出现毫无意义甚至引发矛盾的沟通，这套方法论通过引导我们把话说清楚、表达更确切来达到沟通原有的积极目的。</p>
<span id="more"></span>

<p>书中列举了很多真实案例帮助我们理解和运用非暴力沟通技巧，还提供了一些实用的辅助练习。例如在评价一个人的时候，很显然说“欧文是个差劲的前锋”不如“欧文在过去的5场比赛中没有进一个球”更加理性客观，在谈论周遭的人或事时这种态度尤为重要。又比如父母常常会对子女说“你学习不好让我很失望”，那么真的是子女导致父母的伤心难过吗？为什么天下父母经常这么说而效果不明显？这样的表达方式给子女带来的感受是什么？</p>
<p>此外，随着我加入微软，了解了更多微软的新闻，惊奇地发现现任 CEO Satya 也会要求高管们阅读本书，这无疑加大了我对本书的认可度以及对微软的信心。</p>
<p>本书共十三章，每一章节都有一个简洁明了的小结，在此摘抄这些小结，以便未来温习与实践非暴力沟通方法时查阅。当然，也推荐给正在阅读这篇简记的读者们，希望你们掌握更加高效的沟通方式。</p>
<h2 id="第一章：让爱融入生活"><a href="#第一章：让爱融入生活" class="headerlink" title="第一章：让爱融入生活"></a>第一章：让爱融入生活</h2><h3 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h3><p>也许我们并不认为自己的谈话方式是“暴力”的，但我们的语言确实常常引发自己和他人的痛苦。后来，我发现了一种沟通方式，依照它来谈话和聆听，能使我们情意相通，乐于互助。我称之为“非暴力沟通”。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>非暴力沟通提醒我们专注于彼此的观察、感受、需要和请求。它鼓励倾听，培育尊重与爱，使我们情意相通，乐于互助。有些人用非暴力沟通理解自己，有些人用它改善人际关系，还有人借助它改进工作。在世界各地，非暴力沟通被用来协调各个层面的争论和冲突。</p>
<h2 id="第二章：是什么蒙蔽了爱？"><a href="#第二章：是什么蒙蔽了爱？" class="headerlink" title="第二章：是什么蒙蔽了爱？"></a>第二章：是什么蒙蔽了爱？</h2><h3 id="导读-1"><a href="#导读-1" class="headerlink" title="导读"></a>导读</h3><p>我从小就学着以貌似客观的语言表达自己。如果老师布置的作业我不想做，那他就“太过分了”。如果有人开车横冲到我面前，那他就是“混蛋”。如果女友想多一些体贴，那她就“太粘人了”。可是，如果我想多一些体贴，那她“冷漠得像个木头”。如果同事更关心细节，他就是“有强迫症”。反之，如果我更在乎细节，他就是“粗心大意”。</p>
<h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p>人天生热爱生命，乐于互助。可是，异化的沟通方式使我们难以体会到心中的爱。道德评判就是其中的一种，它将不符合我们价值观的人看作是不道德的或邪恶的。进行比较也是一种评判，它会蒙蔽对人对己的爱意。异化的沟通方式还淡化了我们对自己的思想、情感和行为的责任意识。此外，强人所难也会造成心灵的隔阂。</p>
<h2 id="第三章：区分观察和评论"><a href="#第三章：区分观察和评论" class="headerlink" title="第三章：区分观察和评论"></a>第三章：区分观察和评论</h2><h3 id="导读-2"><a href="#导读-2" class="headerlink" title="导读"></a>导读</h3><p>我从未见过愚蠢的孩子&#x2F;我见过有个孩子有时做的事&#x2F;我不理解&#x2F;或不按我的吩咐做事情&#x2F;但他不是愚蠢的孩子&#x2F;请在你说他愚蠢之前&#x2F;想一想，他是个愚蠢的孩子，还是&#x2F;他懂的事情与你不一样？</p>
<h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><p>非暴力沟通的第一个要素是观察。将观察和评论混为一谈，别人就会倾向于听到批评，并反驳我们。非暴力沟通是动态的语言，不主张绝对化的结论。它提倡在特定的时间和情境中进行观察，并清楚地描述观察结果。例如，它会说“欧文在过去的5场比赛中没有进一个球”，而不是说“欧文是个差劲的前锋”。</p>
<h2 id="第四章：体会和表达感受"><a href="#第四章：体会和表达感受" class="headerlink" title="第四章：体会和表达感受"></a>第四章：体会和表达感受</h2><h3 id="导读-3"><a href="#导读-3" class="headerlink" title="导读"></a>导读</h3><p>我在美国学校学了21年，却想不起有什么人问过我的感受。人们认为感受是无关紧要的，重要的是各种权威主张的“正确思想”。于是，我们被鼓励服从权威而非倾听自己。</p>
<h3 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h3><p>非暴力沟通的第二个要素是感受。通过建立表达感受的词汇表，我们可以更清楚地表达感受，从而使沟通更为顺畅。在表达感受时，示弱有助于解决冲突。此外，非暴力沟通还对表达具体感受的词语与陈述想法、评论以及观点的词语作了区分。</p>
<h2 id="第五章：感受的根源"><a href="#第五章：感受的根源" class="headerlink" title="第五章：感受的根源"></a>第五章：感受的根源</h2><h3 id="导读-4"><a href="#导读-4" class="headerlink" title="导读"></a>导读</h3><p>如果我们想利用他人的内疚，我们通常采取的办法是，把自己不愉快的感受归咎于对方。家长也许会和孩子说：“你成绩不好让爸爸妈妈伤透了心！”言下之意是，他们快乐或不快乐是孩子的行为造成的。看到父母的痛苦，孩子可能会感到内疚，并因此调整行为来迎合他们。遗憾的是，这种调整只是为了避免内疚，而非出自对学习的热爱。</p>
<h3 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h3><p>他人的言行也许和我们的感受有关，但并不是我们感受的起因。感受根源于我们自身的需要——非暴力沟通的第三个要素。听到不中听的话时，我们可以有四种选择：1）责备自己；2）指责他人；3）体会自己的感受和需要；4）体会他人的感受和需要。</p>
<p>对他人的职责、批评、评论以及分析反映了我们的需要和价值观。如果我们通过批评来提出主张，人们的反应常常是申辩或反击。反之，如果直接说出我们的需要，其他人就较有可能做出积极的响应。</p>
<p>社会文化并不鼓励我们揭示个人需要。对妇女来说，尤其如此。因为她们的形象常常和无私奉献联系在一起——这是社会对女性的期待。</p>
<p>对于大多数人来说，个人成长一般会经历三个阶段：（1）“情感的奴隶”——我们认为自己有义务使他人快乐；（2）“面目可憎”时期——此时，我们拒绝考虑他人的感受和需要；（3）“生活的主人”——我们意识到，虽然我们对自己的意愿、感受和行动负有完全的责任，但无法为他人负责。与此同时，我们还认识到，我们无法牺牲他人来满足自己的需要。</p>
<h2 id="第六章：请求帮助"><a href="#第六章：请求帮助" class="headerlink" title="第六章：请求帮助"></a>第六章：请求帮助</h2><h3 id="导读-5"><a href="#导读-5" class="headerlink" title="导读"></a>导读</h3><p>我们越是将他人的不顺从看作是对我们的排斥，我们所表达的愿望就越有可能被看作是命令。</p>
<p>一旦人们认为我们是在强迫他们，他们就会不太想满足我们的愿望。</p>
<h3 id="小结-5"><a href="#小结-5" class="headerlink" title="小结"></a>小结</h3><p>非暴力沟通的第四个要素是请求。我们告诉人们，为了改善生活，我们希望他们做什么。我们避免使用抽象的语言，而借助具体的描述，来提出请求。</p>
<p>在发言时，我们将自己想要的回应讲得越清楚，就越有可能得到理想的回应。由于我们所要表达的意思与别人的理解有可能不一致，有时，我们需要请求他人的反馈。特别是在集体讨论中发言时，我们需要清楚地表明自己的期待。否则，讨论可能只是在浪费大家的时间。</p>
<p>一旦人们认为不答应我们就会受到责罚，他们就会把我们的请求看作是命令。如果我们清楚地表达我们无意强人所难，人们一般会相信，我们提出的是请求而非命令。非暴力沟通的目的不是为了改变他人来迎合我们。相反，非暴力沟通重视每个人的需要，它的目的是帮助我们在诚实和倾听的基础上与人联系。</p>
<h2 id="第七章：用全身心倾听"><a href="#第七章：用全身心倾听" class="headerlink" title="第七章：用全身心倾听"></a>第七章：用全身心倾听</h2><h3 id="导读-6"><a href="#导读-6" class="headerlink" title="导读"></a>导读</h3><p>遭遇他人的痛苦时，我们常常急于提建议，安慰或表达我们的态度和感受。可是，倾听意味着全心全意地体会他人的信息——这为他人充分表达痛苦创造了条件。</p>
<h3 id="小结-6"><a href="#小结-6" class="headerlink" title="小结"></a>小结</h3><p>当他人遭遇不幸时，我们常常急于提建议，安慰，或表达我们的态度和感受。为了倾听他人，我们需要先放下已有的想法和判断，全心全意地体会对方。倾听他人有助于对他人的理解和接纳。</p>
<p>与此同时，不论别人用怎样的词语表达自己，我们都可以用心体会他们的观察、感受、需要和请求。有时，我们可以主动表达我们的理解，来帮助对方了解我们在何种程度上明白了他的意思。在交流的过程中，我们保持持续的关注，为对方的充分表达创造条件。</p>
<p>当我们痛苦得无法倾听他人时，我们需要（1）体会自己的感受和需要；（2）大声地提出请求；（3）换一个环境。</p>
<h2 id="第八章：倾听的力量"><a href="#第八章：倾听的力量" class="headerlink" title="第八章：倾听的力量"></a>第八章：倾听的力量</h2><h3 id="导读-7"><a href="#导读-7" class="headerlink" title="导读"></a>导读</h3><p>通过倾听，我们将意识到他人的人性以及彼此的共通之处，这会使自我表达变得容易些。</p>
<p>我们越是倾听他人语言背后的感受和需要，就越不怕与他们坦诚地沟通。</p>
<p>我们最不愿意示弱的时候往往是因为担心失去控制想显得强硬的时候。</p>
<h3 id="小结-7"><a href="#小结-7" class="headerlink" title="小结"></a>小结</h3><p>倾听使我们勇于面对自己的弱点。它还可以帮助我们预防潜在的暴力，使谈话生动有趣，并了解“不！”和沉默所反映的感受和需要。一次又一次，我见证了，倾听帮助人民治愈心灵的创伤。</p>
<h2 id="第九章：爱自己"><a href="#第九章：爱自己" class="headerlink" title="第九章：爱自己"></a>第九章：爱自己</h2><h3 id="导读-8"><a href="#导读-8" class="headerlink" title="导读"></a>导读</h3><p>我深信，出于对生命纯洁的爱，而不是出于恐惧、内疚、羞愧、职责或义务来选择生活，是爱惜自己的重要体现。</p>
<h3 id="小结-8"><a href="#小结-8" class="headerlink" title="小结"></a>小结</h3><p>非暴力沟通最重要的应用也许在于培育对自己的爱。当我们的表现不完美时，我们可以通过体会忧伤和自我宽恕，来看清个人成长的方向，以及避免自我惩罚。评价自己的行为时，我们专注于尚未满足的需要；这样，我们就不再依赖于羞愧、内疚、愤怒或沮丧的心理来寻求改变，而让爱主导我们的学习和成长。</p>
<p>同时，在日常生活中，我们主动根据需要和价值观来选择生活。我们的行为不再是为了履行职责、获得回报、逃避惩罚或避免感到内疚和羞愧。通过深入理解我们行为的动机，并用“选择做”来取代“不得不”，我们的生活将变得和谐并充满欢乐。</p>
<h2 id="第十章：充分表达愤怒"><a href="#第十章：充分表达愤怒" class="headerlink" title="第十章：充分表达愤怒"></a>第十章：充分表达愤怒</h2><h3 id="导读-9"><a href="#导读-9" class="headerlink" title="导读"></a>导读</h3><p>在我看来，愤怒是我们的思维方式造成的。它的核心是尚未满足的需要。</p>
<p>如果我们能够借助它来提醒自己——我们有需要没有得到满足，而我们的思维方式正使它难以得到满足，那愤怒就是有价值的。</p>
<h3 id="小结-9"><a href="#小结-9" class="headerlink" title="小结"></a>小结</h3><p>在生气时，批评和指责他人都无法真正传达我们的心声。如果想充分表达愤怒，我们就不能归咎于他人，而把注意力放在自己的感受和需要上。与批评和指责他人相比，直接说出我们的需要更有可能使我们的愿望得到满足。</p>
<p>表达愤怒的四个步骤是：（1）停下来，除了呼吸，什么都别做；（2）想一想是什么想法使我们生气了；（3）体会自己的需要；（4）表达感受和尚未满足的需要。有时，在第3步和第4步之间，我们需要先倾听他人。在得到倾听和理解之后，他们也就可以静下心来体会我们的感受和需要。</p>
<p>我们需要给自己充分的时间来学习和运用非暴力沟通。</p>
<h2 id="第十一章：运用强制力避免伤害"><a href="#第十一章：运用强制力避免伤害" class="headerlink" title="第十一章：运用强制力避免伤害"></a>第十一章：运用强制力避免伤害</h2><h3 id="导读-10"><a href="#导读-10" class="headerlink" title="导读"></a>导读</h3><p>我们都知道，惩罚将导致关系的疏远。一旦我们被看作是施暴的人，我们就很难得到友善的回应。</p>
<h3 id="小结-10"><a href="#小结-10" class="headerlink" title="小结"></a>小结</h3><p>在有些情形中，我们没有机会和他人交流，这时，我们也许需要使用强制力来保护自己和他人。我们这样做，是为了避免伤害，而不是为了惩罚他人。如果我们威胁他人或实施惩罚，人们常常会产生敌意和抵触心理。这样，彼此的关系将会疏远。同时，惩罚还可能使人忽视事情本身的意义，而把注意力放在不服从的后果上。如果我们试图通过惩罚来使人们认识自己的需要，那么，我们很可能适得其反。</p>
<h2 id="第十二章：重获生活的热情"><a href="#第十二章：重获生活的热情" class="headerlink" title="第十二章：重获生活的热情"></a>第十二章：重获生活的热情</h2><h3 id="导读-11"><a href="#导读-11" class="headerlink" title="导读"></a>导读</h3><p>通过运用非暴力沟通，我们不再试图分析自己或他人有什么毛病，而是用心去了解我们的需要，这样，我们的内心将逐渐变得平和。</p>
<h3 id="小结-11"><a href="#小结-11" class="headerlink" title="小结"></a>小结</h3><p>在情绪低落的时候，我们也许会怨天尤人。然而，如果我们以苛刻的态度对人对己，我们的心情也好不到哪里去。通过运用非暴力沟通，我们不再试图分析自己或他人有什么毛病，而是用心去了解我们的需要，这样，我们的内心将逐渐变得平和。一旦我们发现自己心底深处的愿望，并采取积极的行动，我们将会重获生活的热情。心理咨询和心理治疗行业的从业人员可以考虑借助非暴力沟通来与来访者进行坦诚的交流。</p>
<h2 id="第十三章：表达感激"><a href="#第十三章：表达感激" class="headerlink" title="第十三章：表达感激"></a>第十三章：表达感激</h2><h3 id="导读-12"><a href="#导读-12" class="headerlink" title="导读"></a>导读</h3><p>有一天晚上，当我向我的儿子布莱特指出他没做好家务活时，他反驳说：“爸，你想想，你是不是倾向于指出问题，而很少肯定我？”他的话在我脑海中盘绕了许久。</p>
<h3 id="小结-12"><a href="#小结-12" class="headerlink" title="小结"></a>小结</h3><p>在赞扬他人时，我们很少揭示内心活动，而把自己放在了裁判的位置。赞扬也常常被人用来实现个人目的。非暴力沟通鼓励我们充分表达感激。在表达感激时，我们说出：（1）对我们有益的行为；（2）我们的哪些需要得到了满足；（3）我们的需要得到满足后，我们是什么样的心情。</p>
<p>当别人以这样的方式表达对我们的感激时，我们可以与对方一起庆祝生命的美——既不自大，也不假谦虚。</p>
]]></content>
      <categories>
        <category>读书简记</category>
      </categories>
      <tags>
        <tag>communication</tag>
        <tag>nonviolent communication</tag>
        <tag>efficiency</tag>
        <tag>empathy</tag>
      </tags>
  </entry>
  <entry>
    <title>小议 Javascript 数组去重</title>
    <url>/2017/remove-duplicates-from-javascript-array/</url>
    <content><![CDATA[<p>几乎所有 Javascript （以下简称 js）初学者都会遇到的一个问题：如何（优雅地）去除数组中重复的元素。<br>这个问题在 stack overflow 上被赞了近五百次，不过这并不重要。重要的是，有热心网友给出了全面、专业的回答，让博主看了大呼过瘾。<br>在此对原文进行翻译，与大家一起分享。</p>
<span id="more"></span>

<p>注：下文中的“物件”对应英文”object”。</p>
<h1 id="“Smart”-but-naive-way"><a href="#“Smart”-but-naive-way" class="headerlink" title="“Smart” but naïve way"></a>“Smart” but naïve way</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">uniqueArray = a.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item, pos</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="title function_">indexOf</span>(item) == pos;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>最基本的版本：我们迭代整个数组，检查其中每一个元素在数组中第一次出现的位置与该元素实际的位置是否相等，如果不等则为重复元素。<br>使用 <code>filter</code> 的回调函数中的第三个参数 <code>self</code> ，可以避免数组变量的闭包问题（数组中的元素还是数组）。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">uniqueArray = a.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item, pos, self</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> self.<span class="title function_">indexOf</span>(item) == pos;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>尽管这种算法简洁明了，但是对于大型数组来说尤其缺乏效率（时间复杂度为 n^2）。</p>
<h1 id="Hashtables-to-the-rescue"><a href="#Hashtables-to-the-rescue" class="headerlink" title="Hashtables to the rescue"></a>Hashtables to the rescue</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">uniq</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> seen = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> seen.<span class="title function_">hasOwnProperty</span>(item) ? <span class="literal">false</span> : (seen[item] = <span class="literal">true</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通常使用的方法是将每个元素存入一张哈希表中，然后直接检查它是否存在。这保证了线性的时间复杂度，但存在至少两个缺点：</p>
<ul>
<li>由于在 JavaScript 中，哈希键 (key) 只能为字符串，这将导致上述代码无法区分数字和字符串数字。例如，<code>uniq([1,&quot;1&quot;])</code> 将只会返回 <code>[1]</code> 。</li>
<li>同理，例如 <code>uniq([&#123;foo:1&#125;,&#123;foo:2&#125;])</code> 这样具有相同键的物件也会被认为是一样的，仅得到 <code>[&#123;foo:1&#125;]</code> 。</li>
</ul>
<p>也就是说，如果你的数组中仅包含 js 的原始类型 (primitives) 且你无需在意它们的具体种类（例如它们全都是数字），这个算法是最佳的。</p>
<h1 id="The-best-from-two-worlds"><a href="#The-best-from-two-worlds" class="headerlink" title="The best from two worlds"></a>The best from two worlds</h1><p>结合上述两种方法，有一个通用的解决方案：原始类型使用哈希表查找，而物件使用线性查找…</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">uniq</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> prims = &#123;<span class="string">&quot;boolean&quot;</span>:&#123;&#125;, <span class="string">&quot;number&quot;</span>:&#123;&#125;, <span class="string">&quot;string&quot;</span>:&#123;&#125;&#125;, objs = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> a.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> type = <span class="keyword">typeof</span> item;</span><br><span class="line">        <span class="keyword">if</span>(type <span class="keyword">in</span> prims)</span><br><span class="line">            <span class="keyword">return</span> prims[type].<span class="title function_">hasOwnProperty</span>(item) ? <span class="literal">false</span> : (prims[type][item] = <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> objs.<span class="title function_">indexOf</span>(item) &gt;= <span class="number">0</span> ? <span class="literal">false</span> : objs.<span class="title function_">push</span>(item);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="sort-uniq"><a href="#sort-uniq" class="headerlink" title="sort | uniq"></a>sort | uniq</h1><p>还有一个选择是先对数组排序，然后去除与前一元素相等的元素：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">uniq</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="title function_">sort</span>().<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item, pos, ary</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> !pos || item != ary[pos - <span class="number">1</span>];</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>同理，由于 <code>sort</code> 方法无法直接对物件进行排序，因此这种方法对物件无效。另外存在一个副作用——原始数组已被改变。假如输入数组已经是有序的，则可以使用这种方法（同时去掉上述代码中的 <code>sort()</code> 方法）。</p>
<h1 id="Unique-by…"><a href="#Unique-by…" class="headerlink" title="Unique by…"></a>Unique by…</h1><p>有时候我们希望能基于一些条件而不仅仅是根据数值相等进行唯一化，例如过滤出有共性但是实际是不同的物件（后面会举例说明）。传递回调函数可以优美地解决这一需求。由于 <code>key</code> 预期会返回一个原始类型，因此哈希表在这里可以正常工作：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">uniqBy</span>(<span class="params">a, key</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> seen = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> k = <span class="title function_">key</span>(item);</span><br><span class="line">        <span class="keyword">return</span> seen.<span class="title function_">hasOwnProperty</span>(k) ? <span class="literal">false</span> : (seen[k] = <span class="literal">true</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>JSON.stringify</code> 就是一个特别有用的 <code>key</code> 回调函数，可以移除“看起来”一样但实际不同的物件：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">a = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>], [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">b = <span class="title function_">uniqBy</span>(a, <span class="title class_">JSON</span>.<span class="property">stringify</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b) <span class="comment">// [[1,2,3], [4,5,6]]</span></span><br></pre></td></tr></table></figure>

<p>如果 <code>key</code> 返回的不是原始类型，则需要依赖线性搜索：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">uniqBy</span>(<span class="params">a, key</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> index = [];</span><br><span class="line">    <span class="keyword">return</span> a.<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> k = <span class="title function_">key</span>(item);</span><br><span class="line">        <span class="keyword">return</span> index.<span class="title function_">indexOf</span>(k) &gt;= <span class="number">0</span> ? <span class="literal">false</span> : index.<span class="title function_">push</span>(k);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>或是使用 ES6 中的 <code>Set</code> 物件：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">uniqBy</span>(<span class="params">a, key</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> seen = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">    <span class="keyword">return</span> a.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> k = <span class="title function_">key</span>(item);</span><br><span class="line">        <span class="keyword">return</span> seen.<span class="title function_">has</span>(k) ? <span class="literal">false</span> : seen.<span class="title function_">add</span>(k);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(相比 <code>seen.has(k) ? false : seen.add(k)</code> ，有些人更喜欢 <code>!seen.has(k) &amp;&amp; seen.add(k)</code> )</p>
<h1 id="Libraries"><a href="#Libraries" class="headerlink" title="Libraries"></a>Libraries</h1><p><a href="http://underscorejs.org/#uniq">Underscore</a> 和 <a href="https://lodash.com/docs#uniq">Lo-Dash</a> 都提供了 <code>uniq</code> 方法，他们的算法与上述第一段代码类似，总结就是：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> result = [];</span><br><span class="line">a.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span><br><span class="line">     <span class="keyword">if</span>(result.<span class="title function_">indexOf</span>(item) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">         result.<span class="title function_">push</span>(item);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>其时间复杂度是二次方，但是有些额外的好处，例如封装了原生的 <code>indexOf</code> 方法、可以通过键进行唯一化（官方说法叫 <code>iteratee</code>）、对于有序数组有优势。</p>
<p>如果使用 jQuery 并且喜欢以美刀符号开头，则大概长这样：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.uniqArray = <span class="keyword">function</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> $.<span class="title function_">grep</span>(a, <span class="keyword">function</span>(<span class="params">item, pos</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> $.<span class="title function_">inArray</span>(item, a) === pos;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>同样的，也是第一段代码的变体而已。</p>
<h1 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h1><p>JavaScript 中函数呼叫的成本昂贵，因此上述方法即使简洁明了，但是并不高效。如果以效能为最高宗旨，将 <code>filter</code> 全部替换成回圈以避免多余的函数呼叫：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">uniq_fast</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> seen = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> out = [];</span><br><span class="line">    <span class="keyword">var</span> len = a.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">var</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">         <span class="keyword">var</span> item = a[i];</span><br><span class="line">         <span class="keyword">if</span>(seen[item] !== <span class="number">1</span>) &#123;</span><br><span class="line">               seen[item] = <span class="number">1</span>;</span><br><span class="line">               out[j++] = item;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这段丑陋的代码和第三段代码做了相同的事情，但是执行速度上快了一个数量级。</p>
<p>（测试代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">uniq</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> seen = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> seen.<span class="title function_">hasOwnProperty</span>(item) ? <span class="literal">false</span> : (seen[item] = <span class="literal">true</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">uniq_fast</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> seen = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> out = [];</span><br><span class="line">    <span class="keyword">var</span> len = a.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">var</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">         <span class="keyword">var</span> item = a[i];</span><br><span class="line">         <span class="keyword">if</span>(seen[item] !== <span class="number">1</span>) &#123;</span><br><span class="line">               seen[item] = <span class="number">1</span>;</span><br><span class="line">               out[j++] = item;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/////</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> r = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>],</span><br><span class="line">    a = [],</span><br><span class="line">    <span class="variable constant_">LEN</span> = <span class="number">1000</span>,</span><br><span class="line">    <span class="variable constant_">LOOPS</span> = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="variable constant_">LEN</span>--)</span><br><span class="line">    a = a.<span class="title function_">concat</span>(r);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">LOOPS</span>; i++)</span><br><span class="line">    <span class="title function_">uniq</span>(a);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;br&gt;uniq, ms/loop: &#x27;</span> + (<span class="keyword">new</span> <span class="title class_">Date</span>() - d)/<span class="variable constant_">LOOPS</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">LOOPS</span>; i++)</span><br><span class="line">    <span class="title function_">uniq_fast</span>(a);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;br&gt;uniq_fast, ms/loop: &#x27;</span> + (<span class="keyword">new</span> <span class="title class_">Date</span>() - d)/<span class="variable constant_">LOOPS</span>)</span><br></pre></td></tr></table></figure>
<p>）</p>
<h1 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h1><p>ES6 提供了 <code>Set</code> 物件，让事情变得简单许多：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">uniq</span>(<span class="params">a</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="keyword">new</span> <span class="title class_">Set</span>(a));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">uniq</span> = a =&gt; [...<span class="keyword">new</span> <span class="title class_">Set</span>(a)];</span><br></pre></td></tr></table></figure>

<p>需要注意的是，与 Python 不同，ES6 的 <code>set</code> 以插入顺序进行迭代，因此代码保证了原始数组的顺序。</p>
<p>无论如何，如果你需要一个唯一化的数组，为何不从正确地使用 <code>set</code> 开始呢？</p>
<h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><p>文章发在公司内网的技术论坛后，有一些很有价值的反馈。</p>
<p>有同学按照上述方法进行了测试，发现 demo 的第一种和第二种并不存在“数量级”的差异，另外 Set 的效率也并不高，比前两者都慢。</p>
<p>我随即也进行了测试，发现确实如此。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MacBook Air (13-inch, Early 2015) 8G Ram</span><br><span class="line">Chrome (版本 56.0.2924.87)</span><br><span class="line"></span><br><span class="line">uniq, ms/loop: 0.362</span><br><span class="line">uniq_fast, ms/loop: 0.171</span><br><span class="line">uniq_set, ms/loop: 1.728</span><br></pre></td></tr></table></figure>

<p>其次一位资深同学提出以下观点，很有启发：</p>
<blockquote>
<p>数组去重的关键点是：如何判断“重复”，是否完备可靠。</p>
<ol>
<li>数组类型的 <code>indexOf()</code> 方法不能处理 <code>NaN</code> 的情况</li>
<li><code>Set</code> 类型的key不支持Object类型，而且会区别对待 <code>1</code> 和 <code>&#39;1&#39;</code></li>
<li>关于性能测试。建议到jsperf上去写个case跑一跑，比如：<a href="https://jsperf.com/js-unique-array">https://jsperf.com/js-unique-array</a> ；而且要在多个浏览器下测试。因为不同内核对es语法的实现不一样，表现出来的性能也不一样</li>
</ol>
<p>这篇文章也讨论了数组去重问题：<a href="https://www.toobug.net/article/array_unique_in_javascript.html">https://www.toobug.net/article/array_unique_in_javascript.html</a></p>
</blockquote>
<hr>
<p>源文链接:<br><a href="http://stackoverflow.com/questions/9229645/remove-duplicates-from-javascript-array">Remove Duplicates from JavaScript Array</a></p>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>array</tag>
        <tag>remove duplicates</tag>
        <tag>stackoverflow</tag>
      </tags>
  </entry>
  <entry>
    <title>响应式网站设计基础</title>
    <url>/2017/rwd-fundamentals-note/</url>
    <content><![CDATA[<h2 id="Why-Responsive"><a href="#Why-Responsive" class="headerlink" title="Why Responsive?"></a>Why Responsive?</h2><h3 id="Setting-up-Chrome’s-Dev-Tools"><a href="#Setting-up-Chrome’s-Dev-Tools" class="headerlink" title="Setting up Chrome’s Dev Tools"></a>Setting up Chrome’s Dev Tools</h3><p>使用 Chrome 浏览器的开发者工具除了可以调试 PC 端的页面外，也可以模拟其他尺寸的设备进行调试。</p>
<span id="more"></span>

<p>首先打开 DevTools，点击设备反转按钮开启移动端视图：</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-1.avif"></p>
<p>如果想模拟特定的设备，可以点击 <code>设备列表</code> - <code>Edit…</code> ，以打开 Settings 列表；然后新增定制设备，设置 <code>Width</code> , <code>Height</code> , <code>Device pixel ratio</code> , <code>User agent string</code> 属性。</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-2.avif"></p>
<h3 id="Using-dev-tools-on-mobile"><a href="#Using-dev-tools-on-mobile" class="headerlink" title="Using dev tools on mobile"></a>Using dev tools on mobile</h3><ul>
<li><p>Android 设备</p>
<ol>
<li>PC 端和 Android 手机安装对应平台的 Chrome 浏览器</li>
<li>Android 手机开启隐藏的  <code>开发者选项</code> ，进入选项后勾选 <code>USB调试</code> 功能</li>
<li>手机连接电脑，打开各自的 Chrome 浏览器</li>
<li>在电脑的 Chrome 浏览器中登录 <code>chrome://inspect</code> ，可以看到连接的手机设备</li>
</ol>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-3.avif"></p>
<ol start="5">
<li>点击 <code>inspect</code> 功能，打开调试页面后即可像调试本地页面一样调试手机端的页面</li>
</ol>
</li>
<li><p>适用于 iOS 的移动工具</p>
<ul>
<li>请参考以下文章：<ul>
<li><a href="https://github.com/google/ios-webkit-debug-proxy">iOS WebKit 调试代理</a></li>
<li><a href="https://www.smashingmagazine.com/2014/09/testing-mobile-emulators-simulators-remote-debugging/2/">Testing Mobile: Emulators, Simulators And Remote Debugging</a></li>
</ul>
</li>
<li>如果觉得麻烦，也可以在 Chrome DevTools 中运行模拟器</li>
</ul>
</li>
</ul>
<h2 id="Starting-Small"><a href="#Starting-Small" class="headerlink" title="Starting Small"></a>Starting Small</h2><h3 id="Defining-the-Viewport"><a href="#Defining-the-Viewport" class="headerlink" title="Defining the Viewport"></a>Defining the Viewport</h3><p>Q：当我制作网页时，有时候内容过大溢出界面，又或者内容太小需要放大页面才能看清，这是怎么回事呢？</p>
<p>A：最大的问题是你的视窗没有设置好。</p>
<p>视窗（Viewport）是指浏览器显示内容的区域。不过不同设备的像素密度是不同的，例如某一 Chromebook 的屏幕分辨率是 2560 * 1700，但是浏览器全屏显示时，窗口的宽度是 1280 而非 2560。</p>
<h3 id="Pixels-pixels-and-more-pixels"><a href="#Pixels-pixels-and-more-pixels" class="headerlink" title="Pixels, pixels and more pixels!"></a>Pixels, pixels and more pixels!</h3><p>浏览器并不是根据屏幕硬件的像素宽度而工作的，而是根据 DIPs（Device Independent Pixels） 宽度。当硬件像素为 2560，而 DIPs 为 1280 时，DPR（Device Pixel Ratio）也就是 2 倍。</p>
<p>如果没有设定 meta viewport，浏览器会怎么样呢？</p>
<ul>
<li><p>在渲染网页的时候，如果它原本是显示在一个宽 980 DIPs 的屏幕上，现在显示在一个只有 360 DIPs 的屏幕上时，内容就会以超过 2 倍的比例被压缩。</p>
</li>
<li><p>然后浏览器为了内容的美观性，会进行一项名为 font boosting 的工作，试图放大页面中的主要内容，而其他内容则维持大小不变。（如下图所示）</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-4.avif"></p>
</li>
</ul>
<p>Quiz:</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-5.avif"></p>
 <br />

<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-6.avif"></p>
<h3 id="Setting-the-Viewport"><a href="#Setting-the-Viewport" class="headerlink" title="Setting the Viewport"></a>Setting the Viewport</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>width=device-width</code> ：指导页面针对具体设备进行宽度调整，使得页面可以匹配不同屏幕尺寸</li>
<li><code>initial-scale=1</code> ：添加初始缩放比例属性并赋值为 1，使得 DIPs 和 CSS 像素的比例是一比一。如果不把初始缩放比例设为 1，有的浏览器会在切换到横屏模式时依旧保持之前的页面宽度，而且它们还会使内容只进行比例缩放，而无法自动调整布局（Reflow）</li>
</ul>
<h3 id="Max-width-on-elements"><a href="#Max-width-on-elements" class="headerlink" title="Max-width on elements"></a>Max-width on elements</h3><p>CSS 是允许内容溢出其容器的，预防这一情况出现可以进行如下推荐的设置：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>, embed, <span class="selector-tag">object</span>, <span class="selector-tag">video</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tap-Target-Sizes"><a href="#Tap-Target-Sizes" class="headerlink" title="Tap Target Sizes"></a>Tap Target Sizes</h3><p>使用鼠标可以很轻松地点击到按钮等元素，但是如果使用手指，操作的精准度相比之下就糟糕许多。</p>
<p>我们的手指宽度大概是 10mm ，约等于 40 CSS 像素，所以按钮的大小至少要设置为 40*40px。推荐设置为 48*48px，这样能确保元素之间有足够的距离，也能照顾到手指更粗的人。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">48px</span>;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">48px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Start-Small"><a href="#Start-Small" class="headerlink" title="Start Small"></a>Start Small</h3><p>设计响应式网页的概念与过程和非响应式是一样的，除了前者需要多画几种宽度的设计稿以适应不同屏幕尺寸。</p>
<p>这里推荐从最小屏幕尺寸的页面开始设计，通常是手机设备。做完之后再接着做更大一点的，依次类推，直至页面宽度上限。从最小的屏幕做起，开发者就必须优先考虑什么是对用户最重要的（Prioritize content!）、什么操作是用户最常做的、什么内容是用户最希望在屏幕上看到的。如果从最大尺寸往小设计，一些重要的信息很可能会被删除。<strong>因此，明确内容的优先级，然后从小到大设计，最重要的内容永远都会留在页面上。无论用户使用什么样的设备，也能得到最完整的体验。</strong></p>
<p>除了设计上从小到大外，代码的编写也推荐如此，这样就能知道页面的风格和布局是否能兼容任何设备。此外，这样做也能帮助开发者从性能角度思考。</p>
<h2 id="Building-Up"><a href="#Building-Up" class="headerlink" title="Building Up"></a>Building Up</h2><h3 id="Adding-a-Basic-Media-Query"><a href="#Adding-a-Basic-Media-Query" class="headerlink" title="Adding a Basic Media Query"></a>Adding a Basic Media Query</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen and (min-width: 500px)&quot;</span> <span class="attr">href</span>=<span class="string">&quot;over500.css&quot;</span></span></span><br></pre></td></tr></table></figure>

<p>添加了上面的媒体查询属性后，”over500.css” 样式表将在 DIPs 宽度大于 500px 时应用。</p>
<p>如果查询 Media Query 的相关文档，References 中可能还会提到其他媒体类型如 <code>handheld</code> <code>projected</code> <code>embossed</code> ，其实这些类型并不起作用，可以先忽略。目前只需要掌握 <code>screen</code> 和 <code>print</code> （打印页面时使用）即可。</p>
<p>除了在 <code>&lt;link&gt;</code> 标签中使用媒体属性外，以下还列举了两种方式进行媒体查询。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">300px</span>) &#123;</span><br><span class="line">  <span class="comment">/* Set style here */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Complex Media Query */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">480px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">960px</span>) &#123;</span><br><span class="line">  <span class="comment">/* Set style here */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&quot;over500.css&quot;</span>) <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">500px</span>);</span><br></pre></td></tr></table></figure>

<p>不过由于性能的因素，应该避免使用 <code>@import</code> 方式！它是一个性能消耗和优先级都非常高的标签（It’s pretty expensive and perf matters），相比 <code>@media</code> 方式需要更多的 HTTP 请求。</p>
<p>另外不推荐 <code>min-device-width</code> 和 <code>max-device-width</code> 这两个属性，原因自己想吧；）</p>
<h3 id="Breakpoints-and-Picking-Them"><a href="#Breakpoints-and-Picking-Them" class="headerlink" title="Breakpoints and Picking Them"></a>Breakpoints and Picking Them</h3><p>使用媒体查询的 <code>min-width</code> 和 <code>max-width</code> 可以改变整个页面的布局，而页面布局改变时的那个宽度尺寸叫做间断点。以 <a href="https://medium.com/">medium.com</a> 来说，有 2 个间断点（ 于 2017.09 观察 medium 首页），观察间断点时建议从小的尺寸开始。</p>
<p>你永远不知道下一个热门的设备是什么，也不会知道两年后的流行趋势会是怎样，因此根据自己网页的内容寻找合适的间断点才是正道。</p>
<blockquote>
<p>我们不应该规定任何间断点，相反，我们应该使用内容作为指引找到它们。—— Scott Yale</p>
</blockquote>
<h3 id="Grids"><a href="#Grids" class="headerlink" title="Grids"></a>Grids</h3><p>当我们可以使用媒体查询和间断点控制 CSS 样式后，自然而然会想问，有没有什么常用的模式（Patterns）或基本策略（Strategies）可以参考。</p>
<p>在常用的一些模式中，最简单的当属动态网格系统（Grid Fluid System），可以参考 <a href="https://www.html5rocks.com/en/tutorials/">HTML5 Rocks</a> 作为范例。</p>
<p>在这个系统中有一些动态调整的纵列，当窗口变小时，它们将自动顺延到下一行。目前已经有一些优秀的框架可以使用，例如 Bootstrap、960px grid layout system。</p>
<h3 id="Flexbox"><a href="#Flexbox" class="headerlink" title="Flexbox"></a>Flexbox</h3><p>Flexbox 是目前最强大的布局工具之一，被广泛推荐，也已经被绝大多数浏览器支持。下面将会介绍一些基本语法，需要注意的是，在未来编写产品代码时，一定要包含所有版本的浏览器引擎前缀（Vendor Prefixed Version），以确保使用旧版浏览器的用户也能获得相同体验。</p>
<p>Flexbox 之所以功能强大，是因为它能够自动填充空白区域。如果一个元素周围出现了空白，它会自动填补上；而如果空间变得拥挤，元素会自动缩小。</p>
<p>使用 Flexbox 的第一步是加入 <code>display: flex;</code> 属性，这样容器内垂直排列的元素将会自动显示在一行内（ Flex 的默认堆放方式为横向堆放 <code>row</code> ）。此时拖动浏览器，无论宽度多少，横向堆放的元素们都不会换行。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>要改变这种情况，可以为容器添加 <code>flex-wrap: wrap;</code> 属性，这是在告诉浏览器，允许内部的元素换行。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Flexbox 还有一个有用的特性是利用 CSS order 属性来改变元素的次序。</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-7.avif"></p>
<h2 id="Common-Responsive-Patterns"><a href="#Common-Responsive-Patterns" class="headerlink" title="Common Responsive Patterns"></a>Common Responsive Patterns</h2><p>模式的变化很快，但也有一些通用的模式几乎能在任何设备上有不错的表现。响应式网页布局大致可以分为四种模式：Mostly Fluid、Column Drop、Layout Shifter 和 Off Canvas，有时候一个页面也会使用如 Column Drop 和 Off Canvas 的组合。</p>
<p>接下来将会讲解每种模式是怎样工作的，以及如何使用 Flexbox 和媒体查询技术来实现它们。注意在以下的示意图中，不同色块代表不同的内容区域。</p>
<h3 id="Column-Drop"><a href="#Column-Drop" class="headerlink" title="Column Drop"></a>Column Drop</h3><p>此布局共有两个间断点，在不同宽度时的排版如下图所示。</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-8.avif"></p>
<p>代码范例非常简单：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box dark-blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box light-blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex</span>: wrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">450px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.dark-blue</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.light-blue</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">75%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">550px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.dark-blue</span>, <span class="selector-class">.green</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.light-blue</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Mostly-Fluid"><a href="#Mostly-Fluid" class="headerlink" title="Mostly Fluid"></a>Mostly Fluid</h3><p>此布局与 Column Drop 模型相似，但是更像网格系统，最明显的区别在于当视窗宽度达到最大宽度时，两边会出现外边距而内容不再延展。</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-9.avif"></p>
<p>代码范例如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box dark-blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box light-blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box orange&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">450px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.light-blue</span>, <span class="selector-class">.green</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">550px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.dark-blue</span>, <span class="selector-class">.light-blue</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.green</span>, <span class="selector-class">.red</span>, <span class="selector-class">.orange</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">33.333333%</span>;		<span class="comment">/* <span class="doctag">TODO:</span> use &quot;flex: 1&quot; instead */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">700px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: auto;</span><br><span class="line">    <span class="attribute">margin-right</span>: auto;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Layout-Shifter"><a href="#Layout-Shifter" class="headerlink" title="Layout Shifter"></a>Layout Shifter</h3><p>Layout Shifter 布局模型应该是最灵活的响应式模型了，它有很多适用于不同设备的间断点，但最关键的是它的布局变化方式并不是单纯的重排到其它列的下方（参见下图中的红色列）。Flexbox 的亮点在这才真正凸显，因为我们可以利用 CSS 顺序属性来实现这种变化。</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-10.avif"></p>
<p>这次的代码范例稍微复杂一点：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box dark-blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">id</span>=<span class="string">&quot;container2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box light-blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">500px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.dark-blue</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#container2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">600px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.dark-blue</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">    <span class="attribute">order</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#container2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.red</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">    <span class="attribute">order</span>: -<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Off-Canvas"><a href="#Off-Canvas" class="headerlink" title="Off Canvas"></a>Off Canvas</h3><p>在此模型中，内容并不是垂直堆放的，而是将不常用的内容比如导航栏或者应用菜单放在屏幕外，只有当屏幕足够大的时候才显示出来。在小尺寸屏幕上，溢出画布的内容通常会在用户点击菜单按钮时出现。</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-11.avif"></p>
<p>代码范例如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">id</span>=<span class="string">&quot;drawer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dark-blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span> <span class="attr">class</span>=<span class="string">&quot;light-blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-tag">main</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">nav</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">300px</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">0.3s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">nav</span><span class="selector-class">.open</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">600px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">nav</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-flow</span>: row nowrap;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">menu.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  draw.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;open&#x27;</span>);</span><br><span class="line">  e.<span class="title function_">stopPropagation</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>点击<a href="http://udacity.github.io/RWDF-samples/Lesson4/patterns/off-canvas.html">此处</a>查看 Live demo。</p>
<p>Quiz: Off Canvas Visualization Quiz</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-12.avif"></p>
<h2 id="Optimizations"><a href="#Optimizations" class="headerlink" title="Optimizations"></a>Optimizations</h2><h3 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h3><blockquote>
<p>A picture is worth 1000 words.</p>
</blockquote>
<p>使用同一张图片时，改变其分辨率可能是最常用的方式之一。试想在笔记本电脑上显示一张标准图片，但显示一张两倍大的图片给一个更高 DPI 的显示器，例如一台 Retina iMac。又或者是在不同尺寸的设备上显示图片时，显示不同内容的图片。要实现这些效果，图片元素可以使用媒体查询来选择使用哪张图片。</p>
<h3 id="Responsive-Tables"><a href="#Responsive-Tables" class="headerlink" title="Responsive Tables"></a>Responsive Tables</h3><p>表格有很多花样，如果其列超过一定的数量，是很有可能溢出视窗的，在小屏幕上会产生水平滚动条。有一些方法可以解决这个问题，以下是三种参考方案。</p>
<h4 id="Hidden-Columns"><a href="#Hidden-Columns" class="headerlink" title="Hidden Columns"></a>Hidden Columns</h4><p>当视窗尺寸缩小时，Hidden Columns 实际上是根据表格的重要性来进行隐藏的。从小屏幕开始设计时，思考什么信息是最重要的，然后保留下来，隐藏其他不显示的内容。</p>
<p>Hidden Columns 最大的问题在于隐藏了内容，如果这些被隐藏的内容刚好是用户想知道的就麻烦了。如果可以，请使用缩写而不是完全隐藏内容。</p>
<p><img data-src="https://cdn.joouis.com/rwd-fundamentals-note-13.avif"></p>
<h4 id="No-More-Tables"><a href="#No-More-Tables" class="headerlink" title="No More Tables"></a>No More Tables</h4><p>当视窗小于一定值时，表格会瓦解，并重组成长列表。这种方法的好处是所有数据都是可见的，无论视窗尺寸多大。</p>
<h4 id="Contained-Scrolling"><a href="#Contained-Scrolling" class="headerlink" title="Contained Scrolling"></a>Contained Scrolling</h4><p>为了把表格放在视窗中，最简单的做法就是把它放在一个 <code>div</code> 里，然后设置宽度为 100%，最后设置 <code>overflow-x: auto;</code>。虽然表格还是会占据同样的宽度，但是可以用滚动条在视窗中拖动查看。</p>
<h3 id="Fonts"><a href="#Fonts" class="headerlink" title="Fonts"></a>Fonts</h3><p>如果一段文字的每一行太短或太长，阅读起来都会让人感到不舒服，因此理想的文字行宽很重要。这是个很有技术含量的问题，目前已经有一些研究成果表明，依据使用的字体、显示的设备不同，每行 45 个字符到 90 个字符都是合理的。不过，<strong>在网页中大概每行 65 个字符是最常见的</strong>。这并不是硬性规定，但是个不错的建议。与此同时，行宽也是选择断点时的重要参考因素之一。</p>
<p>此外，用户的阅读体验也非常重要。以字体的大小和行高来举例：在不同设备上字体需要足够的大以保证用户看得清楚，通常建议至少设为 16px；而行高至少有 1.2em 才不会使文字看起来太拥挤。</p>
<h3 id="Minor-Breakpoints"><a href="#Minor-Breakpoints" class="headerlink" title="Minor Breakpoints"></a>Minor Breakpoints</h3><p>除了选择令布局显著改变的主断点（Major Breakpoints）外，增加副断点来实现一些小的改变是很有帮助的。例如，在主断点之外调整元素的外边距，或者给一些内容增大字号使其更容易阅读（布局上也会更加自然一点）。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li>Udacity - <a href="https://classroom.udacity.com/courses/ud893">Responsive Web Design Fundamentals</a></li>
<li>PageSpeed Insights - <a href="https://developers.google.com/speed/docs/insights/ConfigureViewport">Configure the Viewport</a></li>
</ul>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>note</tag>
        <tag>rwd</tag>
        <tag>web</tag>
        <tag>flex</tag>
        <tag>css</tag>
        <tag>tutorial</tag>
        <tag>responsive</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器端渲染姿势探索</title>
    <url>/2017/server-side-rendering-review/</url>
    <content><![CDATA[<p>服务器端渲染（Server-Side Rendering，以下简称 SSR）并非是一门新技术，早期就有 Java, PHP 等后端语言进行页面渲染，后来 JavaScript 兴起、 Jquery, Backbone, React, Vue 等视图框架流行，前端逐渐夺回了渲染的地盘。随着如 Express, Koa 等 Node Web 应用程序框架的出现，SSR 以同构渲染（isomorphic rendering）的方式再次强势归来。</p>
<span id="more"></span>

<p><img data-src="https://cdn.joouis.com/server-side-rendering-review-1.png"></p>
<p>由于 SSR 在初次请求页面时已经包含了页面所需的数据内容（甚至是 CSS 和 JS 脚本），因此带来了两点好处：</p>
<ul>
<li>首屏性能：省去异步请求数据的时间</li>
<li>SEO 优势：防止 SEO 爬虫因缺少异步请求而错失的关键内容</li>
</ul>
<p>当然在同构渲染模式下，前后端都由前端工程师进行开发，这无形中也是一个很大的优势。</p>
<p>下面笔者将结合自己参与过的几个应用，分享在 SSR 方面的一点探索心得。</p>
<h2 id="从0到1：不求甚解，先摆个姿势再说"><a href="#从0到1：不求甚解，先摆个姿势再说" class="headerlink" title="从0到1：不求甚解，先摆个姿势再说"></a>从0到1：不求甚解，先摆个姿势再说</h2><p>笔者之所以会用到 SSR，现在回想起来也有点偶然：那个时候笔者的前主管经过一番调研，发现淘系的前后端分离框架 Midway 不错，于是基于它开发了一个轻量级的 Web 应用。</p>
<p>Midway 内置了一款名为 XTemplate 的模板引擎（类似 Nunjucks 的轮子），那时候身为前端小白的笔者看了这玩意，心想不就是一个 HTML 的超集么，虽然是方便那么一丢丢，但是为什么会有这类模板引擎，没想明白。</p>
<p>在没有吃透这项技术的情况下，笔者和师兄写出了 Xtpl 和 Vue “水乳交融” 的代码，而整个页面渲染逻辑如下：</p>
<p><img data-src="https://cdn.joouis.com/server-side-rendering-review-2.jpg" alt="uml-old"></p>
<p>由于业务长期对页面性能方面缺乏需求，大家都觉得这套方案没啥问题，即使偶尔在登入、刷新时会出现<strong>一些排列整齐的「{{}}」符号一闪而过</strong>，也只被解释成这就是稍微有点慢。</p>
<p>意识到这个姿势有问题时笔者已经换了一个团队，完全没有前端工程基础，打造一套服务于当前业务的高效前端开发体系是首要目标。在回顾之前使用的技术栈时，针对 SSR 笔者一下子就想到了两个问题（OS：“你个傻X当初想什么去了…”）：</p>
<ol>
<li>既然客户端要异步请求表格数据，为何一开始不直接存在 DOM 中发过去？</li>
<li>需要 Vue 渲染的内容，能不能用模板引擎（如 XTemplate）渲染？如果能为什么要留到客户端渲染？</li>
</ol>
<p>第一个问题讨论的就是 SSR 的主要价值之一，在文章开头已经介绍过；而第二个问题后面还会有详细讨论。总而言之，之前的那种设计思路，完全废掉了这项技术，相比单纯的客户端渲染还浪费了服务器上模板引擎解析的时间，尽管理论上这个性能损耗极小。</p>
<h3 id="姿势小结"><a href="#姿势小结" class="headerlink" title="姿势小结"></a>姿势小结</h3><p>使用 SSR 的原则应当是尽量把页面所需的数据都渲染或存在页面中，能节省一次或多次 HTTP 请求时间；需要大量数据的图表是个例外，但这种情况更合适的做法应该是首次粗粒度显示、后续再通过异步请求灵活调整。另外能在服务器端渲染的内容尽量使用模板引擎渲染，后续客户端的工作再交由 Vue 等框架来做。</p>
<p>至于收益嘛，就看异步请求的数量和当下的网速了。</p>
<h2 id="同构还是不同构，这是个问题！"><a href="#同构还是不同构，这是个问题！" class="headerlink" title="同构还是不同构，这是个问题！"></a>同构还是不同构，这是个问题！</h2><p>书接上文，有一个问题是 Xtpl 能否替代 Vue 渲染一些内容，其实这个问题反过来问才更合适：<strong>React, Vue 官方都已支持 SSR，甚至出现了 Next.js 和 Nuxt.js 这样的定制 Web 框架，是否还需要使用 Xtpl 之类的模板工具？</strong></p>
<p>既然做技术选型，优缺点的对比必不可少。</p>
<p>先说 React, Vue 这样的同构渲染，最大的好处就是一套 JS 代码在服务端和客户端是共用的。以 React 为例，使用 <code>renderToString</code> 或 <code>renderToStaticMarkup</code> 将客户端的组件转化为字符串供服务端使用，具体的实现可以参考 <code>引用2</code>。同构的好处反过来也就是使用模板渲染的坏处，在 UI 框架必备的前提下，多学习、使用、调试一门语言，成本肯定会增加。</p>
<p>但是使用模板的好处也是存在的，首先是性能上的优势。</p>
<p>笔者使用 Rax 提供的跑分方法对主流渲染框架&#x2F;引擎进行了性能测试，具体结果如下。测试结果以每秒钟执行测试代码的次数（<em>Ops</em>&#x2F;<em>sec</em>）显示，这个数值越大渲染性能越好。可以看到 Xtpl 的性能远超 React, Vue 等框架，这是因为 React 等框架在渲染时需要构造 vDOM 然后才能输出 HTML，而 Xtpl 这样的模板引擎只需要在模板上做简单的“翻译”命令即可。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">React#</span><span class="language-bash">renderToString x 540 ops/sec ±2.43% (78 runs sampled)</span></span><br><span class="line"><span class="meta prompt_">Rax#</span><span class="language-bash">renderToString x 878 ops/sec ±5.38% (74 runs sampled)</span></span><br><span class="line"><span class="meta prompt_">Inferno#</span><span class="language-bash">renderToString x 1,111 ops/sec ±6.35% (70 runs sampled)</span></span><br><span class="line"><span class="meta prompt_">Preact#</span><span class="language-bash">renderToString x 557 ops/sec ±6.72% (67 runs sampled)</span></span><br><span class="line"><span class="meta prompt_">Vue#</span><span class="language-bash">renderToString x 233 ops/sec ±36.37% (68 runs sampled)</span></span><br><span class="line"><span class="meta prompt_">Marko#</span><span class="language-bash">renderToString x 4,580 ops/sec ±5.25% (73 runs sampled)</span></span><br><span class="line"><span class="meta prompt_">Xtpl#</span><span class="language-bash">renderFile x 4,606 ops/sec ±7.13% (53 runs sampled)</span></span><br><span class="line">Fastest is Marko#renderToString,Xtpl#renderFile</span><br></pre></td></tr></table></figure>

<p>除此之外，Xtpl 的优势就是在开发 Memory Analysor 等应用时积累的业务代码和经验了，没有学习成本，当业务压力大时，先顶一阵子也没什么问题；）</p>
<p><em>注：现在无论是 React 还是 Vue 都对 SSR 进行了优化，通过缓存策略极大地改善响应时间并减少服务器的负载，延伸阅读可参考 <code>引用4</code> <code>引用5</code>。下图为 React 针对 SSR 优化的前后性能对比图。</em></p>
<p><img data-src="https://cdn.joouis.com/server-side-rendering-review-3.png" alt="React SSR Opt"></p>
<h3 id="姿势小结-1"><a href="#姿势小结-1" class="headerlink" title="姿势小结"></a>姿势小结</h3><p>这是在最近开发一款新应用时遇到的问题，考虑到项目中第一次使用 React 和 Webpack 进行开发构建，为了进度的平稳，还是先采用 Xtpl +  React 这样的混合方案，等未来迭代时再逐步替换为同构方式。得益于模块化的开发风格，Xtpl 和 React 各司其职，完全解耦。</p>
<h2 id="请求不要放在一个篮子里"><a href="#请求不要放在一个篮子里" class="headerlink" title="请求不要放在一个篮子里"></a>请求不要放在一个篮子里</h2><p>某一次笔者特意给自己挖了个坑，想看看什么时候会掉下去，没想到很快就如愿以偿了&#x3D;。&#x3D;</p>
<p>前文总结时已经提到过，既然是请求首屏数据，就只需要先获取第一屏的内容，并且如果遇到大量数据的图表时还应调整粒度进行“压缩”。但是为了体会到那种慢的感觉，笔者特意把页面所有的数据都请求完了才进行渲染，而页面内容包含三图一表…</p>
<p>起初完全感觉不到这样做的危害，直到数据库库表里的数据达到百万条，一条 SQL 请求语句需要 6-7s 时，页面载入的速度就令人很不爽了。</p>
<h3 id="姿势小结-2"><a href="#姿势小结-2" class="headerlink" title="姿势小结"></a>姿势小结</h3><p>和 SSR 相关的解决办法其实就是初次渲染时只请求首屏数据，其他数据待客户端加载完毕后再异步请求。</p>
<p>不过既然都提到了这个例子，也顺带说一下还做了其他哪些事：</p>
<ul>
<li>添加 SQL 请求中的条件字段为索引</li>
<li>根据业务背景增加有意义的条件限制</li>
<li>服务端 cache 住可以复用的共享数据</li>
</ul>
<h2 id="报告！HTML字符串有小动作"><a href="#报告！HTML字符串有小动作" class="headerlink" title="报告！HTML字符串有小动作"></a>报告！HTML字符串有小动作</h2><p>又在某一个项目开发中，笔者将首屏数据存在了 DOM 里，准确地说是将数据存放在了一个节点的属性中，当客户端加载代码后再读取数据进行后续工作。代码示例如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.xtpl --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;module1&quot;</span> <span class="attr">data</span>=<span class="string">&quot;&#123;&#123;data&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/public/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Module1</span> <span class="keyword">from</span> <span class="string">&#x27;./module1.jsx&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> src = $(<span class="string">&#x27;#module1&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;data&#x27;</span>);</span><br><span class="line"><span class="title class_">Module1</span>.<span class="title function_">render</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(src));</span><br></pre></td></tr></table></figure>

<p>后来在 review 代码时，发现一个显而易见的性能优化点：DOM 的操作很昂贵， 将数据存放在 DOM 中再通过 API 获取属于多此一举。Xtpl 文件作为模板，实质上就是字符串，数据插入到字符串的任意位置都是允许的，只是最终的意义不同。如果将数据写到模板的 <code>&lt;script&gt;</code> 中，客户端加载时数据就直接到内存里了。</p>
<p>改进后的代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.xtpl --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;module1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  window.INITIAL_DATA = </span><span class="template-variable">&#123;&#123;&#123;<span class="name">data</span>&#125;&#125;&#125;</span><span class="language-xml">;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Module1</span> <span class="keyword">from</span> <span class="string">&#x27;./module1.jsx&#x27;</span>;</span><br><span class="line"><span class="title class_">Module</span>.<span class="title function_">render</span>(<span class="variable language_">window</span>.<span class="property">INITIAL_DATA</span>);</span><br><span class="line"><span class="keyword">delete</span> <span class="variable language_">window</span>.<span class="property">INITIAL_DATA</span>;</span><br></pre></td></tr></table></figure>

<p>不过笔者对于性能方面的担忧是多余的（<strong>DOM 操作昂贵没错，但不是贵在这里！可从浏览器的工作原理角度出发思考这一问题</strong>），这两段代码的执行效率几乎没有差别：在数据（字符串形式）量达到 36.7 KB 时，第一份代码对 DOM 的读取操作和 <code>JSON.parse()</code> 方法都是在 5ms 以内完成的。</p>
<p>反倒是页面体积有了明显的变化：</p>
<table>
<thead>
<tr>
<th></th>
<th>数据存在DOM中</th>
<th>数据存在内存中</th>
</tr>
</thead>
<tbody><tr>
<td>Page1</td>
<td>42.1KB</td>
<td>23.9KB</td>
</tr>
<tr>
<td>Page2</td>
<td>67KB</td>
<td>38.6KB</td>
</tr>
</tbody></table>
<p>原因很有趣，当把数据存在 DOM 中时，需要先将 JS Object 转换为 JSON 格式的字符串。随后在 JSON 字符串写入 HTML 的过程中，所有的双引号都被转义字符 <code>$quot;</code> 所替换。而将数据直接写在 <code>&lt;script&gt;</code> 中就不存在这种情况，简单的字符串拼接后，就是一条赋值语句。经模板生成的网页源代码如下所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Previous --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;module1&quot;</span> <span class="attr">data</span>=<span class="string">&quot;&#123;<span class="symbol">&amp;quot;</span>key<span class="symbol">&amp;quot;</span>:value&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Now --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;module1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="property">INITIAL_DATA</span> = &#123;<span class="string">&quot;key&quot;</span>:value&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="姿势小结-3"><a href="#姿势小结-3" class="headerlink" title="姿势小结"></a>姿势小结</h3><p>在 UTF-8 编码下，每当 JSON 字符串中出现一个双引号，前者就要比后者多耗费 5 个字节，当数据量很大时，页面体积就会出现很明显的差异。这在无线端等网络状况不稳定的业务场景中值得关注。</p>
<h2 id="引用-延伸阅读"><a href="#引用-延伸阅读" class="headerlink" title="引用&amp;延伸阅读"></a>引用&amp;延伸阅读</h2><ol>
<li><a href="https://github.com/camsong/blog/issues/8">精读前后端渲染之争</a></li>
<li><a href="http://blog.techbridge.cc/2016/08/27/react-redux-immutablejs-node-server-isomorphic-tutorial/">一看就懂的 React Server Rendering（Isomorphic JavaScript）入門教學</a></li>
<li><a href="http://www.alloyteam.com/2017/01/react-from-scratch-server-render/">从零开始React服务器渲染</a></li>
<li><a href="https://github.com/raxjs/server-side-rendering-comparison">server-side-rendering-comparison</a></li>
<li><a href="https://github.com/walmartlabs/react-ssr-optimization">React Server-Side Rendering Optimization Library</a></li>
<li><a href="https://ssr.vuejs.org/zh/caching.html">Vue.js 服务器端渲染指南 - 缓存</a></li>
</ol>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>SSR</tag>
        <tag>server-side</tag>
        <tag>render</tag>
        <tag>isomorphic</tag>
      </tags>
  </entry>
  <entry>
    <title>从硅谷软件企业学习到的细节</title>
    <url>/2016/the-details-i-learned-from-software-company-in-silicon-valley/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Ryan 哥是我在 Lilee 实习时的同事，按时间来说他比我还晚进入 Lilee (笑)。虽然相处天数很短，但对他印象深刻：个子不高，酷酷的很有型，CMU 毕业，湾区大公司工作经历。在公司每季(？)的新人介绍茶话会上，发现他也是一个很好聊的人。最后我打包滚蛋时，他也是为数不多写邮件给我践行的人。</p>
<p>就在这个月中旬， Ryan 哥在自己的脸书上写了这里分享的这篇文章，颇具视野和深度，对于我这样的新人来说很受启发，因此也搬运到我的博客上来。本文的<a href="https://www.facebook.com/ryanyang328/posts/10105200442293837"><strong>原出处</strong></a>，里面还有一些精彩评论，有兴趣也可以去看看。</p>
<span id="more"></span>

<h1 id="從矽谷軟體企業學習到的細節"><a href="#從矽谷軟體企業學習到的細節" class="headerlink" title="從矽谷軟體企業學習到的細節"></a>從矽谷軟體企業學習到的細節</h1><p>回來台灣一年多了，在矽谷工作時，我總是想說服大家一起回台灣做點小貢獻。但現在，我的確認為台灣需要有更多人出國看一看拓展新的視野，未來有機會再帶回更多新的思維回到家鄉，和台灣原本就保有的優點融合。 之前很高興有機會到交大還有 Sudo 的活動分享在矽谷工作時感受到的文化和經驗。最近還是有許多朋友有興趣想了解台灣軟體業除了以往在資源上的限制，還有什麼樣不同的文化和制度對目前軟體產業造成衝擊和差異性。所以趁這個機會分享一些目前在台灣軟體產業觀察和聽聞的現況，去探討我們可能可以自省的方面。在我們努力衝刺的過程中，希望可以提及幾項在台灣軟體產業看似還普遍缺乏的思維和觀點：</p>
<ol>
<li>人是公司最大的資產：在台灣是企業選擇員工，在矽谷是員工選擇企業。矽谷企業普遍認為，人是公司最大的資產。除了公司選擇比較多以外，企業團隊也總是很感激員工的加入， 並且願意提出更好的 counter-offer 努力把好的人才吸引過來。同時，員工也可以用更健康的心態去 negotiate 自己的 offer 讓彼此都達到滿意的結果。 以人為本，公司對人的尊重，是大家最嚮往的文化。</li>
<li>人格特質 vs 學歷&#x2F;技術：學歷的迷思應該慢慢被擺脫。在台灣工作，學經歷在一開始就會非常被注重和強調，導致公司對你有了預期，但這個預期指的是”技術”這方面而已。學經歷不錯的人很容易被公司預期在短期內要有所產出。 如果短期內沒有達成，公司會默默的打分數，一切完全以短期技術可行性，當成參考依據來預期未來你對公司可能的影響。矽谷的企業各式各樣的學經歷的人更多元，但比較不一樣的是，公司不會太明顯對每個人預設立場。這之中最大的不同點是，美國公司對你的預期不會純粹以技術為考量，而是整個人的人格特質和全面性。公司願意花更多資源投資每個員工，以幫助公司了解 team member 的人格和個性，積極度，潛力，爆發力，做事的 tempo 和 learning curve 的時間，儘管小公司也有類似的認知。回到以往很多 CMU 的學弟妹都會問我說，INI 會不會是 ECE &amp; CS 底下合開的學院造成在美國找工作的影響。我告訴他們，工作以後就會了解到那並不是矽谷公司在找尋人才唯一強調的事。不論是 Google, Apple 還是各大公司 &#x2F; startup，在面試聊天時，除了去了解一個人的個性之外，也需要考白板的 coding 測試你的技術能力。考題的例子包括：資料結構的 binary tree，queue，linked-list，演算法的 sorting，Dijkstra，八皇后題目，OS 和系統相關的 synchroization，networking, process &#x2F; thread，memory management，brain teaser 相關題目像是給兩個雞蛋用數學來測出雞蛋在哪一層會破掉的問題 (我很喜歡的題目之一)。聽起來好像很制式化的流程，但其實對於矽谷的公司來說，那才是他們注重的基本能力和了解一個人是否能與團隊有良好的溝通能力。不論你是什麼學歷，只要你夠積極去充實這些知識，保有好奇心和培養良好的 teamwork，好的人格特質和個性加上技術才是公司想招募的人。</li>
<li>Code review &#x2F; QA &#x2F; 開發流程時間：這是許多公司心裡記得很重要可是卻最不願意花時間和錢投資的項目，原因免不了是 time to market 跟追趕 project 進度。台灣許多公司想要開發高利潤產品走向國際，策略模式卻還是採取以往 hit and run 模式的代工思維。全世界企業都有時間壓力，除了技術以外，我們更應該開始強調軟體管理的學問。Code review 的重要性建立在一個軟體開發的長遠計畫之上，注重的是開發者的邏輯思維和 coding style 會不會影響目前和未來的產品，還有 code 提供給其他工程師的可讀性。開發時，要想著這個軟體未來可能會變幾千行，幾萬行，甚至是幾十萬行的產品。而每個人的 coding style 有所不同，公司需要訂立 coding guideline 來規劃基本規則以方便大家產出 code。這種觀念的缺乏導致很多 code 沒有被 review，或是變成 reviewer 灌輸 developer 他心裡想要的 coding style。而 QA 的方面，感覺各企業對此重視的程度很多年來還是嚴重不足，自然沒有扎實的測試方法論和流程來把關品質。對於開發者來說，應該普遍建立 QA 實際上是公司第一個客戶的觀念，所以測試流程像是 smoke test，regression test，white box testing 在交予 QA 前應該是已經需要被建立好的。Hit and run 的策略短期內也許可以拿到客戶，但長久下來如果價格和品質無法成正比，這樣的關係無法長久。再者，以往累積的 technical debt 在未來需要花的時間還是得花。如果企業想賣高規格的東西，一定要確保品質再出貨。在美國做一樣的工作，一樣執行 waterfall 或 agile 的流程，時間的安排卻是全然不同。因為 time to market 的原因所以在固定時間需要出貨這點是可以理解的，這個時候 PM 很重要。有經驗的 PM 要滿足客戶需求同時也要能替工程師在一定時間內斟酌合理的開發數量和可行性，將開發者方面的測試考慮進去是必要的技能。</li>
<li>缺乏純技術者的 career path 和職務的 misplace：以技術面來說，台灣軟體技術人才眾多，演算法人才也不在少數，但是普遍需要廣度的員工包山包海，所以欠缺了 Technical Leader 和系統架構師類型的人物的培養。專才需要長期在廣度和深度的訓練和培養，並有著對任何事物的好奇心來整合元件而建立有門檻的大架構，而培養對於任何事物的好奇心回到了教育的本質。普遍來說，台灣企業往往將年資久的員工或是技術領導者全都佈署在管理人的 career path 上。這樣造成的問題是，技術者只有鑽研技術的熱情，並沒有技能去處理跟人相關的事物，導致職缺的misplace。美國的公司普遍在升遷時會要你選擇未來你期許的 career path 是往管理的路或是技術領導者的職涯前進。適合經營管理的人會經歷 software engineer -&gt; senior engineer -&gt; manager -&gt; senior manager -&gt; director -&gt; VP，而技術領導者會經歷 software engineer -&gt; senior engineer -&gt; tech lead -&gt; senior tech lead -&gt; architect &#x2F; distinguished engineer. 這不僅清楚的替每個升遷的人規劃了更適合自己的路，也替公司員工找到能夠真正管理人的主管進而幫助公司整體的成長和營運。</li>
<li>本位主義和信賴問題：在人文方面，部門的本位主義過於強烈，所以職場上卡到了許多人跟人的問題或是各單位之間沒有太多向心力是比較多朋友都會提及的經驗。主管應該多培養底下的人有獨立思考的能力，有些時候花些時間跟員工單獨聊天，可以發現目前很多年青人對公司有很多不同的想法和未來的期許。以一個健康的角度來看，主管應該多鼓勵底下的人發言討論，或是鼓勵員工有一天能夠超越自己，但很重要的前提是要彼此尊重。然而，為什麼主管要鼓勵員工超越自己？其實員工有良好的表現不僅幫助了自己，更重要的是同時也幫助了主管和公司向上成長。現在的時代注重團體戰而非英雄主義，不論是員工或主管都應該要知道在不同位子看事物的角度一定有所不同。如果彼此一直無法了解對方的思考方式和表達方式，每個人就始終無法由內而外說服自己為了同個目標前進。矽谷企業的強盛給我的感覺是建立在共存共榮的 teamwork 文化，職權區分明確，良好的溝通管道，傾向對事不對人的模式而一同完成公司的目標。</li>
<li>缺乏文件整理和 mentor，造成資訊落差：一樣是卡在時間資源的問題，過去的人需要趕時間出貨所以沒有多餘的時間把以往的經驗，技術資訊，或是曾犯過的錯記錄下來，導致新進員工沒有文件可參考也沒有特定的 mentor 可仿效。新人往往會不好意思請求協助，所以元老級的人物每天理解事物越來越快，但新進員工卻越來越追趕不上前人而造成資訊和技術程度上的落差，會逐漸形成公司的一個隱性問題。所以鼓勵大家，可以多使用協作工具，如果在開發時遇到問題，或者是發現以往的技術開發沒有參考文件，都應該踴躍幫忙公司記錄和整理文件，如同開源軟體的無私貢獻。當越來越多同伴到達同樣的水平，才會有可能替企業創造更多的可能性。</li>
</ol>
<p>整體而言，這幾年開始可以感受到台灣軟體業的興起和企業對軟體的重視程度提高許多，這是非常正向的鼓勵。同時也有更多學術單位，政府和企業都願意投入更多的金錢，人力，研發資源在軟體產業中。想要捨棄台灣長久以來的代工思維而轉型成高利潤高門檻的產業結構痛苦是必然的過程。很多對台灣企業看來好像要有多出的時間才能執行的項目，其實對於矽谷的企業來說其實都應該是需要注重的細節和基本功。台灣企業如果想要成功走向國際，也會需要很多領導者願意推翻自己過往的經驗和思維，並且有足夠的心胸去接受新世代的觀念而學習。回台灣後當然也總算可以開始體會為什麼台灣年青人都想往外出走，去到一個更健康的工作環境學習。但希望大家還是不要對台灣失望，繼續花點時間感受問題。除了技術的加強，如果更多人能開始注重以人為本的概念，強調更多軟體管理方面細節的改善，就算台灣短期無法被影響，但未來還是有許多值得被改變的事。大家共勉之。</p>
]]></content>
      <categories>
        <category>技术人生谈</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>silicon valley</tag>
        <tag>software</tag>
        <tag>inspiration</tag>
      </tags>
  </entry>
  <entry>
    <title>Vuetify Playground - A responsive playground to try all UI components at once</title>
    <url>/2020/vuetify-playground/</url>
    <content><![CDATA[<p>年前基于 Vue 写一个 H5 Demo 前调研了目前流行的 UI 框架，VuetifyJS 应该是目前做得最大的，但是没有 mint-ui、mand-mobile 等国内 UI 框架的 demo 应用可以快速试玩所有组件，只能在官网的 Storybook 一个个点开看，同时也无法快速检查移动端的适配性做得如何。</p>
<p>因此我做了个简单的 Playground 应用托管在 Github Page 上，PC 可访问 <a href="https://github.com/Joouis/vuetify-playground">Github 仓库</a>查看，手机端直接扫码试玩。</p>
<p>欢迎尝试，欢迎讨论！</p>
<p><img data-src="https://i.v2ex.co/ehJnMEw7b.png"></p>
]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>mobile</tag>
        <tag>responsive</tag>
        <tag>vuetify playground</tag>
        <tag>vue</tag>
        <tag>vuejs</tag>
        <tag>vuetify</tag>
        <tag>vuetifyjs</tag>
        <tag>demo</tag>
      </tags>
  </entry>
  <entry>
    <title>Weex Android 发车指南（已弃车）</title>
    <url>/2017/weex-android-quick-tutorial/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>还记得刚入职见到第一个 YunOS App 时，笔者问师兄 <code>Manifest.json</code> 文件是干嘛用的，师兄说如果你有 Android 开发经验的话就会明白了。当下笔者立马找了本电子书放在桌面准备苦读，结果…时至今日未曾宠幸过。对于没有一点 Java 经验的笔者来说，不知道何时才会迈出无线开发第一步，直到最近遇见了 Weex。</p>
<span id="more"></span>

<p>Weex 是集团去年推出的移动开发框架，Apache 顶级开源项目，已经被手淘、天猫等业务广泛使用，经历了双十一等活动的考验。它与传统的移动开发不同、也是吸引笔者的地方，即使用 Web 前端技术进行开发且能达到 Native 级别的性能体验。</p>
<p>既然笔者毫无 Java 以及 Android 开发经验，必然会站在 <strong>纯前端人员的视角</strong> 来带领大家上车。此外，Weex 在集团内外的热度真的是非常之高，相关的文档、博文也是数不胜数，因此文中将会使用一些引用来保证心得的简洁同时给大家更多延伸的内容。</p>
<h2 id="什么是-Weex-？"><a href="#什么是-Weex-？" class="headerlink" title="什么是 Weex ？"></a>什么是 Weex ？</h2><p>理论角度，<a href="http://weex.apache.org/cn/guide/intro/how-it-works.html">官方文档</a>上已经说得挺清楚的了，一张流程图可以说明一切。</p>
<p><img data-src="https://cdn.joouis.com/weex-android-quick-tutorial-weex-flow.png"></p>
<p>不过回到实际开发，Weex 是什么，这点在没有上手前很难从官方文档中得出结论。（网上有不少声音吐槽 Weex 文档写的不好，笔者持保留态度，不过确实从落地的角度来说，缺乏一些必要的细节，这个后面还会再提。此外作者还有一个疑问，官方文档究的目标群体究竟是谁？是传统的移动端开发者？还是 Web 前端背景的开发人员？至少笔者觉得不是后者。）</p>
<p>以实践的角度，在笔者看来，Weex 有两部分，一是前端技术方面的自动化框架，在PC端帮助开发人员快速进行 vue 文件的开发、打包等，这部分可以在官网<a href="http://weex.apache.org/cn/guide/set-up-env.html">搭建开发环境</a>的教程中获取；二是使 JS 代码能在移动端成功运行起来的各平台 SDK 套件或源码，在编译各平台安装包时加入，<a href="http://weex.apache.org/cn/guide/integrate-to-your-app.html">文档</a>中也有提及。</p>
<p>除了 Weex 本身，其配套的开发工具比较丰富。有脚手架 <a href="http://weex.apache.org/cn/guide/tools/toolkit.html">weex-toolkit</a> 、移动端的预览工具 <a href="http://weex.apache.org/cn/playground.html">Weex Playground</a> 、在线代码执行工具 <a href="http://dotwe.org/vue">Weex Playground</a> 等。</p>
<p>最后，官方<a href="http://weex.apache.org/cn/references/">手册</a>介绍了 Weex 支持的 element 组件、内建的模块、各平台的 API 等开发时需要查阅的东东，很全面，在此不赘述。</p>
<p>至于 Vue 我想 Web 前端开发者或多或少都是熟悉的，在此不多做介绍。</p>
<h2 id="如何在-Android-上运行一个最简单的例子？"><a href="#如何在-Android-上运行一个最简单的例子？" class="headerlink" title="如何在 Android 上运行一个最简单的例子？"></a>如何在 Android 上运行一个最简单的例子？</h2><p>官方的入门教程包中含一段最简单的 <code>Hello world</code> 例程，既然 Weex 是为移动端设计，那么是个工程师都想赶快在手机上跑起例程来看看效果，而非在线上模拟器中体验。此时就暴露了文档的缺失——读完《<a href="https://weex.incubator.apache.org/cn/guide/integrate-to-your-app.html">集成 Weex 到已有应用</a>》一文档后，对没经验的人来说，甚至没办法成功编译出 APK 文件，可谓是出师未捷身先死。</p>
<p>同时，现实总是残酷的。想在 Android 上运行 Weex 应用，还是需要懂得配置 Android 应用、编写一些 Java 代码，这对前端工程师来说，又是一次 <del>雪上加霜</del> 成长的机会&#x3D;。&#x3D;</p>
<p>在这里推荐两篇文章帮助大家快速上车，正是通过它们笔者成功实现了最小例程的编译及运行：</p>
<p>第一篇是来自 ATA 的《<a href="https://www.atatech.org/articles/57091">weex新手指南</a>》，其中包含一个 “知乎日报” 应用源码的详细分析，从中可以知道 <strong>为什么要编写那些 Java 代码</strong> 。</p>
<p>第二篇文章名为《<a href="http://blog.csdn.net/mengzuixilou/article/details/52690960">Weex Android 初体验</a>》，其更多地覆盖了实践细节上的问题，并且提供了一个类似最小例程的 github repo，可以 <strong>参考其 Java 源码编写自己的代码</strong> 。</p>
<h2 id="踩坑心得"><a href="#踩坑心得" class="headerlink" title="踩坑心得"></a>踩坑心得</h2><ol>
<li>Weex 环境中没有 DOM，因此无法使用像 Jquery 之类关于 DOM 操作的类库。同样的道理，Weex 中样式只支持 <code>px</code> 单位，无法使用 <code>em</code> , <code>rem</code> 。</li>
<li>Weex 中页面宽度是以 750px 作为标准的！更多信息请参考《<a href="http://coderyi.com/posts/weex1/">Weex学习与实践（一）</a>》，评论区勾股还贴出了社区讨论的链接。</li>
<li>开发时一定要使用手机版的 Playground 进行预览，而不是观察本地浏览器中的画面！</li>
</ol>
<h2 id="更多阅读"><a href="#更多阅读" class="headerlink" title="更多阅读"></a>更多阅读</h2><ul>
<li>《<a href="https://www.atatech.org/articles/65406">WEEX系列文章汇总</a>》：Weex 官方的 ATA 文章，入口帖</li>
<li>《<a href="https://www.atatech.org/articles/58474">关于Weex，你想了解的一切都在这里</a>》：又一 Weex 官方的 ATA 文章，入口帖</li>
<li>《<a href="https://yq.aliyun.com/articles/57996">weex vs react-native</a>》：同为前端无线技术，不对比就难以了解 Weex 的诉求是什么，对吧</li>
<li>《<a href="https://www.atatech.org/articles/58910">Weex总结之Android Weex工程搭建趟坑</a>》：通俗易懂的实践文</li>
<li>《<a href="https://www.atatech.org/articles/57091">weex新手指南</a>》：针对最简单的 Android Weex 代码做了详细说明，并提供了一个详细案例（知乎日报）的分析和 github 源码</li>
</ul>
<h2 id="姿势观摩"><a href="#姿势观摩" class="headerlink" title="姿势观摩"></a>姿势观摩</h2><ul>
<li><a href="https://github.com/Hanks10100/weex-vue-examples">Weex Vue Examples</a>：包含很多基本组件使用的范例</li>
<li><a href="https://github.com/weexteam/weex-hackernews">weex-hackernews</a>：很牛逼的 weex 版 hackernews app，包含 Android 工程在内所有的代码，亲测编译 APK 到 7.0 系统中运行</li>
<li><a href="https://github.com/vuejs/vue-hackernews-2.0">vue-hakcernews-2.0</a>：想了解更多 Vue 开发可以关注此 repo，web 版 hackernews，Vue 作者亲自开发</li>
</ul>
<h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><h3 id="没有详细的文档讲解如何产出最终-APK-文件，蛋疼的-CSS-写法，以及种种…"><a href="#没有详细的文档讲解如何产出最终-APK-文件，蛋疼的-CSS-写法，以及种种…" class="headerlink" title="没有详细的文档讲解如何产出最终 APK 文件，蛋疼的 CSS 写法，以及种种…"></a>没有详细的文档讲解如何产出最终 APK 文件，蛋疼的 CSS 写法，以及种种…</h3><h3 id="已弃坑（微笑脸"><a href="#已弃坑（微笑脸" class="headerlink" title="已弃坑（微笑脸"></a>已弃坑（微笑脸</h3>]]></content>
      <categories>
        <category>Web 前端</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>javascript</tag>
        <tag>app</tag>
        <tag>mobile</tag>
        <tag>web</tag>
        <tag>tutorial</tag>
        <tag>vue</tag>
        <tag>weex</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>观影简记：《Revolution OS（操作系统革命）》</title>
    <url>/2019/watching-notes-revolution-os/</url>
    <content><![CDATA[<p>这是我的<a href="https://joouis.com/2019/watching-notes-revolution-os/">嵌入式笔记</a>第一篇，原文写于2015年。</p>
<p>这篇笔记是当年参加Embedded System 2015课程的作业之一。Jserv的课程使我受益良多，也帮助我迈入了计算机科学的殿堂。他的课程在成大是出了名的“硬”，信息量巨大，上课基本就是划重点加答疑，课下需要大量时间去自学和实践。同时他也一直鼓励学生参与开源活动，甚至把作业发布到例如Hackpad（现今Dropbox Paper）、HackMD等协同文档平台上，既可以作为自己的网络备份（这也是为什么我还能找到这些“黑历史”😂），也可以供其他人参考、交流。</p>
<p>2016年随着Hackpad被Dropbox收购并推出新的产品Paper，Hackpad上的数据也被自动移植到了Paper上。在这次数据自动迁移中，当年的不少作业笔记被遗失。在2019年的尾声，我会陆续将仅存的少量有意思、有干货的笔记从Dropbox Paper中翻出来放到博客中，也算是对当年热血岁月的一次纪念。</p>
<span id="more"></span>



<h2 id="Revolution-OS"><a href="#Revolution-OS" class="headerlink" title="Revolution OS"></a><a href="https://youtu.be/vWwvh3036Fw">Revolution OS</a></h2><p>链接和下方的影片来自YouTube，外网可看~</p>
<div class="video-container"><iframe src="https://www.youtube.com/embed/vWwvh3036Fw" frameborder="0" loading="lazy" allowfullscreen></iframe></div>



<h2 id="關鍵人物、事件"><a href="#關鍵人物、事件" class="headerlink" title="關鍵人物、事件"></a>關鍵人物、事件</h2><ul>
<li><p>Eric Raymond: Author, “The cathedral and the bazaar”</p>
</li>
<li><p>Linus Torvalds</p>
</li>
<li><p>Bruce Perens: Author, Open source Definition</p>
</li>
<li><p>Richard Stallman</p>
<ul>
<li>哲學觀念：<ul>
<li>Whoever sitting at the computer, should be able to do whatever he wants. And somebody else who was there yesterday shouldn’t be controlling what you do today. </li>
<li>A free software refers not to price but to freedom, so think of free speech not free beer. The freedoms that I’m talking about are the freedoms to make changes if you want to, or hire somebody else to make changes for you if you’re using a free software for your business. To redistribute the copies to share with other people, and to make improvements and publish them so other people can get benefit of them too.</li>
<li>Copyleft</li>
<li>GPL(General Public License)</li>
<li>1984.01 GNU started</li>
<li>GNU is recursive acronym XDD</li>
</ul>
</li>
</ul>
</li>
<li><p>BSD(12:36終於第一次提到)</p>
<ul>
<li>關於BSD電影裏提到的太少，詳細補充借用Jserv的《<strong>從 Revolution OS 看作業系統生態變化</strong>》：<ul>
<li>作為技術創新者，BSD 在本紀錄片只零星出現四次 (談及 Apache 的成功歸於開發者社群, GNU 計畫源始, 開放原始碼授權, 對 Microsoft 提出反托拉斯訴訟)，幾乎一面倒向 Linux，實在可惜</li>
<li>增添 Berkeley Unix &#x2F; BSD 發展歷程、和 AT&amp;T 的官司爭議</li>
</ul>
</li>
</ul>
</li>
<li><p>Michael Tiemann: Co-Founder, Cygnus Solutions</p>
</li>
<li><p>Larry Augustin: Co-Founder, VA Linux Systems</p>
</li>
<li><p>ERL: 啓發GNU與Linux商業應用的誕生地</p>
</li>
<li><p>Linux: Monolithic</p>
</li>
<li><p>GNU Hurd: <a href="http://zh.wikipedia.org/wiki/GNU_Hurd">http://zh.wikipedia.org/wiki/GNU_Hurd</a></p>
</li>
<li><p>Brian Belhendorf: Apache Web Server，使得Linux第一次在商業市場上大獲成功</p>
</li>
<li><p>RedHat Software: 首間上市的Linux公司</p>
</li>
<li><p>Netscape</p>
<ul>
<li>第一個參與開放原始碼的大公司，爲了對抗IE</li>
<li>後來的Mozilla</li>
</ul>
</li>
<li><p>Open Source vs Free Software</p>
</li>
<li><p>資料庫軟體供應商的倒戈</p>
</li>
<li><p>Linux Users Groups</p>
</li>
<li><p>Linux World Conference</p>
</li>
</ul>
<h2 id="思考與疑問"><a href="#思考與疑問" class="headerlink" title="思考與疑問"></a>思考與疑問</h2><ul>
<li><p>昨天看了一遍，感覺很爽，今天再看一遍，把想法都寫出來</p>
</li>
<li><p>6:27 Stallman在信息裏說安全機制不過是個玩笑，讓我想到，自由軟體&#x2F;開源軟體如何確保我們使用的安全性，如果有人利用它的易修改來惡意傳播帶有問題的軟體，會不會是個災難？</p>
</li>
<li><p>7:30 Bill Gates提到的軟體知識產權問題，我覺得並沒有錯(當然本片站在開源者的角度肯定是否定態度)。開源和閉源是兩種不同的價值觀，無論是哪種價值觀，從它的出發點去考慮都是合理的，最後也都被證明是可以賺錢、成功的。所以我覺得如今這個多元化的社會，開源和閉源同時存在、相互競爭是非常正常的現象。</p>
</li>
<li><p>另外不得不說，微軟這麼多年屹立不倒，也得益與Bill Gates大學念得法律系，面對各種官司都能從容不迫(雖然不是他去打官司)。多元化的社會，如果追求更高的目標，對自己的定位不能僅僅只是懂技術的工程師，有時候還需要更多東西。</p>
</li>
<li><p>11:05 Stallman想到自己就是一個OS開發者，決定自己開始幹時，我想到多少次似曾相識，很多成功人士都是這麼說的”XXX不好用，我乾脆自己來做一個”。我們很多時候都在抱怨，卻沒有動力去用自己的專業知識解決問題。往往行動起來的人，就成功了。</p>
</li>
<li><p>從1984年開始GNU計劃，到1990年Stallman等人才寫完了UNIX上各種免費的套件包，還沒有寫kernel，工程量的浩大和困難可見一斑</p>
</li>
<li><p>14:29 Stallman一開始對釋出源代碼也是存有戒心的，人類的天性吧</p>
</li>
<li><p>16:45 Augustin談到自己去找工作時身邊的人用的都是自己寫的程式，這就像Jserv老師說的找工作時給HR或主管秀出自己的Google搜索結果一樣，簡單有效</p>
</li>
<li><p>20:33 Stallman分析自由軟體如何能賺錢，邏輯太精彩了，壟斷往往百害而無一利</p>
</li>
<li><p>24:11 Linus提出自己開始寫一個OS，完全沒有提到Minix</p>
</li>
<li><p>30:47 Linus在被問到”有人建議該寫成GNU&#x2F;Linux”時認爲只有GNU自己發佈的Linux Distribution才能叫GNU&#x2F;Linux(或隨他們怎麼稱呼)。但是所有版本的Linux毫無疑問都用到GNU的各種系統軟體，Stallman在意的可能是大家(特別是非IT業的人，但這部分人才是未來更廣闊的目標羣體)只記住了Linux，而忽視了GNU的貢獻吧</p>
</li>
<li><p>36:42 Augustin談到自由軟體找風投，那個時候幾乎所有風投都不太信任自由軟體，可見此時自由軟體並未獲得主流的認可</p>
</li>
<li><p>48:35 Stallman在談到爲什麼他支持Free Software而不是Open Source時顯得更像一位哲學家，其實也更像一個保持童真的小孩或者說是理想主義者。我還是更支持Perens所說的，自由軟體和非自由軟體可以共存。</p>
</li>
<li><p>58:25 電影又開始“攻擊”微軟了，我個人一直認爲微軟是家偉大的公司，推動了平民化電腦市場，使得普通百姓也可以輕鬆使用電腦。不過壟斷確實不是一件好事，Linux等OS的飛速發展可以迫使微軟努力向前走(1:01:17畫面中的“Microsoft Welcome the Linux Community”無論是公關還是誠心的歡迎都是一個很好的舉措，有大企業該有的氣度，至於爭論的話題，個人覺得推給OEM沒問題)</p>
</li>
<li><p>1:02:47 “共產主義”這個問題更多是意識形態上的東西，電影裏就可以看出，當這些開源人士與社會主流意見不同時，又因爲行爲上有共產的思想，就被說成是“共產主義”。實際上意識形態這種東西，被統治階級拿來使用，畢然是要求人人信服的(至少在表面上)，不然如何維繫穩定。至於把“共產主義”和Open Source扯在一起，真的是有夠搞笑的(特別是Eric迴應的那副表情)</p>
</li>
<li><p>VA Linux首次IPO真的讓人吃驚，開盤價30塊，期間達到了320、340塊，最後收盤價299塊，打破了最高開盤交易記錄，what the fxxk!!! 科技創造奇蹟!!!</p>
</li>
<li><p>最後關於RedHat和VA Linux的兩個鏡頭是想說黃金時代後的泡沫崩潰嗎？Linux未來發展該何去何從還有待進一步的觀望？</p>
</li>
</ul>
<h2 id="字幕勘誤"><a href="#字幕勘誤" class="headerlink" title="字幕勘誤"></a>字幕勘誤</h2><ul>
<li>2:11  “它有12萬使用者”—-&gt;“它有1200萬使用者”</li>
<li>28:58 “(約238萬新臺幣)”—&gt;”(約17萬5千新臺幣)”(91-92年匯率大概爲TWD1&#x3D;USD 0.04)</li>
<li>36:33 “2萬5千行程式碼”—&gt;”25萬行程式碼”</li>
</ul>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>embedded system course</tag>
        <tag>os</tag>
        <tag>open source</tag>
        <tag>free software</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在 X86-64 下比较精准地测量系统性能</title>
    <url>/2019/x86-performance-qna/</url>
    <content><![CDATA[<p>这篇博文来自 Facebook 「2016年系統軟體課程」小组里的一个<a href="https://www.facebook.com/groups/system.software2016/permalink/1124571464289024/">问答</a>。背景是正在修 Jserv 课程的一位同学 Louie Lu 在对作业 Phonebook 进行性能测试时，疑惑自己的电脑系统同时也跑着一堆别的应用如浏览器、音乐播放器等，那么怎样才能确认硬件资源是被他的测试程序最大化使用了呢？</p>
<p>这个问题非常有趣，和经典面试题 “What happens when you type google.com into your browser and press enter?” 有异曲同工之妙。更重要的是，Jserv 邀请了两位业界前辈做了精彩回答。</p>
<p>无论在 Facebook 还是微信公众号，零碎的知识总会随着时间慢慢被遗忘。但是有的话题所包含的知识已经由点及面，因此沉淀为一篇博文也许是更好的归宿。</p>
<span id="more"></span>




<h2 id="问"><a href="#问" class="headerlink" title="问"></a>问</h2><h3 id="Louie-Lu-September-25-2016"><a href="#Louie-Lu-September-25-2016" class="headerlink" title="Louie Lu - September 25, 2016"></a>Louie Lu - September 25, 2016</h3><p>請問一下，我們要怎麼在 x86-64 底下測出比較精確的 performance 呢？<br>　<br>當我在測 phonebook 的時候，我還跑著 chromium、spotify、lxde 這些程式，那我怎麼證明 32k 的 L1 cache 都是由 phonebook 在使用呢？<br>　<br>還有，現在的 CPU 都會自動調節 clock speed，又怎麼能保證我測的時候都是在 max speed 測試，如果是用在論文的數據上面的話，要怎麼樣才能提出一個有可信度的實驗資料…</p>
<h2 id="答"><a href="#答" class="headerlink" title="答"></a>答</h2><h3 id="Champ-Yen"><a href="#Champ-Yen" class="headerlink" title="Champ Yen"></a>Champ Yen</h3><ol>
<li>先回答簡單的 CPU 部份，這部份透過調整 cpu governor 為 performance 就可以將 CPU 固定為最高頻率，這點 Windows 也有對應的設定。</li>
<li>Cache 的問題比較複雜，但是如果就字面上來說，回答很簡單，當 CPU 切換到 phonebook 後在 OS scheduler 決定 context-switch 之前就只有該 process 在後續時間會影響到 L1 I&#x2F;D cache。因此該探討的是在 context-switch 間 cache 暨存的資料該如何處理，這部份是 VIVT, VIPT, PIPT 的問題了。<br>而這個問題又參雜了 “跑著 chromium、spotify、lxde 這些程式”，也就是要詢問 core 之間的行為對於 cache 的交互影響。但這與 cache 設計機制有關，因為 cache 的導入本身是 transparent 的，因此這又與 CPU vendor 有關。加上 cache 架構也因處理器設計而不斷地改變，光是 cache 設計考量就有分為 exclusive 與 inclusive 管理兩種，甚至還可能因為 multi-level cache 而混合使用（eg: L1&#x2F;L2 間 exclusive，與 L3 inclusive），對於多核之間 shared cache（eg: L3 in Core-i）彼此之間是競逐關係，因此這的確是個問題。但這影響對於 L1 並不是直接的，而是間接的，這問題要思考的點是當 per-core cache（eg: L1&#x2F;L2 in Core-i）都 cache miss 時，會由 shared cache 的效益來決定效能。只能說在這時的確會有影響（畢竟 cache 就是為了減少 miss penalty）。但是精確掌握這影響是幾乎不可能的（因為是runtime 的問題，試著思考 Core-i 中 L3 中混雜了所有 running process 各自多少資料是動態變化的），要探究的應該是受影響的機率與可能的變化。<br>但是對於 procedure 本身的分析，精確分析還是有其必要，而至於怎麼 “精確” 評估，就看你要多 “精確” 了。你要 best case 可以透過相對 clean 的環境去跑（shared cache 幾乎是為測試程式所使用），像是 console-only，減少背景程式的情況再由 profiler 提供，要再更精確可以透過 FPGA 去做單一 process（對於 ARM 系統而言這件事有些公司與單位有作），若想對於 cache 上的管理機制精確評估（這就真的很精確了），需要做 cache 管理機制上的分析，就需要 cpu emulator or architecture simulator。但是回歸實務上該思考的另一點是這樣作法的意義，要記住 “Any measurement that you make without the knowledge of its uncertainty is completely meaningless.”。除非你的執行的環境是完全的靜態環境，否則重點應該放在 variation 的評估，而這點就必須導入 model 並且算出 shared cache 的使用情況的 best&#x2F;worst case 的情況，並且有系統性方法的去分析與歸納出對效能的影響。</li>
</ol>
<h3 id="Scott-Tsai"><a href="#Scott-Tsai" class="headerlink" title="Scott Tsai"></a>Scott Tsai</h3><p>Champ Yen 大上面的討論很完整，我來扮演助教，補充一些 Linux 下工具的使用方式。</p>
<ol>
<li><p>CPU frequency scaling 用 “cpupower frequency-{info,set}” ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cpupower frequency-info <span class="comment"># typically set to &#x27;powersave&#x27; by default</span></span><br><span class="line">cpupower frequency-set -g performance</span><br></pre></td></tr></table></figure>

<p>cpupower 由 linux-tools-common (Ubuntu) 或 kernel-tools (Fedora) 套件提供。</p>
<blockquote>
<p><strong>Louie Lu</strong>：intel 的 governor 好像都沒有給 userspace 了，變成用 performance 但指定為 -d 3.5G 卻不會用全速跑的狀況..</p>
<p><strong>Scott Tsai</strong>：最簡單的「解法」是不要用 –min, –max 來限制 CPU frequency 而是讓 CPU bound 的 code 跑一陣子而後取時間測量的中位數。</p>
<p>要觀測 CPU frequency 可以看 “powertop” 的 “frequency stats” 。<br><strong>Louie Lu</strong>：說的也是，應該做到 Jim Huang 有提到的，95% 信賴區間的統計數據才是。</p>
</blockquote>
</li>
<li><p>Linux 下，用 “lstopo” 指令可以列出機器的 cache 架構。lstopo 由 “hwloc” 套件提供。</p>
<p><img data-src="https://cdn.joouis.com/x86-performance-qna-1.jpg"></p>
</li>
<li><p>在實體機器上測，真的要不被其他執行中的程式影響，還是要把系統變成（幾乎）只跑你的程式。操作上：</p>
<ul>
<li><p>開機進入 single user mode（請自行 google）；</p>
</li>
<li><p><code>perf stat --detail /bin/true</code> ，把 &#x2F;bin&#x2F;true 替換成你的程式。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Performance counter stats <span class="keyword">for</span> <span class="string">&#x27;/bin/true&#x27;</span>:</span><br><span class="line"></span><br><span class="line">0.264133 task-clock (msec) <span class="comment"># 0.549 CPUs utilized </span></span><br><span class="line">0 context-switches <span class="comment"># 0.000 K/sec </span></span><br><span class="line">0 cpu-migrations <span class="comment"># 0.000 K/sec </span></span><br><span class="line">46 page-faults <span class="comment"># 0.174 M/sec </span></span><br><span class="line">943,098 cycles <span class="comment"># 3.571 GHz </span></span><br><span class="line">735,484 instructions <span class="comment"># 0.78 insn per cycle </span></span><br><span class="line">134,926 branches <span class="comment"># 510.826 M/sec </span></span><br><span class="line">4,595 branch-misses <span class="comment"># 3.41% of all branches </span></span><br><span class="line">197,277 L1-dcache-loads <span class="comment"># 746.885 M/sec </span></span><br><span class="line">11,454 L1-dcache-load-misses <span class="comment"># 5.81% of all L1-dcache hits </span></span><br><span class="line">5,176 LLC-loads <span class="comment"># 19.596 M/sec </span></span><br><span class="line">2,696 LLC-load-misses <span class="comment"># 52.09% of all LL-cache hits</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>也可以用專門分析 CPU microarhitecture 效能的模擬器。<br>再次強調，模擬器很多套，要用「專門模擬 CPU microchitecture 效能」的。</p>
<p>這種模擬器中，最容易上手的大概是 callgrind。它模擬獨立的 L1 D$ 與 I$ 與 shared last-level cache。（$ 讀作 cache，因為英文中”現金”, cash, 音近 cache）</p>
<p>另外，看看 cachegrind 的 <a href="http://valgrind.org/docs/manual/cg-manual.html?fbclid=IwAR2MpxcrUi93xTTh5C3jo_nRnI4Bwa1jb3T6rOhruDjiSl9sURt8ybfuKa8#cg-manual.annopts.accuracy">“Accuracy” 一節所列出的模擬器限制</a>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">valgrind --tool=callgrind --simulate-cache=<span class="built_in">yes</span> YOUR-PROGRMS PROGRAM-ARGS</span><br><span class="line">callgrind_annotate --auto=<span class="built_in">yes</span> callgrind.out.YOUR-PID</span><br></pre></td></tr></table></figure>
</li>
<li><p>善意提示：不要只看 cache miss rate。<br>比較不同程式用 “perf stat” 量出的 “insn per cycle” 值，然後想想為什麼。Instruction per cycle, cache miss 都討論完後還有時間，也可以討論一下 TLB miss。</p>
</li>
</ol>
<h2 id="反馈"><a href="#反馈" class="headerlink" title="反馈"></a>反馈</h2><h3 id="Louie-Lu"><a href="#Louie-Lu" class="headerlink" title="Louie Lu"></a>Louie Lu</h3><p>感謝 Champ Yen 跟 Scott Tsai 兩位前輩的解釋！</p>
<p>再補充由 brendand gregg 提出的 <a href="http://www.brendangregg.com/methodology.html">Performance Analysis Methodology</a>。<br>然後我有在自己的 <a href="https://hackmd.io/s/BJjL6cQ6#perf-raw-counter">notes</a> 上補充 perf list 出來的 event 怎麼看以及代表的意義，這部份要去翻 intel 的 manual 跟實際操作。<br>也有遇到說 <a href="https://software.intel.com/en-us/forums/software-tuning-performance-optimization-platform-monitoring/topic/557604?fbclid=IwAR1ll2fi9fXqj9Y6wpEe0usP9raFBPXLGM53DaWzpJwZUN-a_I1dPkCQHqI">L1-dcache-load-misses raw code 跟 manual 寫的不一樣</a>的狀況，可是剛剛實際測試兩者是相通的。</p>
<h2 id="原帖"><a href="#原帖" class="headerlink" title="原帖"></a>原帖</h2><ul>
<li><a href="https://www.facebook.com/groups/system.software2016/permalink/1124571464289024/">我們要怎麼在 x86-64 底下測出比較精確的 performance</a></li>
</ul>
]]></content>
      <categories>
        <category>系统与底层</category>
      </categories>
      <tags>
        <tag>TechTalk</tag>
        <tag>performance</tag>
        <tag>cache</tag>
        <tag>x86</tag>
      </tags>
  </entry>
  <entry>
    <title>邂逅爵士乐——记在台湾的一段美好经历</title>
    <url>/2021/how-i-met-jazz/</url>
    <content><![CDATA[<p>各位新春快乐！</p>
<p>很早就想创建一个音乐分类，不如就在新年伊始开个头，碎碎念几句我是如何喜欢上爵士乐的。</p>
<span id="more"></span>

<p>大家可能在咖啡厅、欧美流行音乐中都或多或少听过一点爵士乐，但要说第一次正儿八经接触这种音乐形态，并让我深深爱上它，源自一场在我研究生入学没多久的爵士乐社招新演出。</p>
<p>那是2014年秋，成大爵士乐社在校园社团博览会上的表演。 露天舞台下所有人享受着美妙的音乐和社员分发的小杯鸡尾酒，炎炎夏日感受到无限清凉。 虽然这只是LG G2手持录制的片段，但每次看到这段回忆仍会被深深感动。说起来G2是最早搭载OIS光学防抖的手机，也是当时最窄边框的手机，我从那个时候开始就对手机拍照有较高的要求，淘了这么个韩国水货“洋垃圾”，现在回看当年拍的照片和视频也算能入眼，深感欣慰！</p>


<div style="position: relative; width: 100%; height: 0; padding-bottom: 80%;"><iframe src="//player.bilibili.com/player.html?aid=844279689&bvid=BV1154y1Y7ME&cid=301552198&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div>



<p>没有任何迟疑，我立即报名参加了爵士乐社，在此期间参加了几次社内的培训活动，了解了爵士乐的一些基本概念，甚至那会就装上了iReal Pro，可惜荒废了这么多年！现在还能回想起，有一次大伙去一个社员家的天台烧烤，酒足饭饱，自然是jam时间，那种氛围真的是超级好。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-1.avif"></p>
<p>另一件非常值得分享和回忆的活动，便是在加入爵士乐社后没多久，地处花莲的东华大学音乐学院爵士组举办的<a href="https://music.ndhu.edu.tw/p/406-1072-79900,r3061.php">第二届爵士研习营</a>。报名费用非常便宜，三天时间人民币800块（新台币4000）包吃住，师资阵容也不错，不得不夸一句台湾的这些活动真的很良心。在收到成大爵士乐社的报名通知并跟研究生导师请好假后，我也毫不犹豫地报了名。不过去了后才知道，几乎没有我这种毫无基础的营员😥，除了少量玩得不错的爱好者外，大多数还是职业乐手和音乐系的学生。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-2.avif"></p>
<p>社团成员都是穷书生，大家为了省钱一大早坐六点多的台铁出发前往花莲，抵达花莲站时已经中午十二点多。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-3.avif"></p>
<p>一群人抵达东华大学后，立马前往音乐系报道并领取研习营的资料，包含时间表、一些简易的课件等。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-4.avif"></p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-5.avif"></p>
<p>当天晚上便开始研习营的课程，每节课后必会有jam，特别的嗨！</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-6.avif"></p>
<p>东华大学是台湾最美的大学之一，同时是台湾最早开始在音乐系设立爵士主修的学校，其音乐系也是台湾唯一大学部跟硕士班同时有爵士演奏主修的音乐系。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-7.avif"></p>
<p>音乐系看起来很朴素，与大自然融为一体。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-8.avif"></p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-9.avif"></p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-10.avif"></p>
<p>爵士萨克斯风演奏家张坤德老师上课中，他毕业于伯克利音乐学院。这节课应该是研习营的第一次乐队齐奏课程，当所有声乐一同奏响的那一刻，我感受到了音乐现场的美妙与冲击力，那是在家里听音乐永远都体会不到的乐趣。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-11.avif"></p>
<p>那一届爵士研习营请来了美国的爵士电颤琴演奏家Tony Miceli，尽管我当时无法辨别他的技术有多牛，不过仍记得他的演奏音乐性很强，能打动我这么一个小白，简单说就是好听。在他的乐理课程上，他要求我们每个人根据和声弹点东西，轮到我时我说不会，他说不要紧，无论你弹什么，你至少要弹几个音符给我。更囧的是，我当时带的还是一把没拾音器的箱琴，和我的看客身份简直绝配😅。其实我是一个自尊心很强的人，在研习营第一天发现自己与环境格格不入后，就有过想走的念头。已经忘记当时是和哪位老师交流，他劝我先留下来跟着听听再说，真的感谢他的建议，我也做到了！</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-12.avif"></p>
<p>傍晚黄昏，美到心醉。现在只能惋惜当初只去了两次花莲。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-13.avif"></p>
<p>午饭后的jam活动，研习营的一大好处就是为营员创造了大量演出机会，只要想表演就上。说起来虽然东华大学音乐系的爵士组一直没有爵士吉他教师，但研习营还是欢迎吉他手参加，并邀请来了曾给《中国好歌曲》《中国梦之声》、刘若英、蔡健雅、丁当等等节目和歌手巡演做过电吉他手的邱安炜老师，专门给我们上了一节分享课。课上的 Q&amp;A 环节我厚着脸皮问老师，对于我这种零基础的人该怎么学琴，老师非常详细地介绍了他学琴、练琴过程中不断检视自己的几个方面，当下就有不少顿悟。小炜老师当时拿了一把James Tyler的琴，那也是我第一次认识这个品牌。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-14.avif"></p>
<p>研习营非常有心，除了演奏家、职业乐手外，还请来了一位业内非常资深的音控师高敏福老师，给大家分享现场演出时的调音知识。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-15.avif"></p>
<p>除了常规的教学课程外，爵士研习营的举办人之一、音乐系爵士组的领头人魏广皓教授还与大家探讨了职业发展规划的话题。别说爵士乐这种“没市场的音乐”，就算从事流行大众音乐领域想赚到钱也不容易，未来的路该怎么走值得思考。</p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-16.avif"></p>
<p><img data-src="https://cdn.joouis.com/how-i-met-jazz-17.avif"></p>
<p>短暂而美好的爵士研习营结束后，我便回归课业将重心放在学业和项目，一晃就是五年。</p>
<p>感谢这段难得的经历，让我与爵士结缘。我会一直记得这些日子。</p>
]]></content>
      <categories>
        <category>爱乐之城</category>
      </categories>
      <tags>
        <tag>music</tag>
        <tag>jazz</tag>
        <tag>taiwan</tag>
        <tag>ncku</tag>
        <tag>ndhu</tag>
      </tags>
  </entry>
</search>
